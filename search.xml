<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL与SqlServer的区别</title>
      <link href="/posts/4e19663e.html"/>
      <url>/posts/4e19663e.html</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL与SqlServer的区别"><a href="#MySQL与SqlServer的区别" class="headerlink" title="MySQL与SqlServer的区别"></a>MySQL与SqlServer的区别</h2><blockquote><p>目前最流行的两种后台数据库即为Mysql 和 SQL Server。</p></blockquote><h2 id="相同"><a href="#相同" class="headerlink" title="相同"></a>相同</h2><ul><li>两者最基本的相似之处在于数据存储和属于查询系统。</li><li>都可以使用SQL来访问这两种数据库的数据，都支持ANSI-SQL(数据库管理标准)。</li><li>两种数据库系统都支持二进制关键字和关键索引。</li><li>二者也都提供支持XML的各种格式、也都能够在.NET或J2EE下运行正常。</li><li>都能够利用RAID（独立冗余磁盘阵列）。</li></ul><h2 id="根本区别"><a href="#根本区别" class="headerlink" title="根本区别"></a>根本区别</h2><ol><li>SqlServer服务器的狭隘的、保守的存储引擎，而MySQL服务器的可扩展、开放的存储引擎；</li><li>SqlServer服务器的引擎是Sybase，而MySQL能够提供更多种的选择，如MyISAM、Heap、InnoDB、Berkeley DB；</li><li>MySQL不完全支持陌生的关键词，所以它比SqlServer服务器要少一些相关的数据库；</li><li>MySQL也缺乏一些存储程序的功能，比如MyISAM引擎联支持交换功能；</li><li>MySQL与SqlServer的部分语法有所不同。</li></ol><h2 id="性能方面"><a href="#性能方面" class="headerlink" title="性能方面"></a>性能方面</h2><h3 id="MySQL："><a href="#MySQL：" class="headerlink" title="MySQL："></a>MySQL：</h3><p>纯粹就性能而言，MySQL是相当出色的，因为它包含一个缺省桌面格式MyISAM。MyISAM 数据库与磁盘非常地兼容而不占用过多的CPU和内存。MySQL可以运行于Windows系统而不会发生冲突，在UNIX或类似UNIX系统上运行则更好。商业网站就使用MySQL 作为后台数据库。</p><h3 id="SqlServer"><a href="#SqlServer" class="headerlink" title="SqlServer"></a>SqlServer</h3><p>当提及软件的性能，SQL服务器的稳定性要比它的竞争对手强很多。</p><p>但是，这些特性也要付出代价的。比如，必须增加额外复杂操作，磁盘存储，内存损耗等等。如果你的硬件和软件不能充分支持SQL服务器。</p><h2 id="安全方面"><a href="#安全方面" class="headerlink" title="安全方面"></a>安全方面</h2><ol><li>MySQL和SqlServer都有字节完整的安全机制（缺省IP端口，也可以自己设置）；</li><li>MySQL有一个用于改变数据的二进制日志。因为它是二进制，这一日志能够快速地从主机上复制数据到客户机上。当服务崩溃时，二进制文件也会完整的保存；</li><li>在SQL服务器中，也可以记录SQL的有关查询，但这需要付出很高的代价；</li><li>在恢复性方面，。对于MySQL来说，主要体现在MyISAM的配置上。而SqlServer表现的就很稳健，SQL服务器能够时刻监测数据交换点并能够把数据库损坏的过程保存下来。</li></ol><h2 id="数据库选择"><a href="#数据库选择" class="headerlink" title="数据库选择"></a>数据库选择</h2><ul><li>要建立一个.NET服务器体系，这一体系可以从多个不同平台访问数据，参与数据库的管理，那么选用SqlServer服务器。</li><li>需要海量数据，使用SqlServer。MySQL主要是短小精悍，容易上手，操作简单，免费供用的，在应对海量数据时没有SqlServer效果好</li><li>要建立一个第三方站点，这一站点可以从一些客户端读取数据，那么MySQL将是最好的选择</li><li>MySQL免费供用，而SQLServer正版需要付费购买。</li></ul><h2 id="语法定义"><a href="#语法定义" class="headerlink" title="语法定义"></a>语法定义</h2><h3 id="注释符区别"><a href="#注释符区别" class="headerlink" title="注释符区别"></a>注释符区别</h3><p>SqlServer：<code>–</code>和 <code>/* */</code> </p><p>MySql：<code>–</code>和<code>/**/</code>和<code>#</code></p><h3 id="识别符的区别"><a href="#识别符的区别" class="headerlink" title="识别符的区别"></a>识别符的区别</h3><p>SqlServer识别符是<code>[]</code>，<code>[type]</code>表示他区别于关键字 </p><p>MySQL识别符是 &#96;&#96; &#96;</p><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><ol><li>MySql的存储过程中变量的定义去掉@</li><li>MySql的declare只能用在begin end 的复合语句中，且只能是语句的开头。而SqlServer可以放在里面，也可以放在begin前</li><li>MySql的Execute对应SqlServer的exec</li><li>MySql存储过程调用其他存储过程用call</li><li>SqlServer：select @a&#x3D;count(<em>) from VW_Action MySQL为：select count(</em>) from VW_Action into @a</li><li>MySql存储过程中没有return函数，在MySql中可以用循环和out参数代替</li><li>MySql的out对应SQLServer的output，且mysql 的out要放在变量的前面，SQLServer的output放在变量后面</li></ol><blockquote><p>本文内容参考转载至：<a href="https://javaforall.cn/">全栈程序员战长</a></p><p>原文链接：<a href="https://javaforall.cn/186811.html">MySQL与SqlServer的区别「建议收藏」 - 全栈程序员必看 (javaforall.cn)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目使用python虚拟环境</title>
      <link href="/posts/fa66e403.html"/>
      <url>/posts/fa66e403.html</url>
      
        <content type="html"><![CDATA[<h2 id="项目使用python虚拟环境的原因"><a href="#项目使用python虚拟环境的原因" class="headerlink" title="项目使用python虚拟环境的原因"></a>项目使用python虚拟环境的原因</h2><p>1、由于Python的版本众多，而且其内部的库Package也不同，这就导致在同时进行几个项目时，对库的依赖会存在很大的问题。这个时候就牵涉到&#x3D;&#x3D;对Python以及依赖库的版本管理&#x3D;&#x3D;，方便进行开发，就需要进行虚拟环境的配置。</p><p>2、一般情况下不使用虚拟环境下安装的第三方库是&#x3D;&#x3D;全局或者是整个系统中&#x3D;&#x3D;都可以使用的，但是在一些项目中（特别是运行别人的项目时），可能所需要&#x3D;&#x3D;特定版本&#x3D;&#x3D;的库，这可能是与电脑中安装的库不相符合的，这时候不可能为了每个项目就多次删除\安装不同的库，就需要使用python的虚拟环境。</p><h2 id="建立虚拟环境"><a href="#建立虚拟环境" class="headerlink" title="建立虚拟环境"></a>建立虚拟环境</h2><h3 id="PyCharm配置"><a href="#PyCharm配置" class="headerlink" title="PyCharm配置"></a>PyCharm配置</h3><blockquote><p>&#x3D;&#x3D;使用PyCharm创建项目时建立虚拟环境&#x3D;&#x3D;</p><p>PyCharm版本：2023.2.1</p><p>还可以使用命令行窗口输入指令进行配置虚拟环境，但是对于新手过于不好理解。</p></blockquote><h4 id="新建项目时创建"><a href="#新建项目时创建" class="headerlink" title="新建项目时创建"></a>新建项目时创建</h4><ul><li><p>打开PyCharm，新建项目</p></li><li><p>选择需要创建的项目框架之后，编辑右边配置</p><blockquote><p>1、位置根据自己实际情况选择</p><p>2、①处python编辑器选择【Virtualenv】</p><p>3、②处选择虚拟环境位置，位置默认为test文件下的venv文件夹内（建议不用更改）</p><p>4、③处选择基础解释器，如果构建与本机Python版本相同的环境，则选择本机的Python解释器即可，想构建与本机Python版本不同的环境，则不选或选择一个invalid解释器</p><p>5、继承全局站点软件包和可用于所有项目根据实际情况选择</p><ul><li>继承全局站点软件包即继承本机上安装的库</li></ul><p>6、④【创建】即可</p></blockquote></li></ul><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/python_xnhj1.png" alt="python_xnhj1" style="zoom:60%;" /><ul><li>创建完项目后，在项目的目录会出现一个【venv】文件夹，即虚拟环境的存放文件夹。</li></ul><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/python_xnhj2.png" alt="python_xnhj2" style="zoom:60%;" /><h4 id="查看虚拟环境"><a href="#查看虚拟环境" class="headerlink" title="查看虚拟环境"></a>查看虚拟环境</h4><ul><li><p>创建的项目如图结构，左上角进入【设置】</p><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/python_xnhj3.png" alt="python_xnhj3" style="zoom:60%;" /></li><li><p>左边【项目】—》【python解释器】</p><blockquote><p>如图，可以看到Python解释器后面的解释器名称有一个<strong>（test）</strong></p><p>此时该环境的软件包于我本机的软件包就不相同，可以根据实际情况安装相应的软件包。</p></blockquote><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/pyhon_xnhj4-17000516351301.png" alt="pyhon_xnhj4" style="zoom:60%;" /></li></ul><h4 id="更改项目python解释器"><a href="#更改项目python解释器" class="headerlink" title="更改项目python解释器"></a>更改项目python解释器</h4><p>有时候导入别人的项目到本地运行时（如运行Github上的开源项目）会出现项目相关依赖&#x2F;库于本机不符无法运行的情况，此时就需要给改项目的环境。</p><ul><li><p>打开【设置】—》【项目】—》【python解释器】</p></li><li><p>右边【添加解释器】—》选择【添加本地解释器】</p><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/python_xnhj5.png" alt="python_xnhj5" style="zoom:60%;" /></li><li><p>选择【Virtualenv】—》【新建】，修改虚拟环境位置（默认创建在项目目录的venv下），选择基础解释器（和上面一样）。</p><blockquote><p>注意：如果已经有了需要的虚拟环境，则可以选择【现有】，选择环境所在的目录即可（建议将环境放在对应的项目目录下方便管理。</p></blockquote><img src="http://alan.s3.bitiful.net/blog_Images/2023/11/python_xnhj6.png" alt="python_xnhj6" style="zoom:60%;" /></li></ul><h3 id="命令创建虚拟环境"><a href="#命令创建虚拟环境" class="headerlink" title="命令创建虚拟环境"></a>命令创建虚拟环境</h3><blockquote><p>使用命令创建环境不详细写，目前不使用。</p></blockquote><ul><li><p>进入cmd命令行窗口，输入命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m venv 存放地址\虚拟环境名字</span><br><span class="line"><span class="comment"># 如：python -m venv D:\python\test_venv</span></span><br></pre></td></tr></table></figure></li><li><p>进入<code>Scripts目录</code>，并执行命令<code>activate.bat</code>进行激活环境</p><blockquote><p>调用<code>activate.bat</code>后，下一行的命令提示前出现了<code>(test_venv)</code>这个标识（&#x3D;&#x3D;虚拟环境名字&#x3D;&#x3D;），这就表示，之后所有的命令都是对这个虚拟环境进行操作了。</p></blockquote></li><li><p>activate.bat只需要执行一次即可。之后进入到虚拟环境下中的Scripts目录，进行的所有操作就是对这个虚拟环境进行的操作。</p></li><li><p>&#x3D;&#x3D;在Scripts目录下&#x3D;&#x3D;，查看当前虚拟环境中的安装包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure></li><li><p>安装需要的包，在&#x3D;&#x3D;Scripts目录下&#x3D;&#x3D;执行命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install 包名</span><br></pre></td></tr></table></figure></li><li><p>再次使用命令<code>pip list</code>查看当前已安装包</p></li></ul><blockquote><p>注意：使用命令行操作&#x3D;&#x3D;一定要在虚拟目录中的<strong>Scripts目录</strong>下进行操作&#x3D;&#x3D;，否则操作的就不是当前虚拟环境，而是全局环境了。</p></blockquote><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>1、<a href="https://blog.csdn.net/didi_ya/article/details/120664678">【Python基础】PyCharm配置Python虚拟环境详解_pycharm虚拟环境设置_wendy_ya的博客-CSDN博客</a></p><p>2、<a href="https://blog.csdn.net/xp178171640/article/details/115950985">Python (python -m venv)命令创建虚拟环境_xupeng1644的博客-CSDN博客</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda安装以及命令</title>
      <link href="/posts/3de1b813.html"/>
      <url>/posts/3de1b813.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于Anaconda"><a href="#关于Anaconda" class="headerlink" title="关于Anaconda"></a>关于Anaconda</h2><blockquote><p>Anaconda，一个开源的Python发行版本，可用于管理Python及其相关包，包含了conda、Python等180多个科学包及其依赖项。</p></blockquote><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><blockquote><p>注意：</p><p>其实要是装Anaconda的话，就不用再单独装Python了。</p><p>但是吧大部分人都已经装好了Python，因为一般都是先接触的python，然后直接就单独装好了Python，这不影响安装Anaconda。</p></blockquote><ul><li><p>官网下载：</p><blockquote><p>官网地址：<a href="https://www.anaconda.com/">Anaconda | The World’s Most Popular Data Science Platform</a></p></blockquote></li><li><p>下载完双击安装包安装</p></li><li><p>步骤：</p><p>1、点击“<strong>Next</strong>”。</p><p>2、点击“<strong>I Agree</strong>”。</p><p>3、直接选择“<strong>All User</strong>”，然后点击“<strong>Next</strong>”。</p><p>4、设置安装路径，个文件夹不要使用中文或者空格、特殊字符且文件夹需为空，之后点击“<strong>Next</strong>”。</p><p>5、选择手动安装路径（即第二个），之后点击“<strong>Install</strong>”。</p><blockquote><p>第一个选项就是自动将安装路径填入到系统环境变量中，这里勾选，后面使用着会出现问题，觉得手动配置有难度的当然也可以直接勾选第一个，自动配置，然后手动添加 <strong>环境变量</strong></p></blockquote><p>6、点击“<strong>Next</strong>”。</p><p>7、点击“<strong>Next</strong>” 。</p><p>8、注意：两个都不勾选，然后点击“<strong>Finish</strong>”。 </p></li><li><p>Anaconda已经安装完成。</p></li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li><p>打开电脑【高级系统设置】—&gt;  【环境变量】。</p></li><li><p>在【系统变量】下的【Path】变量，【编辑】—&gt;  【新建】。</p></li><li><p>分三次输入以下信息（按自己实际安装路径输入）</p><blockquote><p><strong>Anaconda安装路径</strong></p><p><strong>Anaconda安装路径\Scripts</strong></p><p><strong>Anaconda安装路径\Library\bin</strong></p></blockquote></li><li><p>一路【确定】。</p></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ul><li><p>打开cmd命令行窗口</p></li><li><p>输入命令查看版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda -version</span><br></pre></td></tr></table></figure></li><li><p>输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda info</span><br></pre></td></tr></table></figure></li><li><p>如果输出内容，则说明环境变量配置成功。</p></li><li><p>如果提示conda不是内部或外部命令，那一般是，Anaconda的 <strong>环境变量</strong>没配置好。</p></li></ul><p>命令</p><ul><li><p><code>activate</code>命令激活默认环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">activate</span><br></pre></td></tr></table></figure></li><li><p>输入 python,看是否有python环境。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="创建、删除和复制虚拟环境"><a href="#创建、删除和复制虚拟环境" class="headerlink" title="创建、删除和复制虚拟环境"></a>创建、删除和复制虚拟环境</h3><ul><li><p>创建名为 <code>env_name</code> 的虚拟环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create --name env_name</span><br></pre></td></tr></table></figure></li><li><p>创建名为 <code>env_name</code> 的虚拟环境并同时安装 <code>python3.7</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create --name env_name python=3.7</span><br></pre></td></tr></table></figure></li><li><p>删除名为 <code>env_name</code> 的虚拟环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda remove --name env_name --all</span><br></pre></td></tr></table></figure></li><li><p>复制名为 <code>env_name</code> 的虚拟环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create --name env_name_new --<span class="built_in">clone</span> env_name_old</span><br></pre></td></tr></table></figure></li></ul><h3 id="激活虚拟环境"><a href="#激活虚拟环境" class="headerlink" title="激活虚拟环境"></a>激活虚拟环境</h3><ul><li><p>激活名为 <code>env_name</code> 的虚拟环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda activate env_name</span><br></pre></td></tr></table></figure></li><li><p>查看当前虚拟环境列表</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list 或 conda info -e</span><br></pre></td></tr></table></figure></li><li><p>给虚拟环境装包</p><p>指定虚拟环境名进行装包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install -n env_name package_name</span><br></pre></td></tr></table></figure><p>激活虚拟环境，并在该虚拟环境下装包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 激活</span></span><br><span class="line">conda activate env_name</span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">conda install package_name</span><br></pre></td></tr></table></figure></li><li><p>安装指定版本号的包：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install peckage_name==x.x</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>更多命令查看优秀博文：</p><p>1、<a href="https://zhuanlan.zhihu.com/p/600930786">Anaconda常用命令汇总 - 知乎 (zhihu.com)</a></p><p>2、<a href="https://blog.csdn.net/chenxy_bwave/article/details/119996001">【精选】Anaconda conda常用命令：从入门到精通_conda命令_笨牛慢耕的博客-CSDN博客</a></p></blockquote><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>1、Anaconda 官方：**<a href="https://www.anaconda.com/">Anaconda | The World’s Most Popular Data Science Platform</a>**</p><p>2、<a href="https://blog.csdn.net/m0_61607990/article/details/129531686?csdn_share_tail=%7B%22type%22:%22blog%22,%22rType%22:%22article%22,%22rId%22:%22129531686%22,%22source%22:%22lee1254%22%7D&fromshare=blogdetail">Anaconda安装教程（超详细版）_EEdith的博客-CSDN博客</a></p><p>3、<a href="https://blog.csdn.net/fan18317517352/article/details/123035625">【精选】Anaconda超详细安装教程（Windows环境下）_conda安装-CSDN博客</a></p><p>4、<a href="https://blog.csdn.net/chenxy_bwave/article/details/119996001">【精选】Anaconda conda常用命令：从入门到精通_conda命令_笨牛慢耕的博客-CSDN博客</a></p><p>5、<a href="https://zhuanlan.zhihu.com/p/600930786">Anaconda常用命令汇总 - 知乎 (zhihu.com)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js安装以及nvm版本管理</title>
      <link href="/posts/2cd70beb.html"/>
      <url>/posts/2cd70beb.html</url>
      
        <content type="html"><![CDATA[<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><blockquote><p>Node.js 就是运行在服务端的 JavaScript。</p><p>Node.js 是一个基于 Chrome JavaScript 运行时建立的一个平台。</p><p>Node.js 是一个事件驱动 I&#x2F;O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 Javascript 的速度非常快，性能非常好。</p></blockquote><blockquote><p> <strong>注意：以下如果使用nvm-windows 来管理 Node.js 版本，建议先安装了nvm，之后通过nvm的安装命令来安装Node.js。</strong></p></blockquote><h2 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h2><blockquote><p>官网地址：<a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><p>官网下载安装包</p></li><li><p>双击安装包，点Next ，勾选使用许可协议，点击Next，选择安装位置</p></li><li><p>一路点击Next，点击Install，点击Finish完成安装。</p></li></ul><h3 id="添加环境"><a href="#添加环境" class="headerlink" title="添加环境"></a>添加环境</h3><ul><li><p>进入高级系统设置 –&gt;  环境变量  –&gt; 编辑系统环境下的变量【Path】</p><blockquote><p>添加Node.js的安装路径</p></blockquote></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ul><li><p>进入cmd命令行窗口，输入命令查看Node.js版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></li><li><p>查看npm版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li><p>正确出现版本信息即安装成功</p></li></ul><h2 id="修改模块默认存放位置"><a href="#修改模块默认存放位置" class="headerlink" title="修改模块默认存放位置"></a>修改模块默认存放位置</h2><p>&#x3D;&#x3D;此步骤修改以后npm全局下载模块的保存位置&#x3D;&#x3D;</p><h3 id="查看npm默认存放位置"><a href="#查看npm默认存放位置" class="headerlink" title="查看npm默认存放位置"></a>查看npm默认存放位置</h3><ul><li><p>查看npm全局模块的存放路径</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm get prefix</span><br></pre></td></tr></table></figure></li><li><p>查看npm缓存默认存放路径</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm get cache</span><br></pre></td></tr></table></figure></li><li><p>npm 全局模块存放位置以及cache的存放位置，一般默认是在 C 盘 “C:\Users\用户\AppData” 下。</p></li></ul><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><ul><li><p>在 nodejs 安装目录下，创建 “node_global” 和 “node_cache” 两个文件夹</p></li><li><p>设置<strong>全局模块的安装路径</strong>到 “node_global” 文件夹，命令如下（地址改为自己的 “node_global” 文件夹地址）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;地址&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>设置<strong>缓存</strong>到 “node_cache” 文件夹，命令如下（地址改为自己的 “node_cache” 文件夹）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;地址&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>&#x3D;&#x3D;注意：&#x3D;&#x3D;将【node_global】的路径加入到【系统变量 】下的【PATH】 变量中，方便直接使用命令行运行</p></li></ul><h3 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h3><ul><li><p>输入下面的命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install express -g</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install express -g</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意：</p><p>“-g”等同于“–global”，“-g” 是<strong>全局安装</strong>，不加“-g”就是默认下载到当前目录。“-g” 表示安装到之前设置的【node_global】目录下，同时nodejs会自动地在node_global文件夹下创建【node_modules】子文件夹。</p></blockquote><ul><li><p>命令运行成功后，下载express模块成功，然后在文件管理器中查看<strong>是否保存到上面自定义的路径下</strong>。即查看”~\nodejs\node_global\node_modules”目录下出现”<strong>express</strong>“文件夹。</p></li><li><p>更多问题查看以下优秀文章：</p><blockquote><p><a href="https://blog.csdn.net/qq_42006801/article/details/124830995">Node.js安装与配置（详细步骤）_nodejs安装及环境配置_liyitongxue的博客-CSDN博客</a></p></blockquote></li></ul><h2 id="nvm-nvm-windows"><a href="#nvm-nvm-windows" class="headerlink" title="nvm &#x2F; nvm-windows"></a>nvm &#x2F; nvm-windows</h2><h3 id="关于nvm"><a href="#关于nvm" class="headerlink" title="关于nvm"></a>关于nvm</h3><p>有时候某个项目需要高版本的 node 才能运行，而有的项目可能只支持低版本的 node，此时就可以借助于一些 Node 版本管理工具，比如 nvm（Node Version Manager），帮助我们快速在不同的版本间切换。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><ul><li><p>Github主页下载</p><p>地址：<a href="https://github.com/coreybutler/nvm-windows/releases">Releases · coreybutler&#x2F;nvm-windows (github.com)</a></p><blockquote><p>nvm-noinstall.zip： 这个是绿色版本，不需要安装，但是使用之前需要配置环境变量；</p><p>nvm-setup.zip：<strong>推荐</strong>下载这个包，无需配置就可以使用；</p><p>Source code(zip)：zip 压缩的源码；</p><p>Sourc code(tar.gz)：tar.gz 的源码，一般用于 Linux 系统。</p></blockquote></li><li><p>安装时都按默认配置点下一步即可，注意 nvm 和 Node.js 的放置位置要选择不同的文件夹。</p></li><li><p>验证：cmd命令行输入nvm，看看是否有返回结果。</p></li></ul><h3 id="配置镜像"><a href="#配置镜像" class="headerlink" title="配置镜像"></a>配置镜像</h3><blockquote><p>安装淘宝的镜像，使下载node的速度加快</p></blockquote><ul><li><p>命令行配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm node_mirror https://npm.taobao.org/mirrors/node/ </span><br><span class="line">nvm npm_mirror https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure></li></ul><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><ul><li><p>查看已经安装了的node版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure></li><li><p>查看可以安装的 node 版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure></li><li><p>安装最新版本的 Node.js，Current 版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install latest</span><br></pre></td></tr></table></figure></li><li><p>安装最新的 LTS 版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install lts</span><br></pre></td></tr></table></figure></li><li><p>指定具体版本号安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install 16.14.2</span><br></pre></td></tr></table></figure><blockquote><p>Downloading 代表正在下载，Installation complete 代表安装结束。</p></blockquote></li><li><p>切换node版本 </p><blockquote><p>通过 <code>nvm ls</code> 查看所有安装的 node 版本</p><p>前面有个 * 号的代表的是当前使用的 node 版本</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm use [版本号]</span><br></pre></td></tr></table></figure></li><li><p>卸载版本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm uninstall [版本号]</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>1、Node.js官方：<a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p><p>2、<a href="https://github.com/coreybutler/nvm-windows/releases">Releases · coreybutler&#x2F;nvm-windows (github.com)</a></p><p>3、<a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程 | 菜鸟教程 (runoob.com)</a></p><p>4、<a href="https://blog.csdn.net/qq_42006801/article/details/124830995">Node.js安装与配置（详细步骤）_nodejs安装及环境配置_liyitongxue的博客-CSDN博客</a></p><p>5、<a href="https://juejin.cn/post/7079246681639763982">Node.js 安装与版本管理（nvm 的使用） - 掘金 (juejin.cn)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo安装以及基本命令</title>
      <link href="/posts/605099a7.html"/>
      <url>/posts/605099a7.html</url>
      
        <content type="html"><![CDATA[<h2 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章。</p><p>hexo官网：<a href="https://hexo.io/zh-cn/">Hexo</a></p></blockquote><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><blockquote><p>Hexo官方参考文档：<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p></blockquote><p>安装前电脑需要安装以下软件：</p><ul><li>Node.js</li><li>Git</li></ul><blockquote><p><strong>Node.js的安装以及相关使用：</strong></p><ul><li>[]</li></ul></blockquote><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><ul><li><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>其中 加入 <code>-g</code>  命令表示全局安装</p><p>局部安装参考hexo官方文档<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p></blockquote><ul><li>Hexo 版本</li></ul>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><h2 id="使用Hexo创建博客"><a href="#使用Hexo创建博客" class="headerlink" title="使用Hexo创建博客"></a>使用Hexo创建博客</h2><blockquote><p>详细见官方文档：<a href="https://hexo.io/zh-cn/docs/commands.html">指令 | Hexo</a></p></blockquote><ul><li><p>在需要创建博客的目录下打开Git Bash 终端 ，创建博客命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>创建新文章</p><blockquote><p>具体命令参考官方文档，本人使用Typora手动写好文章后移动至博客网站目录下，不使用相关命令</p></blockquote></li><li><p>博客网站目录文件夹基本结构</p><ul><li>node_modules</li><li>public</li><li>scaffolds</li><li>scource<ul><li>_drafts</li><li>_posts</li></ul></li><li>themes</li><li>_config.yml</li><li>package.json</li></ul></li></ul><h2 id="常用的基本命令"><a href="#常用的基本命令" class="headerlink" title="常用的基本命令"></a>常用的基本命令</h2><ul><li><p><strong>hexo命令三件套</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment">#用于清理public目录</span></span><br><span class="line">hexo g <span class="comment">#用于编译输出静态网站</span></span><br><span class="line">hexo s <span class="comment">#运行本地服务器，可以进行预览</span></span><br></pre></td></tr></table></figure></li><li><p><strong>详细</strong></p><p>1、生成静态文件</p><p><code>hexo generate</code>  —–&gt;   简写：<code>hexo g</code></p><p>2、运行本地服务器、进行预览</p><p><code>hexo server</code> —–&gt;  简写：<code>hexo s</code></p><p>3、部署网站（本人不使用该命令）</p><p><code>hexo deploy</code> ——&gt;  简写：<code>hexo d</code></p></li><li><p><strong>Gulp压缩命令</strong></p><blockquote><p>注意：该命令不是hexo的命令，是对博客使用了Gulp来进行资源压缩</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gulp</span><br></pre></td></tr></table></figure></li><li><p><strong>总结</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 平时写完文章使用顺序</span></span><br><span class="line">hexo clean   <span class="comment"># 用于清理public目录</span></span><br><span class="line">hexo g       <span class="comment"># 用于编译输出静态网站</span></span><br><span class="line">gulp         <span class="comment"># 对静态资源压缩</span></span><br><span class="line">hexo s       <span class="comment"># 运行本地服务器，可以进行预览</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他</span></span><br><span class="line">hexo d            <span class="comment">#部署网站，可以通过git将网址上传至服务器进行部署</span></span><br><span class="line">hexo new 文章名称  <span class="comment">#创建新的文章</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>1、Hexo官方：<a href="https://hexo.io/zh-cn/index.html">Hexo</a></p><p>2、Hexo官方文档：<a href="https://hexo.io/zh-cn/docs/index.html">文档 | Hexo</a>+<a href="https://hexo.io/zh-cn/docs/commands.html">指令 | Hexo</a></p><p>3、Gulp官方：<a href="https://www.gulpjs.com.cn/">gulp.js - 基于流(stream)的自动化构建工具 | gulp.js中文网 (gulpjs.com.cn)</a></p><p>4、[【超详细】Hexo博客的安装与本地配置_hexo 查看已安装的插件-CSDN博客](<a href="https://blog.csdn.net/Colincoin/article/details/102594799#:~:text=%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%8F%AA%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8">https://blog.csdn.net/Colincoin/article/details/102594799#:~:text=接下来只需要使用</a> npm 即可完成 Hexo 的安装。 1 步骤1： 由于国内的镜像源速度较慢，所以我们利用,步骤6： … 7 步骤7： … 8 步骤8： )</p><p>5、<a href="https://akilar.top/posts/49b73b87/">使用gulp压缩博客静态资源 | Akilarの糖果屋</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令汇总</title>
      <link href="/posts/15720db2.html"/>
      <url>/posts/15720db2.html</url>
      
        <content type="html"><![CDATA[<h1 id="Git常用命令汇总"><a href="#Git常用命令汇总" class="headerlink" title="Git常用命令汇总"></a>Git常用命令汇总</h1><h2 id="基础配置命令："><a href="#基础配置命令：" class="headerlink" title="基础配置命令："></a>基础配置命令：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.name <span class="string">&quot;gitee注册的用户名&quot;</span></span><br><span class="line"><span class="comment"># 配置邮箱</span></span><br><span class="line">git config --global user.email <span class="string">&quot;gitee配置的邮箱&quot;</span></span><br><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">git config --list</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基础常用："><a href="#基础常用：" class="headerlink" title="基础常用："></a>基础常用：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化Git仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 添加到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 记录到版本库</span></span><br><span class="line">git commit -m <span class="string">&quot;信息&quot;</span></span><br></pre></td></tr></table></figure><h2 id="查看及切换历史版本："><a href="#查看及切换历史版本：" class="headerlink" title="查看及切换历史版本："></a>查看及切换历史版本：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看简略信息</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"><span class="comment"># 完整信息，如果出现无法退出，可以按 q</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 查看完整历史（版本切换之后git log可能会出现无法查看的情况）</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定版本</span></span><br><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure><h2 id="Git忽略文件和查看文件状态："><a href="#Git忽略文件和查看文件状态：" class="headerlink" title="Git忽略文件和查看文件状态："></a>Git忽略文件和查看文件状态：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看文件状态</span></span><br><span class="line">git status</span><br></pre></td></tr></table></figure><blockquote><ol><li>红色: 工作区有文件更改</li><li>绿色: 暂存区有文件更改</li><li>nothing to commit: 没有任何文件更改</li></ol></blockquote><blockquote><p>我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。</p><p>创建一个名为 <strong>.gitignore</strong> 的文件，列出要忽略的文件</p></blockquote><p> <code>.gitignore</code> 部分语法:</p><ul><li>项目开发中，一般都会默认准备好<code>.gitignore</code>文件</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部分的语法</span></span><br><span class="line"><span class="comment"># #之后的内容是注释 会被Git忽略</span></span><br><span class="line"><span class="comment"># 忽略 info.txt 文件</span></span><br><span class="line">info.txt</span><br><span class="line"><span class="comment"># 忽略 .vscode/ 目录下所有的文件</span></span><br><span class="line">.vscode</span><br><span class="line"><span class="comment"># 忽略目录下所有.md结尾的文件</span></span><br><span class="line">*.md</span><br><span class="line"><span class="comment"># 会忽略 doc/目录下扩展名为txt的文件</span></span><br><span class="line">doc/*.txt</span><br></pre></td></tr></table></figure><h2 id="Git分支-创建分支："><a href="#Git分支-创建分支：" class="headerlink" title="Git分支-创建分支："></a>Git分支-创建分支：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch 新分支名</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"><span class="comment"># 重命名分支 ，如果默认是master，可以通过这个命令改为main</span></span><br><span class="line">git branch -m 老分支 新分支</span><br></pre></td></tr></table></figure><h2 id="Git分支-合并及删除分支："><a href="#Git分支-合并及删除分支：" class="headerlink" title="Git分支-合并及删除分支："></a>Git分支-合并及删除分支：</h2><blockquote><p>合并分支可以将某个分支上的所有<code>commit</code>，并到当前分支的<code>commit</code></p><p>合并完毕之后，可以<strong>删除</strong>多余分支</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将指定分支合并到当前分支</span></span><br><span class="line">git merge 分支名</span><br><span class="line"><span class="comment"># 删除已合并的分支</span></span><br><span class="line">git branch -d 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这些是目前学习的分支相关命令</span></span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch 新分支名</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"><span class="comment"># 重命名分支 ，如果默认是master，可以通过这个命令改为main</span></span><br><span class="line">git branch -m 老分支 新分支</span><br></pre></td></tr></table></figure><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>查看分支</td><td>git  branch</td></tr><tr><td>创建分支</td><td>git  branch 新分支名</td></tr><tr><td>切换分支</td><td>git  checkout 分支名</td></tr><tr><td><strong>创建+切换分支</strong></td><td>git checkout –b 新分支名</td></tr><tr><td>合并分支</td><td>git  merge 分支名</td></tr><tr><td>删除分支</td><td>git  branch –d 分支名</td></tr><tr><td><strong>强制删除分支</strong></td><td>git branch –D 分支名</td></tr><tr><td>重命名分支</td><td>git  branch –m 老分支名  新分支名</td></tr></tbody></table><h2 id="Git分支-冲突"><a href="#Git分支-冲突" class="headerlink" title="Git分支-冲突"></a>Git分支-冲突</h2><blockquote><p>如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没法干净的合并它们。 </p></blockquote><p>出现冲突的情况：&#x3D;&#x3D;不同分支，相同文件，相同位置，不同修改！！！！&#x3D;&#x3D;</p><p><strong>出现冲突git会在文件中标记冲突的地方，需要对其手动修改。</strong></p><h2 id="更多扩展"><a href="#更多扩展" class="headerlink" title="更多扩展"></a>更多扩展</h2><h3 id="git全局配置-删除"><a href="#git全局配置-删除" class="headerlink" title="git全局配置-删除"></a>git全局配置-删除</h3><blockquote><p>user.name 可以视情况删除哪个自己选</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --<span class="built_in">unset</span> --global user.name</span><br></pre></td></tr></table></figure><h3 id="git版本回退更多"><a href="#git版本回退更多" class="headerlink" title="git版本回退更多"></a>git版本回退更多</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 除了找到对应版本号之外, 还可以用内置的代号</span><br><span class="line"># 回退到  &quot;最近一次提交&quot;   (如果你已经回退, 回到未来需要指定版本号数字字母)</span><br><span class="line">git reset --hard head~0</span><br><span class="line"># 回退到  &quot;上一次提交&quot;</span><br><span class="line">git reset --hard head~1</span><br><span class="line"># 回退到  &quot;上上次提交&quot;</span><br><span class="line">git reset --hard head~2</span><br><span class="line"></span><br><span class="line"># 想退多少次, 先用git log --oneline 打印后根据注释信息, 自己数下回退几次 head~后面写几</span><br></pre></td></tr></table></figure><h4 id="git-reset-和-git-revert"><a href="#git-reset-和-git-revert" class="headerlink" title="git reset 和 git revert"></a>git reset 和 git revert</h4><blockquote><p>如果已经有A -&gt; B -&gt; C，想回到B：</p><p>方法一：reset到B，丢失C：</p><p>A -&gt; B</p><p>方法二：再提交一个revert反向修改，变成B：</p><p>A -&gt; B -&gt; C -&gt; B</p><p>C还在，但是两个B是重复的</p><p>如果C就是瞎提交错了（比如把密码提交上去了），必须reset</p><p>如果C就是修改，现在又要改回来，将来可能再改成C，那你就revert</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机操作 </category>
          
          <category> 关于git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下载CSDN的文章保存为PDF</title>
      <link href="/posts/b85d28b.html"/>
      <url>/posts/b85d28b.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载CSDN的文章保存为PDF"><a href="#下载CSDN的文章保存为PDF" class="headerlink" title="下载CSDN的文章保存为PDF"></a>下载CSDN的文章保存为PDF</h1><ul><li><p>进入到文章界面，按功能键<strong>“F12”</strong>（或者右键检查）</p></li><li><p>进入到控制台，输入如下代码</p><blockquote><ul><li>自动“展开阅读全文”</li><li>删除顶栏、侧栏、相关文章展示、浏览信息、广告、点赞等多余信息。真正的全清爽模式。</li><li>自动输出打印预览、</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function()&#123;</span><br><span class="line">    $(&quot;#side&quot;).remove();</span><br><span class="line">    $(&quot;#comment_title, #comment_list, #comment_bar, #comment_form, .announce, #ad_cen, #ad_bot&quot;).remove();</span><br><span class="line">    $(&quot;.nav_top_2011, #header, #navigator&quot;).remove();</span><br><span class="line">    $(&quot;.p4course_target, .comment-box, .recommend-box, #csdn-toolbar, #tool-box&quot;).remove();</span><br><span class="line">    $(&quot;aside&quot;).remove();</span><br><span class="line">    $(&quot;.tool-box&quot;).remove();</span><br><span class="line">    $(&quot;#toolBarBox&quot;).remove();</span><br><span class="line">    $(&quot;main&quot;).css(&#x27;display&#x27;,&#x27;content&#x27;); </span><br><span class="line">    $(&quot;main&quot;).css(&#x27;float&#x27;,&#x27;left&#x27;);</span><br><span class="line">    $(&quot;.option-box&quot;).remove();</span><br><span class="line">    $(&quot;body&quot;).css(&#x27;min-width&#x27;,0);</span><br><span class="line">    $(&quot;.option-box&quot;).remove();</span><br><span class="line">    window.print();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></li><li><p>回车</p></li><li><p>弹出打印窗口关闭</p></li><li><p>再次“F2”回到文章页面，此时文章页很简洁，检查部分内容可能是折叠的（如代码块，将其展开）</p></li><li><p>检查完毕后，右键-&gt;打印</p><blockquote><p>有的文章页边缘的字会被剪切掉一部分。</p><ul><li>“边距”选择“无”即可解决。</li><li>使用缩放（例如设置“80%”），把整体缩小就不会超过页面了。</li></ul></blockquote></li><li><p>确定文章加载完毕之后，点击打印，将文件重命名保存为PDF</p></li></ul><p><strong>教程参考：</strong></p><blockquote><ul><li><p>[新CSDN文章一键打印、输出PDF（自动阅读全文、全清爽模式） | 码农家园 ](<a href="https://www.codenong.com/cs106602341/#:~:text=%E8%AF%A5%E6%96%B9%E6%B3%95%E5%9C%A8">https://www.codenong.com/cs106602341/#:~:text=该方法在</a> CSDN文章直接打印%2C或者保存PDF（去掉多余内容）上改进而来。 一、功能及修改方法,使用方法 ：按“F12”进入开发者工具，将以下js复制到 console，回车即可一键打印。)</p></li><li><p><a href="https://blog.csdn.net/weixin_44928129/article/details/122569120">如何下载CSDN的文章？_星梦客的博客-CSDN博客</a></p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机操作 </category>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-PTA（线性表）</title>
      <link href="/posts/116927b7.html"/>
      <url>/posts/116927b7.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>数据结构-PTA（线性表）</span><blockquote><p>学习更新中…</p></blockquote><h1 id="实验一-线性表-1-两个有序链表的合并"><a href="#实验一-线性表-1-两个有序链表的合并" class="headerlink" title="实验一 线性表-1 两个有序链表的合并"></a>实验一 线性表-1 两个有序链表的合并</h1><p><strong>题目：</strong></p><p>已知两个非递减有序单链表La与Lb，编写程序把La和Lb合并为新的非递减有序链表Lc。</p><p>单链表的类型描述：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span></span></span><br><span class="line"><span class="class">&#123;</span> ElemType data;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span> *<span class="title">next</span>;</span></span><br><span class="line"> &#125;Lnode,*LinkList;</span><br></pre></td></tr></table></figure><p>输入格式:</p><p>输入分两行，分别在每行给出由若干个正整数构成的非递减有序序列，用−1表示序列的结尾（−1不属于这个序列）。数字用空格间隔。</p><p>输出格式:</p><p>在一行中输出合并后新的有序链表，数字间用空格分开，开头和结尾不能有多余空格；若新链表为空，输出<code>NULL</code>。</p><p>输入样例:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">-1</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">6</span> <span class="number">8</span> <span class="number">10</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">8</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>输入样例:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><p>输出样例:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="literal">NULL</span></span><br></pre></td></tr></table></figure><p><code>代码长度限制：16 KB</code></p><p><code>时间限制：400 ms</code></p><p><code>内存限制：64 MB</code></p><p><strong>分析思路：</strong></p><p>主要逻辑是构建两个有序链表 <code>La</code> 和 <code>Lb</code>，然后调用 <code>hebingLists</code> 函数合并它们，并按递减顺序排列。最后，打印合并后的链表，并释放所有节点的内存。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义链表节点的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span> &#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; Lnode, *LinkList;</span><br></pre></td></tr></table></figure><ol><li><p><code>typedef int ElemType;</code> </p><p>这一行定义了一个数据类型别名 <code>ElemType</code>，它是一个整数类型的别名。这个别名用于表示链表节点中的数据元素类型，你可以根据需要将 <code>ElemType</code> 更改为其他数据类型，例如 <code>typedef double ElemType;</code> 来表示链表节点中存储的是双精度浮点数。</p></li><li><p><code>typedef struct lnode &#123; ... &#125; Lnode, *LinkList;</code> </p><p>这一行定义了一个结构体类型 <code>Lnode</code>，用于表示链表的节点。结构体中包含两个成员变量：</p><ul><li><code>ElemType data;</code>：这是链表节点中存储的数据元素，其类型是上面定义的 <code>ElemType</code>。</li><li><code>struct lnode* next;</code>：这是指向下一个链表节点的指针。由于在结构体中引用了自身的类型，所以需要使用 <code>struct lnode*</code> 来表示指向结构体类型的指针。</li></ul><p>同时，这一行也定义了两个类型别名：</p><ul><li><code>Lnode</code>：这是 <code>struct lnode</code> 结构体类型的别名，可以用 <code>Lnode</code> 来声明链表节点变量。</li><li><code>LinkList</code>：这是 <code>struct lnode*</code> 结构体指针类型的别名，可以用 <code>LinkList</code> 来声明指向链表节点的指针变量。</li></ul></li></ol><p><strong>代码：</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义链表节点的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span> &#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">lnode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; Lnode, *LinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个新节点</span></span><br><span class="line">Lnode* <span class="title function_">createNode</span><span class="params">(ElemType data)</span> &#123;</span><br><span class="line">    Lnode* newNode = (Lnode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Lnode)); <span class="comment">// 为新节点分配内存</span></span><br><span class="line">    newNode-&gt;data = data; <span class="comment">// 设置节点的数据</span></span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 将节点的下一个指针设为NULL，表示该节点是链表的末尾</span></span><br><span class="line">    <span class="keyword">return</span> newNode; <span class="comment">// 返回新节点</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆序链表</span></span><br><span class="line">LinkList <span class="title function_">reverseList</span><span class="params">(LinkList head)</span> &#123;</span><br><span class="line">    LinkList prev = <span class="literal">NULL</span>;</span><br><span class="line">    LinkList current = head;</span><br><span class="line">    LinkList next;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        next = current-&gt;next;</span><br><span class="line">        current-&gt;next = prev;</span><br><span class="line">        prev = current;</span><br><span class="line">        current = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> prev; <span class="comment">// 返回逆序后的新链表的头节点</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并两个有序链表，并以递减顺序排列</span></span><br><span class="line">LinkList <span class="title function_">hebingLists</span><span class="params">(LinkList La, LinkList Lb)</span> &#123;</span><br><span class="line">    Lnode dummy;</span><br><span class="line">    dummy.next = <span class="literal">NULL</span>; <span class="comment">// 创建一个虚拟头节点，并确保新链表为空</span></span><br><span class="line">    Lnode* lc = &amp;dummy; <span class="comment">// lc 指向新链表的头节点</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (La != <span class="literal">NULL</span> &amp;&amp; Lb != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (La-&gt;data &gt;= Lb-&gt;data) &#123; <span class="comment">// 如果 La 的值大于等于 Lb 的值</span></span><br><span class="line">            lc-&gt;next = La; <span class="comment">// 将 La 的节点插入到新链表中</span></span><br><span class="line">            La = La-&gt;next; <span class="comment">// 移动 La 的指针</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果 Lb 的值大于 La 的值</span></span><br><span class="line">            lc-&gt;next = Lb; <span class="comment">// 将 Lb 的节点插入到新链表中</span></span><br><span class="line">            Lb = Lb-&gt;next; <span class="comment">// 移动 Lb 的指针</span></span><br><span class="line">        &#125;</span><br><span class="line">        lc = lc-&gt;next; <span class="comment">// 移动新链表的指针</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理剩余节点</span></span><br><span class="line">    <span class="keyword">if</span> (La != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        lc-&gt;next = La; <span class="comment">// 如果 La 还有剩余节点，将其插入到新链表中</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        lc-&gt;next = Lb; <span class="comment">// 如果 Lb 还有剩余节点，将其插入到新链表中</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> reverseList(dummy.next); <span class="comment">// 返回逆序后的新链表的头节点</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printList</span><span class="params">(LinkList L)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (L != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, L-&gt;data); <span class="comment">// 打印节点的数据</span></span><br><span class="line">        <span class="keyword">if</span> (L-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>); <span class="comment">// 如果不是最后一个节点，打印一个空格</span></span><br><span class="line">        &#125;</span><br><span class="line">        L = L-&gt;next; <span class="comment">// 移动到下一个节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    LinkList La = <span class="literal">NULL</span>, Lb = <span class="literal">NULL</span>, Lc = <span class="literal">NULL</span>;</span><br><span class="line">    ElemType num;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建第一个有序链表 La</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Lnode* newNode = createNode(num);</span><br><span class="line">        newNode-&gt;next = La;</span><br><span class="line">        La = newNode; <span class="comment">// 将新节点插入到 La 链表的头部</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建第二个有序链表 Lb</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Lnode* newNode = createNode(num);</span><br><span class="line">        newNode-&gt;next = Lb;</span><br><span class="line">        Lb = newNode; <span class="comment">// 将新节点插入到 Lb 链表的头部</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合并两个有序链表</span></span><br><span class="line">    Lc = hebingLists(La, Lb);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印合并后的链表</span></span><br><span class="line">    <span class="keyword">if</span> (Lc == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        printList(Lc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放链表内存</span></span><br><span class="line">    <span class="keyword">while</span> (Lc != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        Lnode* temp = Lc;</span><br><span class="line">        Lc = Lc-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp); <span class="comment">// 释放节点的内存</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 刷题笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 线性表 </tag>
            
            <tag> PTA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-线性表</title>
      <link href="/posts/5b12b8a1.html"/>
      <url>/posts/5b12b8a1.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>数据结构-线性表</span><blockquote><p>学习更新中…</p></blockquote><h1 id="一、顺序表的表示"><a href="#一、顺序表的表示" class="headerlink" title="一、顺序表的表示"></a>一、顺序表的表示</h1><p>线性表的顺序表示又称<strong>为顺序存储结构</strong>或顺序映像。</p><p>顺序存储<strong>定义</strong>：把逻辑上相邻的数据元素存储在物理上相邻的存储单元中的存储结构。</p><p><strong>特点</strong>：逻辑上相邻的元素，物理上也相邻</p><p>顺序<strong>存储方法</strong>：用一组地址连续的存储单元依次存储线性表的元素。</p><h1 id="二、数据结构的基本运算"><a href="#二、数据结构的基本运算" class="headerlink" title="二、数据结构的基本运算"></a>二、数据结构的基本运算</h1><h2 id="1、修改"><a href="#1、修改" class="headerlink" title="1、修改"></a>1、修改</h2><p>通过数组的下标便可访问某个特定元素并修改</p><p>核心语句：<code>V[i] = x</code></p><p>修改操作的时间效率是O(1)</p><h2 id="2、插入"><a href="#2、插入" class="headerlink" title="2、插入"></a>2、插入</h2><p>在线性表的第 i 位置前插入一个元素</p><p>步骤：</p><ul><li>将第n至第i位的元素向后移动一个元素</li><li>将要插入的元素写到第i个位置</li><li>表长加1</li></ul><blockquote><p>注意：要判断插入位置i是否合法（即i不能为复数，i不能大于n；表是否已满。</p></blockquote><p>  核心语句：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(j = n; j &gt;=i; j--)&#123;</span><br><span class="line">    a[j + <span class="number">1</span>] = a[j]; <span class="comment">//元素后移一个位置</span></span><br><span class="line">a[i] = x;  <span class="comment">//插入x</span></span><br><span class="line">n++;   <span class="comment">// 表长加1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、删除"><a href="#3、删除" class="headerlink" title="3、删除"></a>3、删除</h2><p>删除线性表的第i个位置上的元素</p><p>步骤：</p><ul><li>将第i + 1至第n位的元素向前移动一个位置</li><li>表长减1</li></ul><p>核心语句：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line">a[j - <span class="number">1</span>] = a[j];</span><br><span class="line">n--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 线性表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构汇总</title>
      <link href="/posts/15466ebb.html"/>
      <url>/posts/15466ebb.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>数据结构汇总</span><blockquote><p>学习更新中…</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>数据结构：</p><ul><li>逻辑结构：<ul><li>线性结构（线性表、栈、队、串、数组）</li><li>非线性结构：<ul><li>树结构</li><li>图结构</li></ul></li></ul></li><li>物理（储存结构）：<ul><li>顺序结构</li><li>链式结构</li><li>索引结构</li><li>散列结构</li></ul></li><li>数据运算：<ul><li>插入运算</li><li>删除运算</li><li>修改运算</li><li>查找运算</li><li>排序运算</li></ul></li></ul><hr><p><strong>线性结构的定义:</strong></p><p>若结构是非空有限集，则有且仅有一个开始结点和一个终端结点，并且所有结点都最多只有一个直接前趋和一个直接后继。</p><p><strong>特点：</strong></p><ul><li>只有一个首结点和尾结点</li><li>除首尾结点外，其他结点只有一个直接前驱和一个直接后继。</li></ul><p>线性结构包括: <strong>线性表、堆栈、队列、字符串、数组等</strong>，其中最典型、最常用的是线性表</p><hr><h1 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h1><ol><li><a href="https://www.alanblog.cn/posts/5b12b8a1.html">数据结构-线性表</a></li><li>[数据结构-栈和队列]</li><li>[数据结构-串]</li><li>[数组和广义表]</li><li>[树与二叉树]</li></ol><hr><h1 id="刷题笔记"><a href="#刷题笔记" class="headerlink" title="刷题笔记"></a>刷题笔记</h1><ol><li><a href="https://www.alanblog.cn/posts/116927b7.html">数据结构-PTA（线性表）</a></li><li>[数据结构-PTA（栈）]</li><li>[数据结构-PTA（队列）]</li><li>[数据结构-PTA（树）]</li><li>[数据结构-PTA（图）]</li><li>[数据结构-PTA（查找）]</li><li>[数据结构-PTA（排序）]</li><li>[数据结构-PTA（综合）]</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xshell突然无法连接VMware的Linux虚拟机</title>
      <link href="/posts/14569119.html"/>
      <url>/posts/14569119.html</url>
      
        <content type="html"><![CDATA[<h1 id="Xshell突然无法连接VMware的Linux虚拟机"><a href="#Xshell突然无法连接VMware的Linux虚拟机" class="headerlink" title="Xshell突然无法连接VMware的Linux虚拟机"></a>Xshell突然无法连接VMware的Linux虚拟机</h1><blockquote><p><strong>问题：</strong></p><ul><li>使用Xshell时突然无法连接虚拟机，之前已经配置好所有的网络，突然无法连接了。</li><li>ifconfig中没有<strong>ens33</strong></li></ul></blockquote><ul><li>无法连接网络，无法连接Xshell；</li><li>终端执行<code>ifconfig</code>显示没有ens33</li></ul><p><strong>检查：</strong></p><ul><li>对配置文件进行检查</li></ul><blockquote><p>详情参考<a href="https://www.alanblog.cn/posts/82f3104a.html">大数据环境搭建（Hadoop）</a>中的<strong>单机网络配置</strong>。</p></blockquote><p>对配置文件检查后未发现问题，使用如下解决方法。</p><p><strong>解决步骤：</strong></p><ul><li><p>执行<code>ifconfig</code>后 只有lo、virbr0，却没有<strong>ens33</strong></p><p>执行命令：</p><blockquote><p>ifconfig ens33 up</p></blockquote></li><li><p>执行上述命令之后，ifconfig 中有ens33的，但是无id。</p><p>分别执行命令：</p><blockquote><p>systemctl stop NetworkManager<br>systemctl disable NetworkManager</p></blockquote><p>激活连接</p><blockquote><p>ifup ens33</p></blockquote><p>重启网络</p><blockquote><p>service network restart</p></blockquote></li><li><p>重新启动虚拟机以及Xshell即可</p><blockquote><p>reboot</p></blockquote></li></ul><blockquote><p>解决办法参考至：<a href="https://blog.csdn.net/milai_/article/details/123299012?utm_source=miniapp_weixin">突然无法连接虚拟机：ifconfig中没有ens33_ifconfig没有ens33-CSDN博客</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大数据技术 </category>
          
          <category> 基础（环境）配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 大数据 </tag>
            
            <tag> Xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<span class='p center logo'>Markdown语法与外挂标签写法汇总</span><blockquote><p>文章参考：</p><ol><li><a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></li><li><a href="https://www.fomal.cc/posts/2013454d.html">Markdown语法与外挂标签写法汇总| Fomalhaut🥝</a></li><li><a href="https://akilar.top/posts/615e2dec/">Tag Plugins Plus | Akilarの糖果屋</a></li></ol></blockquote><hr><h1 id="1、外挂标签插件安装（站长）"><a href="#1、外挂标签插件安装（站长）" class="headerlink" title="1、外挂标签插件安装（站长）"></a>1、外挂标签插件安装（站长）</h1><p>外挂标签的引入安装详见：<a href="https://akilar.top/posts/615e2dec/">Tag Plugins Plus | Akilarの糖果屋</a></p><hr><h1 id="2、Markdown语法自带格式"><a href="#2、Markdown语法自带格式" class="headerlink" title="2、Markdown语法自带格式"></a>2、Markdown语法自带格式</h1><blockquote><p>注意：使用Typora软件Markdown自带的语法可以有快捷编辑。</p></blockquote><h2 id="（1）代码块"><a href="#（1）代码块" class="headerlink" title="（1）代码块"></a>（1）代码块</h2><div class="tabs" id="代码块"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#代码块-1">语法格式</button></li><li class="tab"><button type="button" data-href="#代码块-2">示例代码</button></li><li class="tab"><button type="button" data-href="#代码块-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="代码块-1"><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\```python</span><br><span class="line"></span><br><span class="line">代码块</span><br><span class="line"></span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="代码块-2"><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\```python</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">代码块</span></span><br><span class="line">print(type(&quot;lanxin&quot;))</span><br><span class="line">print(type(666))</span><br><span class="line">print(type(3.12))</span><br><span class="line"></span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="代码块-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码块</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="string">&quot;lanxin&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">666</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">3.12</span>))</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（2）多级标题"><a href="#（2）多级标题" class="headerlink" title="（2）多级标题"></a>（2）多级标题</h2><div class="tabs" id="多级标题"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#多级标题-1">示例代码</button></li><li class="tab"><button type="button" data-href="#多级标题-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="多级标题-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="多级标题-2"><p>见文章标题。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（3）文字样式"><a href="#（3）文字样式" class="headerlink" title="（3）文字样式"></a>（3）文字样式</h2><div class="tabs" id="文字样式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#文字样式-1">示例代码</button></li><li class="tab"><button type="button" data-href="#文字样式-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="文字样式-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="文字样式-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（4）引用"><a href="#（4）引用" class="headerlink" title="（4）引用"></a>（4）引用</h2><div class="tabs" id="引用"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#引用-1">示例代码</button></li><li class="tab"><button type="button" data-href="#引用-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="引用-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt;  </span></span><br><span class="line"><span class="quote">&gt; 一级引用演示</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;一级引用演示</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="引用-2"><blockquote><p>一级引用演示</p><blockquote><p>一级引用演示</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（5）分割线"><a href="#（5）分割线" class="headerlink" title="（5）分割线"></a>（5）分割线</h2><div class="tabs" id="分割线"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分割线-1">示例代码</button></li><li class="tab"><button type="button" data-href="#分割线-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分割线-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分割线-2"><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（6）列表（-空格）"><a href="#（6）列表（-空格）" class="headerlink" title="（6）列表（*,+,-,空格）"></a>（6）列表（*,+,-,空格）</h2><p><strong>有序列表</strong></p><div class="tabs" id="有序列表"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#有序列表-1">示例代码</button></li><li class="tab"><button type="button" data-href="#有序列表-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="有序列表-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="有序列表-2"><ul><li>Java</li><li>Python</li></ul><ul><li>Java</li><li>Python</li></ul><ul><li>Java</li><li>Python</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p><strong>无序列表</strong></p><div class="tabs" id="无序列表"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#无序列表-1">示例代码</button></li><li class="tab"><button type="button" data-href="#无序列表-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="无序列表-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="无序列表-2"><p>1.<br>2.<br>3.<br>4. </p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（7）图片"><a href="#（7）图片" class="headerlink" title="（7）图片"></a>（7）图片</h2><div class="tabs" id="图片"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#图片-1">[语法格式]</button></li><li class="tab"><button type="button" data-href="#图片-2">[示例代码]</button></li><li class="tab"><button type="button" data-href="#图片-3">[渲染演示]</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="图片-1"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="图片-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 本地图片:</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/themes/butterfly/source/img/avatar.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="section"># 在线图片:</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/lanxin1216/Resource_Library@main/img/Markdown.webp</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="图片-3"><p>本地图片:<br><img src="/themes/butterfly/source/img/avatar.jpg" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/lanxin1216/Resource_Library@main/img/Markdown.webp" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（8）表格"><a href="#（8）表格" class="headerlink" title="（8）表格"></a>（8）表格</h2><div class="tabs" id="表格"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#表格-1">示例代码</button></li><li class="tab"><button type="button" data-href="#表格-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="表格-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="表格-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（9）公式"><a href="#（9）公式" class="headerlink" title="（9）公式"></a>（9）公式</h2><div class="tabs" id="公式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#公式-1">示例代码</button></li><li class="tab"><button type="button" data-href="#公式-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="公式-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="公式-2"><p>$$<br>\Gamma(z)&#x3D;\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h1 id="3、外挂标签语法（店长）"><a href="#3、外挂标签语法（店长）" class="headerlink" title="3、外挂标签语法（店长）"></a>3、外挂标签语法（店长）</h1><h2 id="（1）行内文本样式-text"><a href="#（1）行内文本样式-text" class="headerlink" title="（1）行内文本样式 text"></a>（1）行内文本样式 text</h2><div class="tabs" id="text"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#text-1">标签语法</button></li><li class="tab"><button type="button" data-href="#text-2">示例代码</button></li><li class="tab"><button type="button" data-href="#text-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="text-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="text-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（2）行内文本-span"><a href="#（2）行内文本-span" class="headerlink" title="（2）行内文本 span"></a>（2）行内文本 span</h2><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#span-1">标签语法</button></li><li class="tab"><button type="button" data-href="#span-2">配置参数</button></li><li class="tab"><button type="button" data-href="#span-3">示例代码</button></li><li class="tab"><button type="button" data-href="#span-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="span-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-2"><ul><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="span-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（3）段落文本-p"><a href="#（3）段落文本-p" class="headerlink" title="（3）段落文本 p"></a>（3）段落文本 p</h2><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#p-1">标签语法</button></li><li class="tab"><button type="button" data-href="#p-2">配置参数</button></li><li class="tab"><button type="button" data-href="#p-3">示例代码</button></li><li class="tab"><button type="button" data-href="#p-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="p-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-2"><ul><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="p-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（4）引用-note"><a href="#（4）引用-note" class="headerlink" title="（4）引用 note"></a>（4）引用 note</h2><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note-1">通用配置</button></li><li class="tab"><button type="button" data-href="#note-2">语法格式</button></li><li class="tab"><button type="button" data-href="#note-3">配置参数</button></li><li class="tab"><button type="button" data-href="#note-4">示例代码</button></li><li class="tab"><button type="button" data-href="#note-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><ol><li>自带icon</li></ol><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>class</td><td>【可选】标识，不同的标识有不同的配色 （ default &#x2F; primary &#x2F; success &#x2F; info &#x2F; warning &#x2F; danger ）</td></tr><tr><td>no-icon</td><td>【可选】不显示 icon</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style （simple&#x2F;modern&#x2F;flat&#x2F;disabled）</td></tr></tbody></table><ol><li>外部icon</li></ol><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>class</td><td>【可选】标识，不同的标识有不同的配色 （ default &#x2F; primary &#x2F; success &#x2F; info &#x2F; warning &#x2F; danger ）</td></tr><tr><td>no-icon</td><td>【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style （simple&#x2F;modern&#x2F;flat&#x2F;disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-4"><details class="folding-tag" ><summary> 自带icon </summary>              <div class='content'>              <ol><li><p>simple样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>modern样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>flat样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>disabled样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>no-icon样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" ><summary> 外部icon </summary>              <div class='content'>              <ol><li><p>simple样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>modern样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>flat样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>disabled样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>no-icon样式</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-5"><details class="folding-tag" ><summary> 自带icon </summary>              <div class='content'>              <ol><li>simple样式</li></ol><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div><ol start="2"><li>modern样式</li></ol><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><ol start="3"><li>flat样式</li></ol><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><ol start="4"><li>disabled样式</li></ol><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><ol start="5"><li>no-icon样式</li></ol><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" ><summary> 外部icon </summary>              <div class='content'>              <ol><li>simple样式</li></ol><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="2"><li>modern样式</li></ol><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="3"><li>flat样式</li></ol><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="4"><li>disabled样式</li></ol><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="5"><li>no-icon样式</li></ol><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（5）上标标签-tip"><a href="#（5）上标标签-tip" class="headerlink" title="（5）上标标签 tip"></a>（5）上标标签 tip</h2><div class="tabs" id="tip"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tip-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tip-2">配置参数</button></li><li class="tab"><button type="button" data-href="#tip-3">示例代码</button></li><li class="tab"><button type="button" data-href="#tip-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tip-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-2"><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tip-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（6）动态标签-anima"><a href="#（6）动态标签-anima" class="headerlink" title="（6）动态标签 anima"></a>（6）动态标签 anima</h2><div class="tabs" id="anima"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#anima-1">标签语法</button></li><li class="tab"><button type="button" data-href="#anima-2">配置参数</button></li><li class="tab"><button type="button" data-href="#anima-3">示例代码</button></li><li class="tab"><button type="button" data-href="#anima-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="anima-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="anima-2"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类faa-parent animated-hover。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类faa-fast或faa-slow来控制动画快慢。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="anima-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="anima-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><p>2.调整动画速度</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><p>3.On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（7）复选列表-checkbox"><a href="#（7）复选列表-checkbox" class="headerlink" title="（7）复选列表  checkbox"></a>（7）复选列表  checkbox</h2><div class="tabs" id="checkbox"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#checkbox-1">标签语法</button></li><li class="tab"><button type="button" data-href="#checkbox-2">配置参数</button></li><li class="tab"><button type="button" data-href="#checkbox-3">示例代码</button></li><li class="tab"><button type="button" data-href="#checkbox-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="checkbox-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-2"><ol><li>样式: plus, minus, times</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="checkbox-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（8）单选列表-radio"><a href="#（8）单选列表-radio" class="headerlink" title="（8）单选列表 radio"></a>（8）单选列表 radio</h2><div class="tabs" id="radio"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#radio-1">标签语法</button></li><li class="tab"><button type="button" data-href="#radio-2">配置参数</button></li><li class="tab"><button type="button" data-href="#radio-3">示例代码</button></li><li class="tab"><button type="button" data-href="#radio-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="radio-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-2"><ol><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="radio-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（9）时间轴-timeline"><a href="#（9）时间轴-timeline" class="headerlink" title="（9）时间轴 timeline"></a>（9）时间轴 timeline</h2><div class="tabs" id="timeline"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#timeline-1">标签语法</button></li><li class="tab"><button type="button" data-href="#timeline-2">配置参数</button></li><li class="tab"><button type="button" data-href="#timeline-3">示例代码</button></li><li class="tab"><button type="button" data-href="#timeline-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="timeline-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-2"><ol><li>title:标题&#x2F;时间线</li><li>color:timeline颜色:default(留空) &#x2F; blue &#x2F; pink &#x2F; red &#x2F; purple &#x2F; orange &#x2F; green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 日志时间轴 [,blue] %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2023-07-29 [Alan&amp;Blog&amp;部署] --&gt;</span><br><span class="line"><span class="bullet">-</span> v1.0.0</span><br><span class="line">1、部署至Vercel。</span><br><span class="line">2、完成Github Action自动部署</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2023-07-28 [Alan&amp;Blog部署] --&gt;</span><br><span class="line">1、项目源码储存至GitHub，部署至GitHub Pages。</span><br><span class="line">2、可以使用Github的初始域名访问。</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2023-07-26 [Alan&amp;Blog开始部署] --&gt;</span><br><span class="line">Alan&amp;Blog正式开始设计部署。</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="timeline-4"><div class="timeline blue]"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>日志时间轴 [</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-29 [Alan&amp;Blog&amp;部署]</p></div></div><div class='timeline-item-content'><ul><li>v1.0.0<br>1、部署至Vercel。<br>2、完成Github Action自动部署</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-28 [Alan&amp;Blog部署]</p></div></div><div class='timeline-item-content'><p>1、项目源码储存至GitHub，部署至GitHub Pages。<br>2、可以使用Github的初始域名访问。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-26 [Alan&amp;Blog开始部署]</p></div></div><div class='timeline-item-content'><p>Alan&amp;Blog正式开始设计部署。</p></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（10）链接卡片-link"><a href="#（10）链接卡片-link" class="headerlink" title="（10）链接卡片 link"></a>（10）链接卡片 link</h2><div class="tabs" id="link"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#link-1">标签语法</button></li><li class="tab"><button type="button" data-href="#link-2">示例代码</button></li><li class="tab"><button type="button" data-href="#link-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="link-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="link-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（11）按钮-btns"><a href="#（11）按钮-btns" class="headerlink" title="（11）按钮 btns"></a>（11）按钮 btns</h2><div class="tabs" id="btns"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#btns-1">标签语法</button></li><li class="tab"><button type="button" data-href="#btns-2">配置参数</button></li><li class="tab"><button type="button" data-href="#btns-3">示例代码</button></li><li class="tab"><button type="button" data-href="#btns-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="btns-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btns-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <b>标题</b>和<p>描述文字</p></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th align="center">参数</th><th align="left"><strong>含义</strong></th></tr></thead><tbody><tr><td align="center">wide</td><td align="left">宽一点的按钮</td></tr><tr><td align="center">fill</td><td align="left">填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td align="center">center</td><td align="left">居中，按钮之间是固定间距</td></tr><tr><td align="center">around</td><td align="left">居中分散</td></tr><tr><td align="center">grid2</td><td align="left">等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td align="center">grid3</td><td align="left">等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td align="center">grid4</td><td align="left">等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td align="center">grid5</td><td align="left">等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btns-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="btns-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div><p>2.或者含有图标的按钮</p><div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（12）网站卡片-sites"><a href="#（12）网站卡片-sites" class="headerlink" title="（12）网站卡片 sites"></a>（12）网站卡片 sites</h2><div class="tabs" id="sites"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#sites-1">标签语法</button></li><li class="tab"><button type="button" data-href="#sites-2">示例代码</button></li><li class="tab"><button type="button" data-href="#sites-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="sites-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sites-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="sites-3"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（13）行内图片-inlineimage"><a href="#（13）行内图片-inlineimage" class="headerlink" title="（13）行内图片 inlineimage"></a>（13）行内图片 inlineimage</h2><div class="tabs" id="inlineimage"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inlineimage-1">标签语法</button></li><li class="tab"><button type="button" data-href="#inlineimage-2">配置参数</button></li><li class="tab"><button type="button" data-href="#inlineimage-3">示例代码</button></li><li class="tab"><button type="button" data-href="#inlineimage-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inlineimage-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-2"><p>高度：height&#x3D;20px</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="inlineimage-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（14）折叠框-folding"><a href="#（14）折叠框-folding" class="headerlink" title="（14）折叠框 folding"></a>（14）折叠框 folding</h2><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#folding-1">标签语法</button></li><li class="tab"><button type="button" data-href="#folding-2">示例代码</button></li><li class="tab"><button type="button" data-href="#folding-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="folding-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><ol><li><p>颜色：blue, cyan, green, yellow, red</p></li><li><p>状态：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg"></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（15）分栏-tab"><a href="#（15）分栏-tab" class="headerlink" title="（15）分栏 tab"></a>（15）分栏 tab</h2><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab-1">标签语法</button></li><li class="tab"><button type="button" data-href="#tab-2">配置参数</button></li><li class="tab"><button type="button" data-href="#tab-3">示例代码</button></li><li class="tab"><button type="button" data-href="#tab-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-2"><ol><li>Unique name :</li></ol><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子&#x2F;页面的URL必须是唯一的！</p></li></ul><ol start="2"><li>[index]:</li></ol><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul><ol start="3"><li>[Tab caption]:</li></ol><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul><ol start="4"><li>[@icon]:</li></ol><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（16）阿里图标-icon"><a href="#（16）阿里图标-icon" class="headerlink" title="（16）阿里图标 icon"></a>（16）阿里图标 icon</h2><div class="tabs" id="icon"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#icon-1">标签语法</button></li><li class="tab"><button type="button" data-href="#icon-2">配置参数</button></li><li class="tab"><button type="button" data-href="#icon-3">示例代码</button></li><li class="tab"><button type="button" data-href="#icon-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="icon-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-2"><ol><li><p>icon-xxxx：表示图标font-class,可以在自己的阿里矢量图标库项目的font-class引用方案内查询并复制。</p></li><li><p>font-size：表示图标大小，直接填写数字即可，单位为em。图标大小默认值为1em。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（17）特效标签-wow-（已经删除）"><a href="#（17）特效标签-wow-（已经删除）" class="headerlink" title="~~（17）特效标签 wow ~~（已经删除）"></a>~~（17）特效标签 wow ~~（已经删除）</h2><h2 id="（18）注释-notation"><a href="#（18）注释-notation" class="headerlink" title="（18）注释 notation"></a>（18）注释 notation</h2><div class="tabs" id="notation"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#notation-1">标签语法</button></li><li class="tab"><button type="button" data-href="#notation-2">配置参数</button></li><li class="tab"><button type="button" data-href="#notation-3">示例代码</button></li><li class="tab"><button type="button" data-href="#notation-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="notation-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-2"><ol><li><p>label: 注释词汇</p></li><li><p>text: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="notation-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（19）气泡注释-bubble"><a href="#（19）气泡注释-bubble" class="headerlink" title="（19）气泡注释 bubble"></a>（19）气泡注释 bubble</h2><div class="tabs" id="bubble"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#bubble-1">标签语法</button></li><li class="tab"><button type="button" data-href="#bubble-2">配置参数</button></li><li class="tab"><button type="button" data-href="#bubble-3">示例代码</button></li><li class="tab"><button type="button" data-href="#bubble-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="bubble-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-2"><ol><li><p>content: 注释词汇</p></li><li><p>notation: 悬停显示的注解内容</p></li><li><p>background-color: 可选，气泡背景色。默认为“#71a4e3”</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="bubble-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（20）引用文献-reference"><a href="#（20）引用文献-reference" class="headerlink" title="（20）引用文献 reference"></a>（20）引用文献 reference</h2><blockquote><p>演示参考至<a href="https://akilar.top/posts/615e2dec/">Akilarの糖果屋</a></p></blockquote><div class="tabs" id="reference"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#reference-1">标签语法</button></li><li class="tab"><button type="button" data-href="#reference-2">配置参数</button></li><li class="tab"><button type="button" data-href="#reference-3">示例代码</button></li><li class="tab"><button type="button" data-href="#reference-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="reference-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="reference-2"><ol><li>referto 引用上标</li></ol><ul><li><p>id: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p>literature: 引用的参考文献名称</p></li></ul><ol start="2"><li>referfrom 引用出处</li></ol><ul><li><p>id: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p>literature: 引用的参考文献名称</p></li><li><p>url: 引用的参考文献链接，可省略</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="reference-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="reference-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（21）PDF展示"><a href="#（21）PDF展示" class="headerlink" title="（21）PDF展示"></a>（21）PDF展示</h2><div class="tabs" id="pdf展示"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#pdf展示-1">标签语法</button></li><li class="tab"><button type="button" data-href="#pdf展示-2">配置参数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="pdf展示-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="pdf展示-2"><ul><li>文件路径: 可以是相对路径或者是在线链接</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="（22）隐藏块"><a href="#（22）隐藏块" class="headerlink" title="（22）隐藏块"></a>（22）隐藏块</h2><div class="tabs" id="隐藏块"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#隐藏块-1">标签语法</button></li><li class="tab"><button type="button" data-href="#隐藏块-2">配置参数</button></li><li class="tab"><button type="button" data-href="#隐藏块-3">示例代码</button></li><li class="tab"><button type="button" data-href="#隐藏块-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="隐藏块-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="隐藏块-2"><ul><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="隐藏块-3"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/lanxin1216/Resource_Library@main/img/djsjs.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="隐藏块-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://cdn.jsdelivr.net/gh/lanxin1216/Resource_Library@main/img/djsjs.jpg" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 软件&#92;框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware的和Linux操作系统的安装搭建</title>
      <link href="/posts/4e52c25a.html"/>
      <url>/posts/4e52c25a.html</url>
      
        <content type="html"><![CDATA[<h1 id="VMware的和Linux操作系统的安装搭建"><a href="#VMware的和Linux操作系统的安装搭建" class="headerlink" title="VMware的和Linux操作系统的安装搭建"></a>VMware的和Linux操作系统的安装搭建</h1><h2 id="下载VMware虚拟机"><a href="#下载VMware虚拟机" class="headerlink" title="下载VMware虚拟机"></a>下载VMware虚拟机</h2><blockquote><p>官网：<a href="https://www.vmware.com/cn/products/workstation-pro.html">Windows 虚拟机 | Workstation Pro | VMware | CN</a></p><p>个人U盘：LANIXN03</p></blockquote><h2 id="下载CentOS-7-3镜像"><a href="#下载CentOS-7-3镜像" class="headerlink" title="下载CentOS-7.3镜像"></a>下载CentOS-7.3镜像</h2><blockquote><p>CentOS-7.3镜像：</p><p>百度网盘链接: <a href="https://pan.baidu.com/s/1tN8s78_q24F-VebnOTutBg?pwd=1111">https://pan.baidu.com/s/1tN8s78_q24F-VebnOTutBg?pwd=1111</a> </p><p>提取码: 1111 </p><p>个人U盘：LANIXN03</p></blockquote><h2 id="CentOS-7-3虚拟机安装"><a href="#CentOS-7-3虚拟机安装" class="headerlink" title="CentOS-7.3虚拟机安装"></a>CentOS-7.3虚拟机安装</h2><ul><li>安装好VMware虚拟机之后，启动VMware虚拟机，点击【创建新的虚拟机】—&gt;【下一步】</li><li>点击【浏览】，选择镜像文件（CentOS-7.3）</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux1.webp" alt="linux1" style="zoom:60%;" /><ul><li>设置用户账户以及密码，此密码将同时为root用户的密码</li><li>密码设置简单的：123456</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux2.webp" alt="linux2" style="zoom:60%;" /><ul><li>定义虚拟机名称（可修改）、位置（选择一个目录）。注意：目录中不能有中文。</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux3.webp" alt="linux3" style="zoom:60%;" /><ul><li>磁盘分配20G，之后【下一步】-&gt;【完成】，等待程序运行安装。</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux4.webp" alt="linux4" style="zoom:60%;" /><ul><li>安装程序出现以下页面时，快速点击选择<strong>【LANGUAGE SUPPORT】</strong>项。选择：汉语—简体中文（中国），点击确定【DONE】。</li></ul><blockquote><p>注意：该页面可能会出现的时间比较短，不点击就会跳过该部分配置，需要快速选择点击。</p></blockquote><img src="https://alan.s3.bitiful.net/article_img/linux5.webp" alt="linux5" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/linux6.webp" alt="linux6" style="zoom:60%;" /><ul><li>选择<strong>【DATE&amp;TIME】</strong>，时区设为上海，点击确定【DONE】。</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux7.webp" alt="linux7" style="zoom:60%;" /><ul><li>选择<strong>【KEYBOARD LAYOUT】</strong>，键盘设置点—chinese，点击确定【DONE】</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux8.webp" alt="linux8" style="zoom:60%;" /><ul><li>选择<strong>【SOFTWARE SELECTION】</strong>，选择GNOME，按照下图选择，之后点击确定【DONE】</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux9.webp" alt="linux9" style="zoom:60%;" /><ul><li>选择<strong>【INSTALLATION DESTION】</strong>,选择20G，点击确定【DONE】</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux10.webp" alt="linux10" style="zoom:60%;" /><ul><li>选择<strong>【KDUMP】</strong>,选择（不打勾）</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux11.webp" alt="linux11" style="zoom:60%;" /><ul><li>点击【BEGIN】开始安装</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux12.webp" alt="linux12" style="zoom:60%;" /><ul><li>点击安装了之后会出现如下页面，此时创建用户账号（一定要创建）</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux14.webp" alt="linux14" style="zoom:60%;" /><ul><li>设置和前面一样的用户名和密码，之后确定【DONE】，继续等待，<strong>安装时间会比较长！！</strong></li></ul><img src="https://alan.s3.bitiful.net/article_img/linux15.webp" alt="linux15" style="zoom:60%;" /><ul><li>出现如下页面的话点击<strong>【LICENSING】</strong>，打勾，同意，确定【DONE】</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux16.webp" alt="linux16" style="zoom:60%;" /><ul><li>之后点【FINISH】完成安装，将启动系统，系统其他输入用户名，密码即可以进入系统。</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux19.webp" alt="linux19" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/linux17.webp" alt="linux17" style="zoom:60%;" /><ul><li>设置中文界面，左上角-Applications  -  System tools（系统工具） - setting（设置）- language，点下面三个点，添加汉语。</li></ul><img src="https://alan.s3.bitiful.net/article_img/linux18.webp" alt="linux18" style="zoom:60%;" /><p>至此VMware虚拟机下的CentOS-7.3版本的Linux系统安装完成。</p>]]></content>
      
      
      <categories>
          
          <category> Luinx操作系统 </category>
          
          <category> 系统的安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luinx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据环境搭建（Hadoop）</title>
      <link href="/posts/82f3104a.html"/>
      <url>/posts/82f3104a.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>大数据环境搭建（Hadoop）</span><blockquote><p>该教程为学习大数据时安装相应环境</p><p>以下安装的为VMware中配置三个Linux虚拟机，同时安装Hadoop软件，（<strong>Hadoop100，Hadoop101，Hadoop102</strong>），安装三个虚拟机主要为后面学习大数据技术，使用Hadoop分布式存储的学习提供条件，由于学习中无法与实际应用中一样，分布式存储采用多台机器，故使用多个虚拟机模拟多个机器进行分布式</p></blockquote><h1 id="1、安装虚拟机"><a href="#1、安装虚拟机" class="headerlink" title="1、安装虚拟机"></a>1、安装虚拟机</h1><h2 id="1-1安装VMware-安装CentOS"><a href="#1-1安装VMware-安装CentOS" class="headerlink" title="1.1安装VMware&#x2F;安装CentOS"></a>1.1安装VMware&#x2F;安装CentOS</h2><blockquote><p>安装文章：<a href="https://www.alanblog.cn/posts/4e52c25a.html">VMware的和Linux操作系统的安装搭建</a></p></blockquote><h2 id="1-2单机网络配置"><a href="#1-2单机网络配置" class="headerlink" title="1.2单机网络配置"></a>1.2单机网络配置</h2><h3 id="1-2-1配置IP"><a href="#1-2-1配置IP" class="headerlink" title="1.2.1配置IP"></a>1.2.1配置IP</h3><h4 id="1-2-1-1VMware"><a href="#1-2-1-1VMware" class="headerlink" title="1.2.1.1VMware"></a>1.2.1.1VMware</h4><ul><li>打开VMware软件——【网络编辑器】</li></ul><img src="https://alan.s3.bitiful.net/article_img/sjkaz1.png" alt="sjkaz1" style="zoom:75%;" /><ul><li><p>选择VMnet8，点击右下角【更改设置】</p><blockquote><p>注意：修改设置需要管理员权限。</p></blockquote></li></ul><img src="https://cdnjson.com/images/2023/09/26/vm2.png" alt="sjkaz1" style="zoom:75%;" /><ul><li>刷新后，选择VMnet8，修改IP</li></ul><img src="https://alan.s3.bitiful.net/article_img/sjkaz2.png" alt="sjkaz2" style="zoom:75%;" /><blockquote><p>将子网IP的第三段改为10</p><p>如：192.168.10.0</p></blockquote><ul><li>点击【NAT设置】</li></ul><img src="https://alan.s3.bitiful.net/article_img/sjkaz3.png" alt="sjkaz3" style="zoom:75%;" /><ul><li>修改网关IP</li></ul><blockquote><p>将网关IP的第三段改为10</p><p>如：192.168.10.2</p></blockquote><img src="https://alan.s3.bitiful.net/article_img/sjkaz4.png" alt="sjkaz4" style="zoom:75%;" /><h4 id="1-2-1-2windows"><a href="#1-2-1-2windows" class="headerlink" title="1.2.1.2windows"></a>1.2.1.2windows</h4><ul><li>打开网络和internet设置，找到以太网的【更改适配器选项】</li></ul><img src="https://alan.s3.bitiful.net/article_img/sjkaz5.png" alt="sjkaz5" style="zoom:60%;" /><ul><li>找到VMnet8，右键进入属性</li></ul><blockquote><p>注意：如果更改适配器选项中没有VMnet8，则需要进行修改。</p><p>文章：<a href="https://www.alanblog.cn/posts/8118749a.html">主机上没有虚拟机网络适配器VMnet8解决办法</a></p></blockquote><img src="https://cdnjson.com/images/2023/09/26/vm4.png" alt="vm4" style="zoom:60%;" /><ul><li>选择<strong>IPv4</strong>，进入【属性】页面</li></ul><img src="https://alan.s3.bitiful.net/article_img/sjkaz7.png" alt="sjkaz7" style="zoom:75%;" /><ul><li><p>改为静态IP，如下图：（参数对照修改）</p><img src="https://alan.s3.bitiful.net/article_img/sjkaz8.png" alt="sjkaz8" style="zoom:75%;" /></li></ul><hr><h4 id="1-2-1-3虚拟机服务器"><a href="#1-2-1-3虚拟机服务器" class="headerlink" title="1.2.1.3虚拟机服务器"></a>1.2.1.3虚拟机服务器</h4><ul><li>加入虚拟机ROOT用户</li></ul><blockquote><p>root用户命令：<code>su</code></p><p>vim保存退出命令：</p><p>Shift键+冒号（:）+<code>wq</code></p></blockquote><blockquote><p>输入：<code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p></blockquote><p>进入文本，修改后保存退出。</p><img src="https://alan.s3.bitiful.net/article_img/sjkaz10.png" alt="sjkaz10" style="zoom:75%;" /><ul><li>修改服务器名字</li></ul><blockquote><p>输入：<code>vim /etc/hostname</code></p></blockquote><img src="https://alan.s3.bitiful.net/article_img/sjkaz11.png" alt="sjkaz11" style="zoom:60%;" /><ul><li>服务器名称映射</li></ul><blockquote><p>输入：<code>vim /etc/hosts</code></p></blockquote><p><code>192.168.10.100 hadoop100</code></p><p><code>192.168.10.101 hadoop101</code></p><p><code>192.168.10.102 hadoop102</code></p><p><code>192.168.10.103 hadoop103</code></p><p><code>192.168.10.104 hadoop104</code></p><img src="https://alan.s3.bitiful.net/article_img/sjkaz12.png" alt="sjkaz12" style="zoom:60%;" /><p><strong>重启 reboot</strong></p><ul><li>验证</li></ul><blockquote><p>输入：<code>ifconfig</code></p></blockquote><img src="https://alan.s3.bitiful.net/article_img/sjkaz13.png" alt="sjkaz13" style="zoom:60%;" /><ul><li>验证网络是否连通</li></ul><blockquote><p>输入：<code>ping www.baidu.com</code></p></blockquote><img src="https://alan.s3.bitiful.net/article_img/sjkaz14.png" alt="sjkaz14" style="zoom:60%;" /><h1 id="2、远程软件安装"><a href="#2、远程软件安装" class="headerlink" title="2、远程软件安装"></a>2、远程软件安装</h1><p>实际工作中，服务器被放置在机房中，同时受到地域和管理的限制，开发人员通常不会进入机房操作直接上机操作，而是通过远程连接服务器，进行相关操作。</p><p>在集群开发中，主节点通常会对集群中各个节点频繁的访问，就需要不断输入目标服务器的用户名和密码，这种操作方式非常麻烦并且还会影响集群服务的连续运行。</p><p>为了解决上述问题，可以通过配置SSH服务来实现远程登录和SSH的免密登录功能。</p><h2 id="2-1安装xshell"><a href="#2-1安装xshell" class="headerlink" title="2.1安装xshell"></a>2.1安装xshell</h2><blockquote><p>安装包：U盘LANXIN_03中</p></blockquote><ul><li>安装后点击【新建选项】，新建一个会话。</li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell1.png" alt="xshell1" style="zoom:60%;" /><ul><li>修改名称为之前设置好的虚拟机IP地址。</li></ul><p><code>192.168.10.100</code></p><img src="https://alan.s3.bitiful.net/article_img/xshell2.png" alt="xshell2" style="zoom:75%;" /><ul><li><p>然后点击【用户身份验证】</p></li><li><p>填写之前设置好的虚拟机的用户名和密码，点击【确定】。</p><blockquote><p>注意：此处的用户名也可以设置为<strong>root</strong>用户，即<strong>用户名输入root</strong>。</p><ul><li>这样可以使Xshell连接虚拟机时默认为root用户，不需要再次输入<code>su</code>命令以及密码，同时后面使用xftp传输文件时不需要再次新建root连接。</li></ul></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell3.png" alt="xshell3" style="zoom:75%;" /><ul><li><p>选择填好的账号，点击【连接】</p><blockquote><p>注意：连接虚拟机时需要保证虚拟机开启。</p></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell4.png" alt="xshell4" style="zoom:60%;" /><ul><li>出现提示框，点击接受并保存</li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell5.png" alt="xshell5" style="zoom:60%;" /><ul><li>验证，显示已经远程登录成功。</li></ul><blockquote><p>分别输入：<code>hostname</code>、<code>ifconfig</code></p></blockquote><img src="https://alan.s3.bitiful.net/article_img/xshell6.png" alt="xshell6" style="zoom:75%;" /><h2 id="2-2Windows映射"><a href="#2-2Windows映射" class="headerlink" title="2.2Windows映射"></a>2.2Windows映射</h2><ul><li>电脑计算机地址栏输入：<code>C:\Windows\System32\drivers\etc</code></li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell7.png" alt="xshell7" style="zoom:75%;" /><ul><li><p>打开hosts文件，并添加映射内容，保存并退出</p><blockquote><p>注意：</p><ul><li>该文件使用记事本打开。</li><li>该hosts可能无法直接修改，建议复制一份到桌面，使用记事本打开，修改之后复制回原路径（需使用管理员权限）</li></ul></blockquote></li></ul><p><code>192.168.10.100 hadoop100</code></p><p><code>192.168.10.101 hadoop101</code></p><p><code>192.168.10.102 hadoop102</code></p><p><code>192.168.10.103 hadoop103</code></p><p><code>192.168.10.104 hadoop104</code></p><img src="https://alan.s3.bitiful.net/article_img/xshell8.png" alt="xshell8" style="zoom:75%;" /><ul><li>Xshell新建会话，名称改为hadoop100</li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell9.png" alt="xshell9" style="zoom:75%;" /><ul><li>填写之前设置好的虚拟机的用户名（root用户）和密码，点击【确定】。</li><li>点击hadoop100并连接。</li><li>验证，显示已经远程登录成功。</li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell10.png" alt="xshell10" style="zoom:75%;" /><h2 id="2-3安装xftp并使用"><a href="#2-3安装xftp并使用" class="headerlink" title="2.3安装xftp并使用"></a>2.3安装xftp并使用</h2><ul><li><p>安装软件xftp</p></li><li><p>安装完毕后，点击xshell软件中红框内选项</p><blockquote><ul><li><p>该软件为文件传输软件，后续将使用该软件将hadoop安装包以及JDK安装包传输至虚拟机的linux系统中。</p></li><li><p>如果前面Xshell连接虚拟机时采用的用户名不是root用户，则需要新建root会话进行连接。</p></li></ul></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/xshell11.png" alt="xshell11" style="zoom:75%;" /><img src="https://alan.s3.bitiful.net/article_img/xshell12.png" alt="xshell12" style="zoom: 50%;" /><h1 id="3、虚拟机准备"><a href="#3、虚拟机准备" class="headerlink" title="3、虚拟机准备"></a>3、虚拟机准备</h1><blockquote><p>注意：</p><ul><li><p>以下终端命令直接使用Xshell连接虚拟机之后在Xshell终端输入即可。</p></li><li><p>同时为防止由于权限不够导致出现问题，以下命令均在Root用户下进行操作</p></li></ul></blockquote><h2 id="3-1安装额外软件库"><a href="#3-1安装额外软件库" class="headerlink" title="3.1安装额外软件库"></a>3.1安装额外软件库</h2><ul><li>保证进入了Root用户，执行以下命令</li></ul><p><code>yum install -y epel-release</code></p><h2 id="3-2关闭防火墙"><a href="#3-2关闭防火墙" class="headerlink" title="3.2关闭防火墙"></a>3.2关闭防火墙</h2><blockquote><p>注意：该操作是为了后续学习的方便，避免出现一下影响学习的情况，由于自己学习时连接的为自身区域网环境下，所有采用关闭防火墙。在实际的应用中为保证安全不应该关闭防火墙。</p></blockquote><ul><li>终端依次输入以下命令</li></ul><p><code>systemctl stop firewalld</code></p><p><code>systemctl disable firewalld.service</code></p><h2 id="3-3安装"><a href="#3-3安装" class="headerlink" title="3.3安装"></a>3.3安装</h2><h3 id="3-3-1建立文件夹"><a href="#3-3-1建立文件夹" class="headerlink" title="3.3.1建立文件夹"></a>3.3.1建立文件夹</h3><ul><li><p>输入以下命令，建立两个文件夹，用来存放软件安装包和安装软件</p></li><li><p>software文件夹：存放安装包</p><p>module文件夹：安装软件</p><p><code>mkdir /opt/module</code></p><p><code>mkdir /opt/software</code></p></li></ul><h3 id="3-3-2卸载已安装JDK"><a href="#3-3-2卸载已安装JDK" class="headerlink" title="3.3.2卸载已安装JDK"></a>3.3.2卸载已安装JDK</h3><ul><li>输入以下命令，查询已安装java软件包</li></ul><p><code>rpm -qa | grep -i java</code></p><img src="https://alan.s3.bitiful.net/article_img/dsj.jdk.check.png" alt="dsj.jdk.check" style="zoom:75%;" /><ul><li>输入以下命令删除java软件包</li></ul><p><code>rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps</code></p><blockquote><p>​    rpm -qa：查询所安装的所有rpm软件包</p><p>​    grep -i：忽略大小写</p><p>​    xargs -n1：表示每次只传递一个参数</p><p>​    rpm -e –nodeps：强制卸载软件</p></blockquote><ul><li>卸载之后输入查询命令确认已经没有java的JDK软件信息</li></ul><p><code>rpm -qa | grep -i java</code></p><img src="https://alan.s3.bitiful.net/article_img/dsj.jdk.uninstall.png" alt="dsj.jdk.uninstall" style="zoom:75%;" /><ul><li>确认无误后输入<code>reboot</code>命令重启虚拟机</li></ul><h3 id="3-3-3安装JDK和Hadoop"><a href="#3-3-3安装JDK和Hadoop" class="headerlink" title="3.3.3安装JDK和Hadoop"></a>3.3.3安装JDK和Hadoop</h3><ul><li>cd命令进入创建的software文件夹</li></ul><p><code>cd /opt/software</code></p><ul><li><p>使用xftp传输软件包</p></li><li><img src="https://alan.s3.bitiful.net/article_img/install01.png" alt="install01" style="zoom:60%;" /></li><li><p>在window中选中要安装的软件包，拖拽到虚拟机中</p></li><li><img src="https://alan.s3.bitiful.net/article_img/install02.png" alt="install02" style="zoom:60%;" /></li><li><p>验证是否查看传输成功，进入software文件夹输入<code>ll</code>命令</p></li></ul><p><code>ll</code></p><img src="https://alan.s3.bitiful.net/article_img/install03.png" alt="install03" style="zoom:60%;" /><h3 id="3-3-4安装JDK"><a href="#3-3-4安装JDK" class="headerlink" title="3.3.4安装JDK"></a>3.3.4安装JDK</h3><ul><li><p>进入software文件夹，输入命令</p><p><code>tar -zxvf jdk-8u162-linux-x64.tar_3.gz -C /opt/module/</code></p></li><li><p>进入module文件夹，查看是否安装成功。</p></li></ul><p><code>cd /opt/module</code></p><p>查看文件命令：<code>ll</code></p><blockquote><p>由于本人总结教程时已经安装完毕Hadoop所以module文件夹有两个文件夹，安装完jdk后只要module文件夹中有jkd1.8.0_162文件即安装成功。</p></blockquote><img src="https://alan.s3.bitiful.net/article_img/install04.png" alt="install04" style="zoom:60%;" /><h3 id="3-3-5配置JDK环境变量"><a href="#3-3-5配置JDK环境变量" class="headerlink" title="3.3.5配置JDK环境变量"></a>3.3.5配置JDK环境变量</h3><ul><li>进入配置文件夹，新建自己环境变量文件</li></ul><p><code>cd /etc/profile.d</code></p><ul><li>输入上述命令后，输入以下命令使用vim打开配置文件。</li></ul><p><code>vim my_env.sh</code></p><blockquote><p>在此补充Linux环境下vim编辑器的基本使用方法：</p><ul><li>进入文件后键盘按 <strong>“i”</strong> 进入编辑模式；</li><li>编辑完毕后，键盘按<strong>Esc键，</strong>之后**”Shilft+：’’<strong>键，最后输入</strong>“wq”**回车。</li></ul></blockquote><ul><li>添加下面语句，并保存退出</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#JAVA<span class="emphasis">_HOME</span></span></span><br><span class="line"><span class="emphasis"><span class="section">export JAVA_</span>HOME=/opt/module/jdk1.8.0<span class="emphasis">_162</span></span></span><br><span class="line"><span class="emphasis"><span class="section">export PATH=$PATH:$JAVA_</span>HOME/bin</span></span><br></pre></td></tr></table></figure><img src="https://alan.s3.bitiful.net/article_img/install05.png" alt="install05" style="zoom:60%;" /><ul><li><p>输入以下命令重新加载配置文件</p><p><code>source /etc/profile</code></p></li><li><p>输入<code>java</code>，验证Java安装成功</p></li></ul><img src="https://alan.s3.bitiful.net/article_img/install06.png" alt="install06" style="zoom:60%;" /><h3 id="3-3-6安装hadoop"><a href="#3-3-6安装hadoop" class="headerlink" title="3.3.6安装hadoop"></a>3.3.6安装hadoop</h3><ul><li>进入software文件夹，输入命令</li></ul><p><code>tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module</code></p><ul><li>执行完毕后检查是否安装成功</li></ul><img src="https://alan.s3.bitiful.net/article_img/install03.png" alt="install03" style="zoom:60%;" /><h3 id="3-3-7添加Hadoop环境变量"><a href="#3-3-7添加Hadoop环境变量" class="headerlink" title="3.3.7添加Hadoop环境变量"></a>3.3.7添加Hadoop环境变量</h3><ul><li>与配置jdk一样，依次输入命令进入配置文件</li></ul><p><code>cd /etc/profile.d</code></p><p><code>vim my_env.sh</code></p><ul><li>添加下面语句，并保存退出</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#HADOOP<span class="emphasis">_HOME</span></span></span><br><span class="line"><span class="emphasis"><span class="section">export HADOOP_</span>HOME=/opt/module/hadoop-3.1.3</span></span><br><span class="line">export PATH=$PATH:$HADOOP<span class="emphasis">_HOME/bin</span></span><br><span class="line"><span class="emphasis">export PATH=$PATH:$HADOOP_</span>HOME/sbin</span><br></pre></td></tr></table></figure><ul><li>重新加载配置文件</li></ul><p><code>source /etc/profile</code></p><ul><li>输入<code>hadoop</code>验证hadoop安装成功</li></ul><img src="https://alan.s3.bitiful.net/article_img/install08.png" alt="install08" style="zoom:60%;" /><h1 id="4、克隆虚拟机"><a href="#4、克隆虚拟机" class="headerlink" title="4、克隆虚拟机"></a>4、克隆虚拟机</h1><h2 id="4-1VMware虚拟机克隆"><a href="#4-1VMware虚拟机克隆" class="headerlink" title="4.1VMware虚拟机克隆"></a>4.1VMware虚拟机克隆</h2><ul><li><p>关闭虚拟机，首先将上面安装完毕的hadoop100虚拟机关闭。</p></li><li><p>克隆操作</p></li><li><p>选择完整克隆 –&gt;修改主机名和安装地址后开始克隆。</p><p>将第一台克隆虚拟主机名修改为<strong>hadoop101</strong></p><p>将第二台克隆虚拟主机名修改为<strong>hadoop102</strong></p><blockquote><p>注意：克隆的虚拟机会占用与原虚拟机一样的内存空间，建议为克隆的每个虚拟机预留至少7G内存空间</p></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/kelong01.png" alt="kelong01" style="zoom:75%;" /><img src="https://alan.s3.bitiful.net/article_img/kelong02.png" alt="kelong02" style="zoom:75%;" /><img src="https://alan.s3.bitiful.net/article_img/kelong03.png" alt="kelong03" style="zoom:75%;" /><h2 id="4-2修改IP地址和主机名称"><a href="#4-2修改IP地址和主机名称" class="headerlink" title="4.2修改IP地址和主机名称"></a>4.2修改IP地址和主机名称</h2><ul><li><p>开启克隆的虚拟机<strong>Hadoop101</strong>，打开终端，<code>su</code>命令进入root用户</p></li><li><p>修改ip，输入命令</p><p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p></li></ul><img src="https://alan.s3.bitiful.net/article_img/xuigai01.png" alt="xuigai01" style="zoom:75%;" /><ul><li><p>修改主机名</p><p><code>vim /etc/hostname</code></p></li></ul><img src="https://alan.s3.bitiful.net/article_img/xuigai02.png" alt="xuigai02" style="zoom:75%;" /><ul><li>修改完毕后<code>reboot</code>重启</li></ul><blockquote><p><strong>第二台克隆虚拟机hadoop102同样操作!!!</strong></p></blockquote><ul><li>重启后输入以下命令验证是否修改完成</li></ul><p><code>hostname</code></p><p><code>ifconfig</code></p><img src="https://alan.s3.bitiful.net/article_img/xuigai03.png" alt="xuigai03" style="zoom:75%;" /><h2 id="4-3配置xshell"><a href="#4-3配置xshell" class="headerlink" title="4.3配置xshell"></a>4.3配置xshell</h2><blockquote><p>配置方法和第一个虚拟机的配置一样，不同的就是修改连接的虚拟机名称</p></blockquote><ul><li><p>新建两个虚拟机连接，输入新的虚拟机名称，该名称已映射设置完毕</p><img src="https://alan.s3.bitiful.net/article_img/xuigai04.png" alt="xuigai04" style="zoom:75%;" /></li><li><p>用户身份验证，输入账号（root用户）密码，并连接。</p></li><li><p>与所有虚拟机连接通信（保证虚拟机开启才能连接）。</p></li></ul><h1 id="5、SSH无密登录"><a href="#5、SSH无密登录" class="headerlink" title="5、SSH无密登录"></a>5、SSH无密登录</h1><p>Hadoop的进程间通信使用SSH（Secure Shell）方式。SSH是一种通信加密协议，使用非对称加密方式，可以避免网络窃听。Hadoop并不是通过SSH协议进行数据传输的，而是Hadoop控制脚本需要依赖SSH来执行针对整个集群的操作。Hadoop在启动和停止HDFS、YARN的时候，需要主节点上的进程通过SSH协议启动或停止从节点上的各种守护进程。也就是说如果不配置SSH免密登录对Hadoop的使用没有任何影响，只需在启动和停止Hadoop时输入每个从节点的用户名和密码即可。试想，若管理成百上千个节点组成的Hadoop集群，连接每个从节点时都输入密码将是一项繁杂的工作。因此，配置Hadoop主节点到各个从节点的SSH免密登录是有需要的。为了使Hadoop各节点之间能够无密钥相互访问，使彼此之间相互信任，通信不受阻碍，在搭建Hadoop集群之前需要配置各节点的SSH无密钥登录。</p><h2 id="5-1ssh远程登录"><a href="#5-1ssh远程登录" class="headerlink" title="5.1ssh远程登录"></a>5.1ssh远程登录</h2><ul><li>远程登陆其他服务器，输入以下命令：</li></ul><p><code>ssh 服务器名称</code></p><ul><li><code>exit</code>   命令退出远程登陆</li></ul><h2 id="5-2配置ssh无密登录"><a href="#5-2配置ssh无密登录" class="headerlink" title="5.2配置ssh无密登录"></a>5.2配置ssh无密登录</h2><blockquote><p>首先配置hadoop100无密登录Hadoop101</p><p>注意：</p><ul><li>实现Hadoop100，Hadoop101， Hadoop102三台虚拟机无密远程登录则都需要配置；</li><li>三台虚拟机每一个<strong>都需要生成一个密钥</strong>；</li><li>将密钥拷贝时要对每一台虚拟机拷贝，即一台虚拟机需要拷贝三次（包括<strong>自身也需要拷贝一次</strong>，实现自身对自身无密访问）；</li><li>总结：三台虚拟机需要<strong>各自生成一次密钥</strong>，三台虚拟机总共需要<strong>拷贝九次密钥</strong>。</li></ul></blockquote><h3 id="5-2-1生成密钥"><a href="#5-2-1生成密钥" class="headerlink" title="5.2.1生成密钥"></a>5.2.1生成密钥</h3><ul><li><p>在hadoop100中输入 <strong><code>cd</code></strong>  命令进入home主目录（下面示例图中为Hadoop105，为写教程时克隆得演示机，忽略不管）</p></li><li><p>输入以下命令生成密钥</p><p><code>ssh-keygen -t rsa</code></p><blockquote><p>其中除有一行需要输入y&#x2F;yes之外，其他一直回车（如图）</p></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/ssh01.png" alt="ssh01" style="zoom:60%;" /><ul><li><p>密钥生成之后进入密钥目录可以查看是否成功</p><p><code>cd .ssh</code></p><p><code>ll</code></p></li></ul><img src="https://alan.s3.bitiful.net/article_img/ssh02.png" alt="ssh02" style="zoom:60%;" /><blockquote><p>其他两台虚拟机按照如上同样方法生成密钥</p></blockquote><h3 id="5-3-2拷贝密钥"><a href="#5-3-2拷贝密钥" class="headerlink" title="5.3.2拷贝密钥"></a>5.3.2拷贝密钥</h3><ul><li>将密钥拷到hadoop101，输入命令</li></ul><p><code>ssh-copy-id hadoop101</code></p><img src="https://alan.s3.bitiful.net/article_img/ssh03.png" alt="ssh03" style="zoom: 50%;" /><ul><li>完成后，再次访问hadoop101就不再需要密码</li></ul><img src="https://alan.s3.bitiful.net/article_img/ssh04.png" alt="ssh04" style="zoom:67%;" /><blockquote><p>同样的操作步骤，完成三台服务器互相ssh免密码登录</p><p>要注意，访问自己也需要配置。</p></blockquote><ul><li>即三台虚拟机每个需要输入以下命令（拷贝三次后面虚拟机名字不同）</li></ul><p><code>ssh-copy-id hadoop100</code></p><p><code>ssh-copy-id hadoop101</code></p><p><code>ssh-copy-id hadoop102</code></p><h1 id="6、集群配置"><a href="#6、集群配置" class="headerlink" title="6、集群配置"></a>6、集群配置</h1><p>Hadoop集群包括两个集群： <strong>HDFS集群</strong>、 <strong>YARN集群</strong></p><p>两个集群逻辑上分离、通常物理上在一起</p><p>两个集群都是标准的主从架构集群。</p><blockquote><p>逻辑上分离：</p><p>两个集群互相之间没有依赖、互不影响</p><p>物理上在一起：</p><p>某些角色进程往往部署在同一台物理服务器上</p></blockquote><p>注意：MapReduce是计算框架、代码层面的组件，没有集群之说</p><img src="https://alan.s3.bitiful.net/article_img/jiqun.png" alt="jiqun" style="zoom:75%;" /><h2 id="6-1集群部署规划"><a href="#6-1集群部署规划" class="headerlink" title="6.1集群部署规划"></a>6.1集群部署规划</h2><p>这里建立的虚拟机主机名分别为<strong>hadoop100，hadoop101，hadoop102</strong>， 集群部署根据自己主机名进行规划。</p><table><thead><tr><th align="center"></th><th align="left">hadoop100</th><th align="left">hadoop101</th><th>hadoop102</th></tr></thead><tbody><tr><td align="center">HDFS</td><td align="left">NameNode  DataNode</td><td align="left">DataNode</td><td>SecondaryNameNode  DataNode</td></tr><tr><td align="center">YARN</td><td align="left">NodeManager</td><td align="left">ResourceManager  NodeManager</td><td>NodeManager</td></tr></tbody></table><h2 id="6-2配置集群"><a href="#6-2配置集群" class="headerlink" title="6.2配置集群"></a>6.2配置集群</h2><p>Hadoop配置文件分两类：默认配置文件和自定义配置文件，只有用户想修改某一默认配置值时，才需要修改自定义配置文件，更改相应属性值。</p><p>（1）默认配置文件：</p><table><thead><tr><th align="left">要获取的默认文件</th><th>文件存放在Hadoop的jar包中的位置</th></tr></thead><tbody><tr><td align="left">[core-default.xml]</td><td>hadoop-common-3.1.3.jar&#x2F;core-default.xml</td></tr><tr><td align="left">[hdfs-default.xml]</td><td>hadoop-hdfs-3.1.3.jar&#x2F;hdfs-default.xml</td></tr><tr><td align="left">[yarn-default.xml]</td><td>hadoop-yarn-common-3.1.3.jar&#x2F;yarn-default.xml</td></tr><tr><td align="left">[mapred-default.xml]</td><td>hadoop-mapreduce-client-core-3.1.3.jar&#x2F;mapred-default.xml</td></tr></tbody></table><p>（2）自定义配置文件：</p><p><strong>core-site.xml</strong>、<strong>hdfs-site.xml</strong>、<strong>yarn-site.xml</strong>、<strong>mapred-site.xml</strong>四个配置文件存放在$HADOOP_HOME&#x2F;etc&#x2F;hadoop这个路径上，可以根据项目需求重新进行修改配置。</p><h2 id="6-3具体配置"><a href="#6-3具体配置" class="headerlink" title="6.3具体配置"></a>6.3具体配置</h2><blockquote><p>注意：</p><ul><li><p>以下修改配置文件<strong>在hadoop100中修改</strong>，最后直接使用文件分发命令将修改后的文件分发到Hadoop101和Hadoop102即可。</p></li><li><p>以下的所有修改操作都需要<strong>确保在hadoop配置文件夹</strong>目录下</p></li><li><p>修改以下配置文件夹时，配置信息复制输入在以下两条语句的<strong>中间</strong>（如下）：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="code">      </span></span><br><span class="line"><span class="code">修改的配置信息</span></span><br><span class="line"><span class="code">      </span></span><br><span class="line"><span class="code">&lt;/configuration&gt;</span></span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li><p>进入hadoop配置文件夹中</p><p><code>cd /opt/module/hadoop-3.1.3/etc/hadoop/</code></p></li></ul><h3 id="（1）核心配置文件"><a href="#（1）核心配置文件" class="headerlink" title="（1）核心配置文件"></a>（1）核心配置文件</h3><table><thead><tr><th>文件名称</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>hadoop-env.sh</td><td>Bash脚本</td><td>记录运行Hadoop要用的环境变量</td></tr><tr><td>yarn-env.sh</td><td>Bash脚本</td><td>记录运行YARN要用的环境变量（覆盖hadoop-env.sh中设置的变量）</td></tr><tr><td>mapred-env.sh</td><td>Bash脚本</td><td>记录运行MapReduce要用的环境变量覆盖hadoop-env.sh中设置的变量）</td></tr><tr><td>core-site.xml</td><td>Hadoop配置XML</td><td>Hadoop Core的配置项，包括HDFS、MapReduce和YARN常用的I&#x2F;O设置等</td></tr><tr><td>hdfs-site.xml</td><td>Hadoop配置XML</td><td>HDFS守护进程的配置项，包括NameNode、SecondaryNameNode、DataNode等</td></tr><tr><td>yarn-site.xml</td><td>Hadoop配置XML</td><td>YARN守护进程的配置项，包括ResourceManager、NodeManager等</td></tr><tr><td>mapred-site.xml</td><td>Hadoop配置XML</td><td>MapReduce守护进程的配置项，包括JobHistoryServer</td></tr><tr><td>slaves</td><td>纯文本</td><td>运行DataNode和NodeManager的从节点机器列表，每行1个主机名</td></tr><tr><td>hadoop-metrics2.properties</td><td>Java属性</td><td>控制如何在Hadoop上发布度量的属性</td></tr><tr><td>log4j.properties</td><td>Java属性</td><td>系统日志文件、NameNode审计日志、任务JVM进程的任务日志的属性</td></tr><tr><td>hadoop-policy.xml</td><td>Hadoop配置XML</td><td>安全模式下运行Hadoop时的访问控制列表的配置项</td></tr></tbody></table><p>①配置<strong>core-site.xml</strong></p><ul><li><p>输入以下命令进入文件</p><p><code>vim core-site.xml</code></p></li><li><p>在该文件中编写如下配置</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!-- 指定HDFS中NameNode的地址 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span></span><br><span class="line"><span class="code">      &lt;value&gt;hdfs://hadoop100:8020&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">&lt;!-- 指定Hadoop运行时产生文件的存储目录 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span></span><br><span class="line"><span class="code">&lt;value&gt;/opt/module/hadoop-3.1.3/data/tmp&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br></pre></td></tr></table></figure><img src="https://alan.s3.bitiful.net/article_img/xgpz01.png" alt="xgpz01" style="zoom:60%;" /></li></ul><h3 id="（2）HDFS配置文件"><a href="#（2）HDFS配置文件" class="headerlink" title="（2）HDFS配置文件"></a>（2）HDFS配置文件</h3><p>① 配置<strong>hadoop-env.sh</strong></p><ul><li><p>命令</p><p><code>vim hadoop-env.sh</code></p></li><li><p>修改如下信息</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">export JAVA<span class="emphasis">_HOME=/opt/module/jdk1.8.0_</span>162</span><br><span class="line"></span><br><span class="line"><span class="section">#后面添加</span></span><br><span class="line">export HDFS<span class="emphasis">_NAMENODE_</span>USER=root</span><br><span class="line">export HDFS<span class="emphasis">_DATANODE_</span>USER=root</span><br><span class="line">export HDFS<span class="emphasis">_SECONDARYNAMENODE_</span>USER=root</span><br><span class="line">export YARN<span class="emphasis">_RESOURCEMANAGER_</span>USER=root</span><br><span class="line">export YARN<span class="emphasis">_NODEMANAGER_</span>USER=root</span><br></pre></td></tr></table></figure><blockquote><p>注意：理论上修改信息找到文件中对应的注释位置修改，由此学习的便捷此处配置放在一起，不去找后面的注释信息。（如图）</p></blockquote></li></ul><img src="https://alan.s3.bitiful.net/article_img/xgpz02.png" alt="xgpz02" style="zoom:60%;" /><p>② 配置<strong>hdfs-site.xml</strong></p><ul><li><p>命令</p><p><code>vim hdfs-site.xml</code></p></li><li><p>在该文件中编写如下配置</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;dfs.replication&lt;/name&gt;</span></span><br><span class="line"><span class="code">&lt;value&gt;3&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br><span class="line"><span class="code">&lt;!-- nn web端访问地址--&gt;</span></span><br><span class="line"><span class="code">&lt;property&gt;</span></span><br><span class="line"><span class="code">        &lt;name&gt;dfs.namenode.http-address&lt;/name&gt;</span></span><br><span class="line"><span class="code">        &lt;value&gt;hadoop100:9870&lt;/value&gt;</span></span><br><span class="line"><span class="code">    &lt;/property&gt;</span></span><br><span class="line"><span class="code">&lt;!-- 指定Hadoop辅助名称节点主机配置 --&gt;</span></span><br><span class="line"><span class="code">&lt;property&gt;</span></span><br><span class="line"><span class="code">      &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span></span><br><span class="line"><span class="code">      &lt;value&gt;hadoop102:9868&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br></pre></td></tr></table></figure></li></ul><img src="https://alan.s3.bitiful.net/article_img/xgpz03.png" alt="xgpz03" style="zoom:60%;" /><h3 id="（3）YARN配置文件"><a href="#（3）YARN配置文件" class="headerlink" title="（3）YARN配置文件"></a>（3）YARN配置文件</h3><p>① 配置<strong>yarn-site.xml</strong></p><ul><li><p>命令</p><p><code>vim yarn-site.xml</code></p></li><li><p>在该文件中增加如下配置</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!-- Reducer获取数据的方式 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span></span><br><span class="line"><span class="code">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">&lt;!-- 指定YARN的ResourceManager的地址 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span></span><br><span class="line"><span class="code">&lt;value&gt;hadoop101&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br><span class="line"><span class="code">&lt;!-- 环境变量的继承 --&gt;</span></span><br><span class="line"><span class="code">    &lt;property&gt;</span></span><br><span class="line"><span class="code">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;</span></span><br><span class="line"><span class="code">       &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt;</span></span><br><span class="line"><span class="code">    &lt;/property&gt;</span></span><br></pre></td></tr></table></figure><img src="https://alan.s3.bitiful.net/article_img/xgpz04.png" alt="xgpz04" style="zoom:60%;" /></li></ul><h3 id="（4）MapReduce配置文件"><a href="#（4）MapReduce配置文件" class="headerlink" title="（4）MapReduce配置文件"></a>（4）MapReduce配置文件</h3><p>① 配置<strong>mapred-site.xml</strong></p><ul><li><p>命令</p><p><code>vim mapred-site.xml</code></p></li><li><p>在该文件中增加如下配置</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!-- 指定MR运行在Yarn上 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="code">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span></span><br><span class="line"><span class="code">&lt;value&gt;yarn&lt;/value&gt;</span></span><br><span class="line"><span class="code">&lt;/property&gt;</span></span><br></pre></td></tr></table></figure><img src="https://alan.s3.bitiful.net/article_img/xgpz05.png" alt="xgpz05" style="zoom:60%;" /></li></ul><h2 id="6-4配置workers"><a href="#6-4配置workers" class="headerlink" title="6.4配置workers"></a>6.4配置workers</h2><blockquote><p>此处三台服务器需要同样配置</p></blockquote><ul><li><p>输入如下命令，进入workers文件修改</p><p><code>vim /opt/module/hadoop-3.1.3/etc/hadoop/workers</code></p></li><li><p>在该文件中<strong>删掉原始内容</strong>并增加如下内容：</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">hadoop100</span><br><span class="line">hadoop101</span><br><span class="line">hadoop102</span><br></pre></td></tr></table></figure><blockquote><p>注意：该文件中添加的内容结尾不允许有空格，文件中不允许有空行。</p></blockquote></li></ul><h2 id="6-5分发已配置"><a href="#6-5分发已配置" class="headerlink" title="6.5分发已配置"></a>6.5分发已配置</h2><p>分发已配置好的hadoop文件夹</p><blockquote><p>命令说明：</p><p>scp（secure copy）安全拷贝</p><p>（1）scp定义：scp可以实现服务器与服务器之间的数据拷贝。（from server1 to server2）</p><p>（2）基本语法：</p><p>scp -r  $pdir&#x2F;$fname      $user@$host:$pdir&#x2F;$fname</p><p>命令 递归 要拷贝的文件路径&#x2F;名称  目的地用户@主机:目的地路径&#x2F;名称</p></blockquote><ul><li><p>在hadoop100中执行如下命令</p><p>将文件分发到Hadoop101：</p><p><code>scp -r /opt/module/hadoop-3.1.3/ root@hadoop101:/opt/module</code></p><p>将文件分发到Hadoop102：</p><p><code>scp -r /opt/module/hadoop-3.1.3/ root@hadoop102:/opt/module</code></p><blockquote><p>该命令执行需要跑一定的时间。</p></blockquote></li></ul><h1 id="7、集群启动"><a href="#7、集群启动" class="headerlink" title="7、集群启动"></a>7、集群启动</h1><blockquote><p>在以下的两种启动测试中（单点启动和群起集群），<strong>直接跳过单点启动，测试群起集群</strong>。(即跳过7.2的步骤，进行步骤7.4)。</p><ul><li>单点启动：只启动一个服务器的hadoop集群</li><li>群起集群：启动所配置的三台服务器的hadoop集群</li></ul></blockquote><ul><li><p>进入hadoop文件夹中</p><p><code>cd /opt/module/hadoop-3.1.3</code></p></li></ul><img src="https://alan.s3.bitiful.net/article_img/qidong01.png" alt="qidong01" style="zoom:60%;" /><h2 id="7-1格式化namenode"><a href="#7-1格式化namenode" class="headerlink" title="7.1格式化namenode"></a>7.1格式化namenode</h2><p>查看hadoop文件夹中是否有data&#x2F;logs&#x2F;，有则删除</p><ul><li><p>命令</p><p><code>rm –rf data/logs/</code></p><blockquote><ul><li><p><strong>注意要在每台服务器中都删除</strong></p></li><li><p>建议直接执行一下删除命令</p></li></ul></blockquote></li><li><p>格式命令，在hadoop100中执行如下命令</p><p><code>bin/hdfs namenode -format</code></p></li></ul><img src="https://alan.s3.bitiful.net/article_img/qidong02.png" alt="qidong02" style="zoom:75%;" /><blockquote><p>如果格式namenode的时候出现问题，检查前面的配置文件是否配置正确。</p></blockquote><h2 id="7-2集群单点启动"><a href="#7-2集群单点启动" class="headerlink" title="7.2集群单点启动"></a>7.2集群单点启动</h2><blockquote><p>测试直接跳过了单点启动</p></blockquote><ul><li>在hadoop100启动namenode，执行</li></ul><p><code>sbin/hadoop-daemon.sh start namenode</code></p><ul><li><p>使用jps命令查看启动</p></li><li><p>在hadoop100，hadoop101和hadoop102分别启动datanode，执行</p><p><code>sbin/hadoop-daemon.sh start datanode</code></p></li><li><p>验证集群搭建，在浏览器中输入：</p><p>hadoop100:9870</p></li></ul><h2 id="7-3停止所有进程"><a href="#7-3停止所有进程" class="headerlink" title="7.3停止所有进程"></a>7.3停止所有进程</h2><p>在进行了单点启动之后再进行群起需要对进程进行停止</p><ul><li><p>进入hadoop文件夹，执行：</p><p>Hadoop100执行：</p><p><code>sbin/hadoop-daemon.sh stop namenode</code></p><p><code>sbin/hadoop-daemon.sh stop datanode</code></p><p>hadoop101和102执行：</p><p><code>sbin/hadoop-daemon.sh stop datanode</code></p></li></ul><blockquote><p>未进行单点启动，直接对其群起测试不需要执行停止进程的步骤</p></blockquote><h2 id="7-4群起集群"><a href="#7-4群起集群" class="headerlink" title="7.4群起集群"></a>7.4群起集群</h2><h3 id="7-4-1启动HDFS"><a href="#7-4-1启动HDFS" class="headerlink" title="7.4.1启动HDFS"></a>7.4.1启动HDFS</h3><ul><li><p>进入&#x3D;&#x3D;Hadoop100&#x3D;&#x3D; 的hadoop文件夹</p><p><code>cd /opt/module/hadoop-3.1.3</code></p></li><li><p>在&#x3D;&#x3D;hadoop100&#x3D;&#x3D;中hadoop文件夹下执行</p><p><code>sbin/start-dfs.sh</code></p><img src="https://alan.s3.bitiful.net/article_img/qidong03.png" alt="qidong03" style="zoom:60%;" /></li><li><p>查看进程</p><p><code>jps</code></p><img src="https://alan.s3.bitiful.net/article_img/qidong04.png" alt="qidong04" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/qidong05.png" alt="qidong05" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/qidong06.png" alt="qidong06" style="zoom:60%;" /></li></ul><h3 id="7-4-2启动YARN"><a href="#7-4-2启动YARN" class="headerlink" title="7.4.2启动YARN"></a>7.4.2启动YARN</h3><p>注意：&#x3D;&#x3D;要在有ResourceManager 的hadoop101上启动&#x3D;&#x3D;</p><ul><li><p>在&#x3D;&#x3D;hadoop101&#x3D;&#x3D;中hadoop文件夹下执行</p><p><code>sbin/start-yarn.sh</code></p><img src="https://alan.s3.bitiful.net/article_img/qidong07.png" alt="qidong07" style="zoom:60%;" /></li><li><p>查看进程</p><p><code>jps</code></p><img src="https://alan.s3.bitiful.net/article_img/qidong08.png" alt="qidong08" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/qidong09.png" alt="qidong09" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/qidong10.png" alt="qidong10" style="zoom:60%;" /></li></ul><table><thead><tr><th></th><th>hadoop100</th><th>hadoop101</th><th>hadoop102</th></tr></thead><tbody><tr><td>HDFS</td><td>NameNode DataNode</td><td>DataNode</td><td>SecondaryNameNode  DataNode</td></tr><tr><td>YARN</td><td>NodeManager</td><td>ResourceManager NodeManager</td><td>NodeManager</td></tr></tbody></table><h2 id="7-5查看"><a href="#7-5查看" class="headerlink" title="7.5查看"></a>7.5查看</h2><blockquote><p>保证计算机连接了互联网</p></blockquote><ul><li><p>YARN的浏览器页面查看</p><p><a href="http://hadoop101:8088/">http://hadoop101:8088</a></p></li><li><p>HDPF的浏览器页面查看</p><p><a href="http://hadoop100:9870/">http://hadoop100:9870</a></p><img src="https://alan.s3.bitiful.net/article_img/look_YARN.png" alt="look_YARN" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/look_HDFS.png" alt="look_HDFS" style="zoom:60%;" /></li><li><p><strong>其他</strong></p></li></ul><table><thead><tr><th>端口名称</th><th>Hadoop2.x</th><th>Hadoop3.x</th></tr></thead><tbody><tr><td>NameNode内部通信端口</td><td>8020 &#x2F; 9000</td><td>8020 &#x2F; 9000&#x2F;9820</td></tr><tr><td>NameNode HTTP UI</td><td>50070</td><td>9870</td></tr><tr><td>MapReduce查看执行任务端口</td><td>8088</td><td>8088</td></tr><tr><td>历史服务器通信端口</td><td>19888</td><td>19888</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 大数据技术 </category>
          
          <category> 基础（环境）配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主机上没有虚拟机网络适配器VMnet8解决办法</title>
      <link href="/posts/8118749a.html"/>
      <url>/posts/8118749a.html</url>
      
        <content type="html"><![CDATA[<h1 id="主机上没有虚拟机网络适配器VMnet8解决办法"><a href="#主机上没有虚拟机网络适配器VMnet8解决办法" class="headerlink" title="主机上没有虚拟机网络适配器VMnet8解决办法"></a>主机上没有虚拟机网络适配器VMnet8解决办法</h1><p>解决解决使用虚拟机VMware时，在配置虚拟机网络时，主机的网络适配器选项中没有VMnet8。</p><ul><li>点击VMware—【<strong>编辑</strong>】，打开【<strong>虚拟网络编辑器</strong>】</li></ul><img src="https://cdnjson.com/images/2023/09/26/vm1.png" alt="vm1" style="zoom:60%;" /><ul><li>再点击VMnet8，点击<strong>更改设置</strong></li></ul><blockquote><p><strong>注意</strong>：修改其设置需要管理员权限。</p></blockquote><img src="https://cdnjson.com/images/2023/09/26/vm2.png" alt="vm2" style="zoom:60%;" /><ul><li>点击更改设置后，把【将主机虚拟适配器连接到此网络】勾选上</li></ul><img src="https://cdnjson.com/images/2023/09/26/vm3.png" alt="vm3" style="zoom:60%;" /><ul><li>最后在【设备管理器-网络适配器】中可以找到VMware Virtual Ethemet Adapter for VMnet8。之后就可以对其网络ip等修改配置。</li></ul><img src="https://cdnjson.com/images/2023/09/26/vm4.png" alt="vm4" style="zoom:60%;" /><blockquote><p>注：</p><p>参考文章：[主机上没有虚拟机网络适配器VMnet8_主机没有vmnet8网卡_ICT-电子狗的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_43658636/article/details/114172527#:~:text=%E4%B8%BB%E6%9C%BA%E4%B8%8A%E6%B2%A1%E6%9C%89%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%80%82%E9%85%8D%E5%99%A8VMnet8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95">https://blog.csdn.net/weixin_43658636/article/details/114172527#:~:text=主机上没有虚拟机网络适配器VMnet8解决办法</a> 1.点击VMware【编辑】，打开【虚拟网络编辑器】,2.再点击【VMnet8】，点击更改设置 3.这是第2步点击更改设置后的图片，把【将主机虚拟适配器连接到此网络】勾选上，这样就会自动在本地PC安装网络适配器VMnet8。)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大数据技术 </category>
          
          <category> 基础（环境）配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 教程 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决提示文件过大导致无法复制到U盘</title>
      <link href="/posts/300177fe.html"/>
      <url>/posts/300177fe.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决提示文件过大导致无法复制到U盘"><a href="#解决提示文件过大导致无法复制到U盘" class="headerlink" title="解决提示文件过大导致无法复制到U盘"></a>解决提示文件过大导致无法复制到U盘</h1><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>U盘一般会有文件系统，主要有NTFS、FAT16、 FAT32三种形式，三种形式对应单个文件的大小也是不一样的，分别 如下：</p><blockquote><p>NTFS：最大文件2TB</p><p>FAT16：最大文件2GB</p><p>FAT32：最大文件4GB</p><p> 一般U盘默认的是FAT32，今天我们主要考虑将U盘设置成NTFS，以便解决上述问题。</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li>点击插入的U盘(或者移动设备)，<strong>右键—属性</strong>；然后就会出现U盘的文件系统属性，如图所示：FAT32</li></ul><img src="https://cdnjson.com/images/2023/09/25/u1.webp" alt="u1" style="zoom:60%;" /><ul><li>点击 Win+R 键— 输入框中输入’cmd’回车— 出现如下图的 DOS 命令窗口</li></ul><img src="https://cdnjson.com/images/2023/09/25/u2.webp" alt="u2" style="zoom:60%;" /><ul><li>使用一段简单的代码进行格式转换： <strong>convert g:&#x2F;fs:ntfs</strong> ；完成后如下图</li></ul><blockquote><p>g：意思就是你的U盘的名称</p></blockquote><img src="https://cdnjson.com/images/2023/09/25/u3.webp" alt="u3" style="zoom:60%;" /><ul><li>再重复第一个步骤查看，就会发现文件系统变成为 NTFS 了，就可以复制大文件。</li></ul><img src="https://cdnjson.com/images/2023/09/25/u4.webp" alt="u4" style="zoom:60%;" /><blockquote><p><strong>注意：此方法不可逆转，FAT32转到NTFS后不可转回，当然也没必要转回，一定要转回可以格式化硬盘</strong></p></blockquote><h2 id="NTFS文件系统的优势"><a href="#NTFS文件系统的优势" class="headerlink" title="NTFS文件系统的优势"></a>NTFS文件系统的优势</h2><h3 id="支持更大的分区"><a href="#支持更大的分区" class="headerlink" title="支持更大的分区"></a>支持更大的分区</h3><p>NTFS可以支持的分区(如果采用动态磁盘则称为卷)大小可以达到2TB。而Win 2000中的FAT32支持分区的大小最大为32GB。</p><h3 id="文件系统更可靠且读取速度更高"><a href="#文件系统更可靠且读取速度更高" class="headerlink" title="文件系统更可靠且读取速度更高"></a>文件系统更可靠且读取速度更高</h3><p>NTFS是一个可恢复的文件系统。在NTFS分区上用户很少需要运行磁盘修复程序。NTFS通过使用标准的事务处理日志和恢复技术来保证分区的一致性。发生系统失败事件时，NTFS使用日志文件和检查点信息自动恢复文件系统的一致性。</p><h3 id="支持文件夹压缩"><a href="#支持文件夹压缩" class="headerlink" title="支持文件夹压缩"></a>支持文件夹压缩</h3><p>NTFS支持对分区、文件夹和文件的压缩。</p><h3 id="磁盘空间管理更有效"><a href="#磁盘空间管理更有效" class="headerlink" title="磁盘空间管理更有效"></a>磁盘空间管理更有效</h3><p>NTFS采用了更小的簇,可以更有效率地管理磁盘空间。相比之下，NTFS可以比FAT32更有效地管理磁盘空间，最大限度地避免了磁盘空间的浪费。</p><h3 id="更好的安全性"><a href="#更好的安全性" class="headerlink" title="更好的安全性"></a>更好的安全性</h3><p>在NTFS分区上，可以为共享资源，文件夹以及文件设置访问许可权限。许可的设置包括两方面的内容：一是允许哪些组或用户对文件夹、文件和共享资源进行访问；二是获得访问许可的组或用户可以进行什么级别的访问。</p><h3 id="更多的功能"><a href="#更多的功能" class="headerlink" title="更多的功能"></a>更多的功能</h3><p>在Win 2000的NTFS文件系统下可以进行磁盘配额管理。磁盘配额就是管理员可以为用户所能使用的磁盘空间进行配额限制，每一用户只能使用最大配额范围内的磁盘空间。设置磁盘配额后，可以对每一个用户的磁盘使用情况进行跟踪和控制，通过监测可以标识出超过配额报警阈值和配额限制的用户，从而采取相应的措施。磁盘配额管理功能的提供，使得管理员可以方便合理地为用户分配存储资源，避免由于磁盘空间使用的失控可能造成的系统崩溃，提高了系统的安全性。</p><hr><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><blockquote><ol><li><a href="https://blog.csdn.net/wang379275614/article/details/7760556">U盘空间明明够大，为什么却放不进去文件_优盘有空间但存不进去_mars-kobe的博客-CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/46713221">提示文件过大无法复制到U盘怎么解决? - 知乎 (zhihu.com)</a></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机操作 </category>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows磁盘分区教程</title>
      <link href="/posts/209d19e4.html"/>
      <url>/posts/209d19e4.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows磁盘分区教程"><a href="#Windows磁盘分区教程" class="headerlink" title="Windows磁盘分区教程"></a>Windows磁盘分区教程</h1><blockquote><p>对一些计算机基础使用总结记录</p></blockquote><p>使用Windows（Windows7 ，8，10 皆可用）自带磁盘管理工具进行磁盘分区的操作。</p><p>本文大部分都需要鼠标右击操作。</p><h2 id="进入磁盘管理"><a href="#进入磁盘管理" class="headerlink" title="进入磁盘管理"></a>进入磁盘管理</h2><blockquote><p>进入磁盘管理：</p><blockquote><p>计算机此电脑右键  –&gt;  管理  –&gt;  磁盘管理</p><p>可以看到已经安装的所有存储驱动器，操作的时候，选择需要进行分区操作的磁盘</p></blockquote></blockquote><img src="https://alan.s3.bitiful.net/article_img/ncfp1.webp" alt="ncfp1" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/ncfp2.webp" alt="ncfp2" style="zoom:60%;" /><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><ul><li>选择需要进行分盘的磁盘进行操作</li></ul><blockquote><p>鼠标选中对应的磁盘：点击鼠标右键 –&gt;  压缩卷</p></blockquote><img src="https://alan.s3.bitiful.net/article_img/ncfp3.webp" alt="ncfp3" style="zoom:60%;" /><ul><li>在弹出的窗口分配内存</li></ul><blockquote><p>弹出窗口需要在 ③ 处填入内存大小，即填入需要分离出来的磁盘大小</p><p>具体的计算方法为：</p><ul><li><p>假设，操作的磁盘原有160G（163840MB），想要将原来的磁盘保留60G，则需要分配出去个100G重新设置一个磁盘，就需要在 ③ （输入压缩空间量）中填入：102400</p></li><li><p>计算如下：</p><blockquote><p>163840 - 60 * 1024 &#x3D; 102400</p><p>即：</p><p>①中数值（压缩前的总计大小）-  需要保留的大小 &#x3D;  ③ 中的输入值</p></blockquote></li><li><p>输入的单位为MB（1G&#x3D;1024MB）。</p></li></ul><p>注意：具体的数值需要根据自己电脑的不同和自己需要保留&#x2F;分离的数据不同进行计算。</p></blockquote><ul><li>① 操作磁盘的总计内存大小</li><li>② 操作磁盘可以压缩的内存大小</li><li>③ 需要分离出来的磁盘内存大小</li><li>④ 留给原理磁盘的内存大小</li></ul><img src="https://alan.s3.bitiful.net/article_img/ncfp4.webp" alt="ncfp4" style="zoom:60%;" /><h2 id="建立分区"><a href="#建立分区" class="headerlink" title="建立分区"></a>建立分区</h2><ul><li>上面操作完成后，会得到一个未分配的磁盘空间。</li></ul><img src="https://alan.s3.bitiful.net/article_img/ncfp5.webp" alt="ncfp5" style="zoom:60%;" /><ul><li>鼠标选中未分配的磁盘空间</li></ul><blockquote><p>未分配的磁盘空间 –&gt; 右击 –&gt; 新建简单卷 –&gt; 下一步，输入大小（要全部使用，默认就可以）–&gt;下一步，分配驱动器号（随便选一个）-&gt; 下一步，按自己喜欢，改一下卷标 –&gt;  下一步，完成</p></blockquote><img src="https://alan.s3.bitiful.net/article_img/ncfp6.webp" alt="ncfp6" style="zoom:60%;" /><img src="https://alan.s3.bitiful.net/article_img/ncfp7.webp" alt="ncfp7" style="zoom:60%;" /><p>一路下一步，最后完成就会出现一个新的磁盘。</p><blockquote><p>该文章学习参考至：Windows磁盘分区详尽教程（无需第三方工具篇） - 鲜鱼一条的文章 - 知乎 <a href="https://zhuanlan.zhihu.com/p/95133122">https://zhuanlan.zhihu.com/p/95133122</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机操作 </category>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记（四）</title>
      <link href="/posts/51f938d9.html"/>
      <url>/posts/51f938d9.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>python学习笔记（四）</span><blockquote><p><strong>python学习教程了🍳👇👇</strong></p><p>b站 - 黑马程序员</p><p>👉<a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=6e4afa28de12d7ce5a6648aec8c6298d">黑马程序员python教程，8天python从入门到精通，学python看这套就够了<em>哔哩哔哩</em>bilibili</a></p><p>👉<a href="https://www.itheima.com/">黑马程序员官网-IT培训机构</a></p><p><strong>python学习笔记导航🚲👇👇</strong></p><p>👉<a href="https://www.alanblog.cn/posts/9bdc6e36.html">python学习笔记（一）</a></p><p>👉<a href="https://www.alanblog.cn/posts/abca82ee.html">python学习笔记（二）</a></p><p>👉<a href="https://www.alanblog.cn/posts/abca82ee.html">python学习笔记（三）</a></p><p>👉<a href="https://www.alanblog.cn/posts/51f938d9.html">python学习笔记（四）</a>👈当前位置</p></blockquote><h1 id="九、python文件的操作"><a href="#九、python文件的操作" class="headerlink" title="九、python文件的操作"></a>九、python文件的操作</h1><h2 id="1、文件的编码"><a href="#1、文件的编码" class="headerlink" title="1、文件的编码"></a>1、文件的编码</h2><p>使用编码技术（密码本）将内容翻译成0和1 存储</p><blockquote><p>编码技术即：翻译的规则，记录了如何将内容翻译成二进制，以及如何将二进制翻译回可识别内容。</p></blockquote><p>计算机中有许多可用的编码：</p><ul><li><strong>UTF - 8</strong></li><li>GBK</li><li>Big5</li><li>等</li></ul><p>不同的编码，将内容翻译成二进制也是不同的，编码有许多，所以要使用正确的编码，才能对文件进行正确的读写操作呢。</p><p><strong>UTF-8是目前全球通用的编码格式</strong></p><p>除非有特殊需求，否则，一律以UTF-8格式进行文件编码即可</p><h3 id="（1）什么是文件"><a href="#（1）什么是文件" class="headerlink" title="（1）什么是文件"></a>（1）什么是文件</h3><p>内存中存放的数据在计算机关机后就会消失。要长久保存数据，就要使用硬盘、光盘、U盘等设备。为了便于数据的管理和检索，引入了<strong>“文件”</strong>的概念。</p><p><strong>一篇文章、一段视频、一个可执行程序，都可以被保存为一个文件，并赋予一个文件名</strong>。操作系统以文件为单位管理磁盘中的数据。一般来说，文件可分为<strong>文本文件、视频文件、音频文件、图像文件、可执行文件</strong>等多种类别。</p><h3 id="（2）文件操作包含哪些内容"><a href="#（2）文件操作包含哪些内容" class="headerlink" title="（2）文件操作包含哪些内容"></a>（2）文件操作包含哪些内容</h3><p>在日常生活中，文件操作主要包括<strong>打开、关闭、读、写</strong>等操作。</p><ol><li>打开文件</li><li>读写文件</li><li>关闭文件</li></ol><p>注意：可以只打开和关闭文件，不进行如何读写</p><h3 id="（3）打开文件——open-打开函数"><a href="#（3）打开文件——open-打开函数" class="headerlink" title="（3）打开文件——open()打开函数"></a>（3）打开文件——open()打开函数</h3><p>在Python，使用<strong>open函数</strong>，可以打开一个已经存在的文件，或者创建一个新文件。</p><p>语法如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">open</span>(name, mode, encoding)</span><br></pre></td></tr></table></figure><ul><li>name：是要打开的目标文件名的字符串（可以包含文件所在的具体路径）。</li><li>mode：设置打开文件的模式（访问模式）：只读、写入、追加等。</li><li>encoding：编码格式（推荐使用UTF-8）</li></ul><p>例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"><span class="comment"># encoding的顺序不是第三位，所以不能用位置参数，用关键字参数直接指定</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>​此时的 “f“ 是 “open” 函数的文件对象，对象是Python中一种特殊的数据类型，拥有属性和方法，可以使用 对象.属性 或 对象.方法 对其进行访问。</p></blockquote><p>mode常用的三种基础访问模式：</p><table><thead><tr><th align="center"></th><th align="center">模式</th><th>描述</th></tr></thead><tbody><tr><td align="center">r</td><td align="center">只读</td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="center">w</td><td align="center">写入</td><td>打开一个文件只用于写入。如果该文件已存在则打开文件，并<strong>从开头开始编辑，原有内容会被删除</strong>,如果该文件<strong>不存在，创建新文件</strong>。</td></tr><tr><td align="center">a</td><td align="center">追加</td><td>打开一个文件用于追加。如果该文件已存在，<strong>新的内容将会被写入到已有内容之后</strong>。如果该文件<strong>不存在，创建新文件</strong>进行写入。</td></tr></tbody></table><h2 id="2、文件的读取"><a href="#2、文件的读取" class="headerlink" title="2、文件的读取"></a>2、文件的读取</h2><h3 id="（1）打开文件，使用open-函数"><a href="#（1）打开文件，使用open-函数" class="headerlink" title="（1）打开文件，使用open()函数"></a>（1）打开文件，使用open()函数</h3><p>例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开文件,D盘目录下有一个文件“测试.txt”</span></span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;D:/测试.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：encoding在函数的参数中顺序不是第三位，所以不能用位置参数，用关键字参数直接指定。</p></blockquote><h3 id="（2）读操作的相关方法"><a href="#（2）读操作的相关方法" class="headerlink" title="（2）读操作的相关方法"></a>（2）读操作的相关方法</h3><h4 id="①-read-方法"><a href="#①-read-方法" class="headerlink" title="① read()方法"></a><strong>① read()方法</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">文件对象.read(num)</span><br></pre></td></tr></table></figure><blockquote><p><strong>num</strong>表示要从文件中读取的数据的长度(单位是字节)，如果没有传入num，那么就表示读取文件中所有的数据。</p></blockquote><h4 id="②-readlines-方法"><a href="#②-readlines-方法" class="headerlink" title="② readlines()方法"></a><strong>② readlines()方法</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">文件对象.readlines()</span><br></pre></td></tr></table></figure><blockquote><p>readlines可以按照行的方式把整个文件中的内容进行一次性读取，并且返回的是一个列表，其中每一行的数据为一个元素。</p></blockquote><p>例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>)</span><br><span class="line">content = f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment">#[&#x27;hello world\n&#x27;, &#x27;abcdefg\n&#x27;, &#x27;aaa\n&#x27;, &#x27;bbb\n&#x27;, &#x27;ccc&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h4 id="③-readline-方法"><a href="#③-readline-方法" class="headerlink" title="③ readline() 方法"></a><strong>③ readline() 方法</strong></h4><blockquote><p>一次读取一行的内容</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">文件对象.readline()</span><br></pre></td></tr></table></figure><h4 id="④-for循环读取文件行"><a href="#④-for循环读取文件行" class="headerlink" title="④ for循环读取文件行"></a><strong>④ for循环读取文件行</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>, <span class="string">&quot;r&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一个line临时变量，就记录了文件的一行数据</span></span><br></pre></td></tr></table></figure><h4 id="⑤-close-方法"><a href="#⑤-close-方法" class="headerlink" title="⑤ close()方法"></a><strong>⑤ close()方法</strong></h4><blockquote><p>关闭文件对象，把文件的占用给停掉。</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">文件对象.close()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后通过close，关闭文件对象，也就是关闭对文件的占用</span></span><br><span class="line"><span class="comment"># 如果不调用close，同时程序没有停止运行，那么这个文件将一直被Python程序占用。</span></span><br></pre></td></tr></table></figure><h4 id="⑥-with-open-语法"><a href="#⑥-with-open-语法" class="headerlink" title="⑥ with open 语法"></a><strong>⑥ with open 语法</strong></h4><blockquote><p>通过在with open的语句块中对文件进行操作</p><p>可以在操作完成后自动关闭close文件，避免遗忘掉close方法</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;测试.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 对文件的操作</span></span><br><span class="line">    f.readlines()</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 通过在with open的语句块中对文件进行操作</span></span><br><span class="line"><span class="comment"># 可以在操作完成后自动关闭close文件，避免遗忘掉close方法</span></span><br></pre></td></tr></table></figure><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h4><ul><li>在程序中，如果两次连续调用看read()函数，那么会记录上一次读取的结尾，在下一次读取中，会接着上一次结尾处读取。</li><li>文件的读取中，相当于是有一个小指针的关系。</li><li>读取文件的时候，只要文件打开之后，处于同一个文件对象，后面不管调用什么方法，它都会续接上一次读取文件的方法。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h4><table><thead><tr><th align="center">操作</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">文件对象 &#x3D; open(file, mode, encoding)</td><td align="center">打开文件获得文件对象</td></tr><tr><td align="center">文件对象.read(num)</td><td align="center">读取指定长度字节，不指定num读取文件全部</td></tr><tr><td align="center">文件对象.readline()</td><td align="center">读取一行</td></tr><tr><td align="center">文件对象.readlines()</td><td align="center">读取全部行，得到列表</td></tr><tr><td align="center">for line in 文件对象</td><td align="center">for循环文件行，一次循环得到一行数据</td></tr><tr><td align="center">文件对象.close()</td><td align="center">关闭文件对象</td></tr><tr><td align="center">with open() as f</td><td align="center">通过with open语法打开文件，可以自动关闭</td></tr></tbody></table><h4 id="测试代码："><a href="#测试代码：" class="headerlink" title="测试代码："></a><strong>测试代码：</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打开文件,D盘目录下有一个文件“测试.txt”</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:/测试.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(f))    <span class="comment"># 测试f的类型，类型为一个对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件 - read()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;读取10个字节的结果：<span class="subst">&#123;f.read(<span class="number">10</span>)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;读取全部内容的结果：<span class="subst">&#123;f.read()&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件 - readlines()</span></span><br><span class="line">lines = f.readlines()   <span class="comment"># 读取文件的全部行，封装到列表中</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;lines对象的类型是：<span class="subst">&#123;<span class="built_in">type</span>(lines)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;lines对象的内容是：<span class="subst">&#123;lines&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件 - readline()</span></span><br><span class="line">line1 = f.readline()</span><br><span class="line">line2 = f.readline()</span><br><span class="line">line3 = f.readline()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第一行的数据是：&#123;line1&#125;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第二行的数据是：&#123;line2&#125;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;第三行的数据是：&#123;line3&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环读取文件</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;每一行的数据是：<span class="subst">&#123;line&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件的关闭</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># with open 语法操作文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:/测试.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;每一行的数据是：<span class="subst">&#123;line&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：测试readlines()时，需要先将前面的read()函数注释掉，后面的方法同样如此，而且D盘路径下需要有一个对应的文件。</span></span><br></pre></td></tr></table></figure><h2 id="3、文件的写入"><a href="#3、文件的写入" class="headerlink" title="3、文件的写入"></a>3、文件的写入</h2><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.打开文件</span></span><br><span class="line">  f = <span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">  <span class="comment"># 2.文件写入</span></span><br><span class="line">  f.write(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">  <span class="comment"># 3.内容刷新</span></span><br><span class="line">  f.flush()</span><br></pre></td></tr></table></figure><h3 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h3><blockquote><ul><li>直接调用write，内容并未真正写入文件，而是会积攒在程序的内存中，称之为缓冲区</li><li>当调用flush的时候，内容会真正写入文件</li><li>这样做是避免频繁的操作硬盘，导致效率下降（攒一堆，一次性写磁盘）</li><li>open的时候如果文件不存在，则会创建。</li><li>如果文件存在，且里面有内容的时候，使用w，原本的内容会被删除。</li></ul></blockquote><h3 id="测试代码：-1"><a href="#测试代码：-1" class="headerlink" title="测试代码："></a>测试代码：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:/test.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># write写入</span></span><br><span class="line">f.write(<span class="string">&quot;Hello World!!!&quot;</span>)  <span class="comment"># 内容写入到内存中</span></span><br><span class="line"><span class="comment"># flush刷新</span></span><br><span class="line">f.flush()  <span class="comment"># 将内存中积攒的内容，写入到硬盘的文件中</span></span><br><span class="line"><span class="comment"># close关闭</span></span><br><span class="line">f.close()  <span class="comment"># close方法，内度了fLush的功能的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开一个存在的文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:/test.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)  <span class="comment"># write写入、flush刷斯</span></span><br><span class="line">f.write(<span class="string">&quot;Alanblog&quot;</span>)</span><br><span class="line"><span class="comment"># cLose关闭</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、文件的追加"><a href="#4、文件的追加" class="headerlink" title="4、文件的追加"></a>4、文件的追加</h2><h3 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.打开文件，通过a模式打开即可</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="comment"># 2.文件写入</span></span><br><span class="line">f.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"><span class="comment"># 3.内容刷新</span></span><br><span class="line">f.flush()</span><br></pre></td></tr></table></figure><h3 id="注意：-2"><a href="#注意：-2" class="headerlink" title="注意："></a>注意：</h3><blockquote><ul><li>a模式，文件不存在会创建文件</li><li>a模式，文件存在会在最后，追加写入文件</li><li>写入时需要换行,输入换行符\n</li></ul></blockquote><h3 id="测试代码：-2"><a href="#测试代码：-2" class="headerlink" title="测试代码："></a>测试代码：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">文件的追加写入</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开文件，不存在的文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:/test.txt&quot;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"><span class="comment"># write写入</span></span><br><span class="line">f.write(<span class="string">&quot;alan&amp;blog&quot;</span>)</span><br><span class="line"><span class="comment"># flush刷斯</span></span><br><span class="line">f.flush()</span><br><span class="line"><span class="comment"># close关闭</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开一个存在的文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;D:/test.txt&quot;</span>, <span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"><span class="comment"># write 写入, flush刷新</span></span><br><span class="line">f.write(<span class="string">&quot;学习笔记&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;\n换行&quot;</span>)  <span class="comment"># 换行追加添加换行符\n</span></span><br><span class="line"><span class="comment"># close关闭</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h1 id="十、异常与包"><a href="#十、异常与包" class="headerlink" title="十、异常与包"></a>十、异常与包</h1><h2 id="1、了解异常"><a href="#1、了解异常" class="headerlink" title="1、了解异常"></a>1、了解异常</h2><p>当检测到一个错误时，Python解释器就无法继续执行了，反而出现了一些错误的提示，这就是所谓的“异常””，也就是我们常说的BUG</p><h2 id="2、异常的捕获方法"><a href="#2、异常的捕获方法" class="headerlink" title="2、异常的捕获方法"></a>2、异常的捕获方法</h2><p>异常处理（捕获异常）</p><ul><li>整个程序因为一个BUG停止运行</li><li>对BUG进行提醒，整个程序继续运行</li></ul><p>捕获异常的作用在于：提前假设某处会出现异常，做好提前准备，当真的出现异常的时候，可以有后续手段。</p><h3 id="（1）语法："><a href="#（1）语法：" class="headerlink" title="（1）语法："></a>（1）语法：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>：</span><br><span class="line">可能发生错误的代码</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    如果出现异常执行的代码</span><br></pre></td></tr></table></figure><h3 id="（2）捕获指定的异常"><a href="#（2）捕获指定的异常" class="headerlink" title="（2）捕获指定的异常"></a>（2）<strong>捕获指定的异常</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"><span class="keyword">except</span> NamwError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;name变量名称未定义错误&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li>如果尝试执行的代码的异常类型和要捕获的异常类型不一致，则无法捕获养常</li><li>一般try下方只放一行试执行的代码</li><li>as后面的e其实就是一个对象，即异常的报错具体信息</li></ul></blockquote><h3 id="（3）捕获多个异常"><a href="#（3）捕获多个异常" class="headerlink" title="（3）捕获多个异常"></a>（3）<strong>捕获多个异常</strong></h3><p>当捕获多个异常时，可以把要捕获的异常类型的名字，放到except 后，并使用元组的方式进行书写。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>/<span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span>(NameError,ZeroDivisionError):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ZeroDivision错误...&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="（4）捕获所有异常"><a href="#（4）捕获所有异常" class="headerlink" title="（4）捕获所有异常"></a>（4）<strong>捕获所有异常</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;出现异常了&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ul><li>定义捕获Exception异常，捕获全部的异常，和最上面的不定义是一样的，都可以捕获全部的异常</li><li>Exception–顶级异常</li></ul></blockquote><h3 id="（5）异常else"><a href="#（5）异常else" class="headerlink" title="（5）异常else"></a>（5）异常else</h3><p>else表示的是如果没有异常要执行的代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;我是else，是没有异常的时候执行的代码”)</span></span><br></pre></td></tr></table></figure><blockquote><p>注：</p><ul><li>else是一个可选择的</li></ul></blockquote><h3 id="（6）异常的finally"><a href="#（6）异常的finally" class="headerlink" title="（6）异常的finally"></a>（6）异常的finally</h3><p>fina1ly表示的是<strong>无论是否异常都要执行的代码</strong>，例如关闭文件。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     <span class="built_in">print</span>(没有异常<span class="string">&quot;)</span></span><br><span class="line"><span class="string">finally:</span></span><br><span class="line"><span class="string">f.close()</span></span><br></pre></td></tr></table></figure><h3 id="（7）总结"><a href="#（7）总结" class="headerlink" title="（7）总结"></a>（7）总结</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">可能要发生异常的语句</span><br><span class="line"><span class="keyword">except</span> 异常 <span class="keyword">as</span> 别名:</span><br><span class="line">出现异常的准备手段</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">未出现异常时应做的事情</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">不管出不出现异常都会做的事情</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>基本语法为：</p><ul><li>try：    except：</li></ul><p>其他的可以选择。</p></li></ul></blockquote><h3 id="（8）异常的传递"><a href="#（8）异常的传递" class="headerlink" title="（8）异常的传递"></a>（8）异常的传递</h3><p><strong>异常是具有传递性的</strong></p><p>当<strong>函数func01</strong>中发生异常，并且没有捕获处理这个异常的时候，异常会传递到<strong>函数func02</strong>，当func02也没有捕获处理这个异常的时候<strong>main函数</strong>会捕获这个异常，这就是<strong>异常的传递性</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func01</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是func01开始&quot;</span>)</span><br><span class="line">    num = <span class="number">1</span> / <span class="number">0</span>  <span class="comment"># 该处出现除0异常</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是func01的结束&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func02</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是func02开始&quot;</span>)</span><br><span class="line">    func01()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这是func02结束&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():  <span class="comment"># 异常在main中被获取</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        func02()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><blockquote><p>提示：当所有函数都没有捕获异常的时候，程序就会报错</p></blockquote><h2 id="3、Python模块"><a href="#3、Python模块" class="headerlink" title="3、Python模块"></a>3、Python模块</h2><h3 id="（1）模块的导入"><a href="#（1）模块的导入" class="headerlink" title="（1）模块的导入"></a>（1）模块的导入</h3><p>Python 模块(Module)，是一个 Python 文件，以 .py 结尾.模块能定义函数，类和变量，模块里也能包含可执行的代码。</p><p>模块的<strong>作用</strong>：python中有很多各种不同的模块，每一个模块都可以帮助我们快速的实现一些功能，比如实现和时间相关的功能就可以使用time模块我们可以认为一个模块就是一个工具包，每一个工具包中都有各种不同的工具供我们使用进而实现各种不同的功能。</p><blockquote><p>模块就是一个Python文件，里面有类、函数、变量等，我们可以拿过来用(导入模块去使用)</p></blockquote><h3 id="（2）模块的导入方式"><a href="#（2）模块的导入方式" class="headerlink" title="（2）模块的导入方式"></a>（2）模块的导入方式</h3><p>导入语法：</p><p><code>[frm 模块名] import [模块  类  变量函数] [as 别名]</code></p><blockquote><p>常用的组合形式如：</p><ul><li>import 模块名</li><li>from 模块名 import 类、变量、方法等</li><li>from 模块名import *</li><li>import 模块名as别名</li><li>from 模块名import 功能名 as 别名</li></ul></blockquote><h4 id="①-import-模块名"><a href="#①-import-模块名" class="headerlink" title="① import 模块名"></a>① import 模块名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import 模块名</span><br><span class="line">import 模块名1，模块名2</span><br><span class="line"></span><br><span class="line">模块名.功能名</span><br></pre></td></tr></table></figure><blockquote><p>使用该方法导入即导入了模块中的全部功能</p></blockquote><h4 id="②-from-模块名-import-功能名"><a href="#②-from-模块名-import-功能名" class="headerlink" title="② from 模块名 import 功能名"></a>② from 模块名 import 功能名</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span> 功能名</span><br><span class="line"></span><br><span class="line">功能名</span><br></pre></td></tr></table></figure><blockquote><p>导入模块中的某个固定的功能</p></blockquote><h4 id="③-from-模块名import"><a href="#③-from-模块名import" class="headerlink" title="③ from 模块名import *"></a>③ from 模块名import *</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">功能名</span><br></pre></td></tr></table></figure><blockquote><p>也是导入模块的全部功能，与第一种相同，不同的是，使用了*号导入的在使用的时候不需要使用模块名+.   ,可以直接使用功能名。</p></blockquote><h4 id="④-as-定义别名"><a href="#④-as-定义别名" class="headerlink" title="④ as 定义别名"></a>④ as 定义别名</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模块定义别名</span></span><br><span class="line"><span class="keyword">import</span> 模块名 <span class="keyword">as</span> 别名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 功能定义别名</span></span><br><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span> 功能名 <span class="keyword">as</span> 别名</span><br></pre></td></tr></table></figure><blockquote><p>使用了as定义了别名之后在下面的使用中可以使用自己定义的别名。</p></blockquote><h3 id="（3）注意事项"><a href="#（3）注意事项" class="headerlink" title="（3）注意事项"></a>（3）注意事项</h3><blockquote><ul><li>from可以省略，直接import即可</li><li>as别名可以省略</li><li>通过”.”来确定层级关系</li><li>模块的导入一般写在代码文件的开头位置</li></ul></blockquote><h3 id="（4）自定义模块"><a href="#（4）自定义模块" class="headerlink" title="（4）自定义模块"></a>（4）自定义模块</h3><p>制作自定义的模块只需要创建一个python文件，对其命名，并且在其中定义对应的函数即可</p><blockquote><p>注意：</p><ul><li>每个python文件都可以作为一个模块，模块的名称就是模块的名字，自定义模块名必须要符合标识符的命名规则。</li><li>当<strong>导入多个模块</strong>的时候，且模块内有<strong>同名的功能</strong>，当调用这个同名功能的时候，调用到的是<strong>后面导入的模块的功能。</strong></li></ul></blockquote><h3 id="（5）-name"><a href="#（5）-name" class="headerlink" title="（5）_ _ name_ _"></a>（5）_ _ name_ _</h3><p>为了让模块能够在项目中达到想要的效果，开发人员会自行在.py文件中添加一些测试信息</p><p>在对模块进行了from调用之后：无论是当前文件，还是其他已经导入了该模块的文件，在运行的时候都会自动执行测试时的函数的调用</p><p>解决方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 只在当前文件中调用该函数，其他导入的文件内不符合该条件</span></span><br><span class="line">if__name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>只有当程序是直接执行的才会进入if内部，如果是被导入的，则if无法进入</p></blockquote><h3 id="（6）-all"><a href="#（6）-all" class="headerlink" title="（6）_ _ all _ _"></a>（6）_ _ all _ _</h3><p>如果一个模块文件中有’_ _ all _ _’变量，当使用’from XXX import *’导入时，只能导入这个列表中的元素。</p><h2 id="4、Python包"><a href="#4、Python包" class="headerlink" title="4、Python包"></a>4、Python包</h2><p> 从物理上看，包就是一个<strong>文件夹</strong>，在该文件夹下包含了一个  <strong>_ _ init _ _.py</strong>文件，该文件夹可用于包含多个模块文件从逻辑上看，<strong>包的本质依然是模块</strong>。</p><p>作用：当我们的模块文件越来越多时,包可以帮助我们管理这些模块，<strong>包的作用就是包含多个模块</strong>，当包的本质依然是<strong>模块</strong>。</p><p><strong>导入包</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> 包名.模块名</span><br><span class="line"></span><br><span class="line">包名.模块名.功能名</span><br></pre></td></tr></table></figure><h3 id="第三方包"><a href="#第三方包" class="headerlink" title="第三方包"></a>第三方包</h3><p>，包可以包含一堆的Python模块，而每个模块又内含许多的功能。所以，可以认为:一个包，就是一堆同类型功能的集合体。</p><p>在Python程序的生态中，有许多非常多的第三方包(非Python官方)，可以极大的帮助我们提高开发效率，如：</p><blockquote><ul><li>科学计算中常用的: numpy包</li><li>数据分析中常用的:pandas包</li><li>大数据计算中常用的: pyspark、apache-flink包</li><li>图形可视化常用的:matplotlib、pyecharts</li><li>人工智能常用的: tensorflow</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记（三）</title>
      <link href="/posts/e6d421bc.html"/>
      <url>/posts/e6d421bc.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>python学习笔记（三）</span><blockquote><p><strong>python学习教程了🍳👇👇</strong></p><p>b站 - 黑马程序员</p><p>👉<a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=6e4afa28de12d7ce5a6648aec8c6298d">黑马程序员python教程，8天python从入门到精通，学python看这套就够了_哔哩哔哩_bilibili</a></p><p>👉<a href="https://www.itheima.com/">黑马程序员官网-IT培训机构</a></p><p><strong>python学习笔记导航🚲👇👇</strong></p><p>👉<a href="https://www.alanblog.cn/posts/9bdc6e36.html">python学习笔记（一）</a></p><p>👉<a href="https://www.alanblog.cn/posts/abca82ee.html">python学习笔记（二）</a></p><p>👉<a href="https://www.alanblog.cn/posts/e6d421bc.html">python学习笔记（三）</a>👈当前位置</p><p>👉<a href="https://www.alanblog.cn/posts/51f938d9.html">python学习笔记（四）</a></p></blockquote><hr><h1 id="八、函数进阶"><a href="#八、函数进阶" class="headerlink" title="八、函数进阶"></a>八、函数进阶</h1><h2 id="1、函数的多返回值"><a href="#1、函数的多返回值" class="headerlink" title="1、函数的多返回值"></a>1、函数的多返回值</h2><p>多个返回值：</p><p>​如果一个函数有多个返回值，可以使用如下的语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_return</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"></span><br><span class="line">x, y = test_return()</span><br><span class="line"><span class="built_in">print</span>(x)   <span class="comment"># 结果：1</span></span><br><span class="line"><span class="built_in">print</span>(y)   <span class="comment"># 结果：2</span></span><br></pre></td></tr></table></figure><ul><li>按照返回值的顺序，写对应顺序的多个变量接收即可</li><li>变量之间用逗号隔开</li><li>支持不同类型的数据return</li></ul><h2 id="2、函数的多种参数使用形式"><a href="#2、函数的多种参数使用形式" class="headerlink" title="2、函数的多种参数使用形式"></a>2、函数的多种参数使用形式</h2><p>  使用方式上的不同，函数有4中常见的参数使用方式：</p><ul><li><strong>位置参数</strong></li><li><strong>关键字参数</strong></li><li><strong>缺省参数</strong></li><li><strong>不定长参数</strong></li></ul><h3 id="（1）位置参数"><a href="#（1）位置参数" class="headerlink" title="（1）位置参数"></a>（1）位置参数</h3><blockquote><p>位置参数：调用函数时根据函数定义的<strong>参数位置来传递参数</strong></p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_info</span>(<span class="params">name, age, gender</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您的名字是<span class="subst">&#123;name&#125;</span>, 年龄是<span class="subst">&#123;age&#125;</span>, 性别是<span class="subst">&#123;gender&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">user_info(<span class="string">&quot;小明&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>)</span><br></pre></td></tr></table></figure><p>注意：传递的参数和定义的参数的顺序以及个数必须一致</p><h3 id="（2）关键字参数"><a href="#（2）关键字参数" class="headerlink" title="（2）关键字参数"></a>（2）关键字参数</h3><blockquote><p>关键字参数：函数调用时通过 “ 键 &#x3D; 值 ” 形式传递参数。</p><p>作用：可以让函数更加清晰、容易使用，同时也清除了参数的顺序需求.</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_info</span>(<span class="params">name, age, gender</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您的名字是：<span class="subst">&#123;name&#125;</span>，年龄是：<span class="subst">&#123;age&#125;</span>, 性别是：<span class="subst">&#123;gender&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 关键字传参</span></span><br><span class="line">user_info(name=<span class="string">&quot;小明&quot;</span>, age=<span class="number">20</span>, gender=<span class="string">&quot;男&quot;</span>)</span><br><span class="line"><span class="comment"># 可以不按照固定顺序</span></span><br><span class="line">user_info(age=<span class="number">20</span>, gender=<span class="string">&quot;男&quot;</span>, name=<span class="string">&quot;小明&quot;</span>)</span><br><span class="line"><span class="comment"># 可以和位置参数混用，位置参数必须在前，且匹配参数顺序</span></span><br><span class="line">user_info(<span class="string">&quot;小明&quot;</span>, age=<span class="number">20</span>, gender=<span class="string">&quot;男&quot;</span>)</span><br></pre></td></tr></table></figure><p>注意：函数调用时，如果有位置参数时，<strong>位置参数必须在关键字参数的前面</strong>，但关键字参数之间不存在先后顺厅</p><h3 id="（3）缺省参数"><a href="#（3）缺省参数" class="headerlink" title="（3）缺省参数"></a>（3）缺省参数</h3><blockquote><p>缺省参数：缺省参数也叫<strong>默认参数</strong>，用于定义函数，为参数提供默认值，调用函数时可不传该默认参数的值(注意：所有位置参数必须出现在默认参数前，包括函数定义和调用)。</p><p>作用：当调用函数时没有传递参数，就会使用默认是用缺省参数对应的值。</p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_info</span>(<span class="params">name, age, gender=<span class="string">&#x27;男&#x27;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您的名字是<span class="subst">&#123;name&#125;</span>, 年龄是<span class="subst">&#123;age&#125;</span>, 性别是<span class="subst">&#123;gender&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line">user_info(<span class="string">&#x27;小明&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">user_info(<span class="string">&#x27;小红&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;女&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>函数调用时，如果为缺省参数传值则修改默认参数值，否则使用这个默认值。</li><li>设置了默认值的参数必须在没有设置的参数的后面，即设置了默认值的参数必须在后面。</li></ul><h3 id="（4）不定长参数"><a href="#（4）不定长参数" class="headerlink" title="（4）不定长参数"></a>（4）不定长参数</h3><blockquote><p> 不定长参数：不定长参数也叫可变参数，用于不确定调用的时候会传递多少个参数（不传参也可以）的场景。</p><p>作用：当调用函数时不确定参数个数时，可以使用不定长参数</p></blockquote><p>不定长参数的类型：</p><ul><li>位置传递</li><li>关键字传递</li></ul><h4 id="①-位置传递"><a href="#①-位置传递" class="headerlink" title="① 位置传递"></a>① 位置传递</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_info</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="built_in">print</span>(args)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># (&#x27;小明&#x27;,)</span></span><br><span class="line">user_info(<span class="string">&#x27;TOM&#x27;</span>)</span><br><span class="line"><span class="comment"># (&#x27;小明&#x27;，18)</span></span><br><span class="line">user_info(<span class="string">&#x27;小明&#x27;</span>，<span class="number">18</span>)</span><br></pre></td></tr></table></figure><p>注意：传进的<strong>所有参数</strong>都会被args变量收集，它会根据传进参数的位置合并为一个元组(tuple)，<strong>args是元组类型</strong>，这就是位置传递。</p><h4 id="②-关键字传递"><a href="#②-关键字传递" class="headerlink" title="② 关键字传递"></a>② 关键字传递</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_info</span>(<span class="params">**kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#123;&#x27;name&#x27;:&#x27;小明&#x27;, age&#x27;:18, id&#x27;:110&#125;</span></span><br><span class="line">user_info(name=<span class="string">&#x27;小明&#x27;</span>, age=<span class="number">18</span>, <span class="built_in">id</span>=<span class="number">110</span>)</span><br></pre></td></tr></table></figure><p>注意：参数是 <strong>“ 键 &#x3D; 值 ”</strong> 形式的形式的情况下，所有的“键&#x3D;值”都会被<strong>kwargs接受</strong>，同时会根据 “ 键 &#x3D; 值 ” 组成子典。</p><blockquote><p>不定长参数中的变量（ args 和 kwargs ）是一种编程规范，并不是强制，可以自己根据需求定义，但是没有相关需求的时候规范默认为（ args 和 kwargs ）。</p></blockquote><h3 id="（5）总结"><a href="#（5）总结" class="headerlink" title="（5）总结"></a>（5）总结</h3><ol><li>位置参数<ul><li>根据参数位置来传递参数。</li></ul></li><li>关键字参数<ul><li>通过 “键&#x3D;值” 形式传递参数，可以不限参数顺序；</li><li>可以和位置参数混用，位置参数需在前。</li></ul></li><li>缺省参数<ul><li>不传递参数值时会使用默认的参数值；</li><li>默认值的参数必须定义在最后。</li></ul></li><li>不定长参数<ul><li>位置不定长传递以  *** ** 号标记一个形式参数，以<strong>元组的形式</strong>接受参数形式参数一般命名为args；</li><li>关键字不定长传递以  ******  号标记一个形式参数，以<strong>字典的形式</strong>接受参数，形式参数一般命名为kwargs。</li></ul></li></ol><h2 id="3、函数作为参数传递"><a href="#3、函数作为参数传递" class="headerlink" title="3、函数作为参数传递"></a>3、函数作为参数传递</h2><p> 函数本身也可以将其作为一个参数传入另外一个函数内</p><p>如下代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_func</span>(<span class="params">compute</span>):</span><br><span class="line">    result = compute(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y   <span class="comment"># 结果为：3</span></span><br></pre></td></tr></table></figure><p>函数compute，作为参数，传入了 test_func 函数中使用。</p><ul><li>test_func需要一个函数作为参数传入，这个函数需要接收2个数字进行计算，计算逻辑由这个被传入函数决定；</li><li>compute函数接收2个数字对其进行计算，compute函数作为参数，传递给了test_func函数使用；</li><li>最终，在test_func函数内部，由传入的compute函数，完成了对数字的计算操作。</li></ul><blockquote><p>注意：</p><ul><li>这是一种，计算逻辑的传递，而非数据的传递。</li><li>不仅仅是相加，相见、相除、等<strong>任何逻辑都可以自行定义并作为函数传入。</strong></li></ul><blockquote><ol><li>参数传入分为：① 数据的传入；② 函数的传入</li><li>其中函数作为参数传入其实传入的是代码的执行逻辑。</li><li>两种其中的区别为：<ul><li>普通的传入数据，其中<strong>函数的执行逻辑是确定的，不确定的是参数</strong>（即传入的数据）</li><li>而函数的传入（代码执行逻辑传入）中，<strong>数据是确定的，不确定的是代码的执行逻辑</strong>（执行逻辑可以更改对应传入的函数）</li></ul></li></ol></blockquote></blockquote><h2 id="4、lambda匿名函数"><a href="#4、lambda匿名函数" class="headerlink" title="4、lambda匿名函数"></a>4、lambda匿名函数</h2><p>函数的定义中</p><ul><li>def关键字，可以定义<strong>带有名称</strong>的函数</li><li>lambda关键字，可以<strong>定义匿名</strong>函数 (无名称)</li></ul><p>有名称的函数，可以基于<strong>名称重复使用</strong></p><p>无名称的匿名函数，只可<strong>临时使用一次.</strong></p><p>匿名函数定义语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lambda</span> 传入参数 : 函数体(一行代码)</span><br></pre></td></tr></table></figure><ul><li>lambda 是关键字，表示定义匿名函数</li><li>传入参数表示匿名函数的形式参数，如：x，y表示接收2个形式参数</li><li>函数体，就是函数的执行逻辑，要注意：只能写一行，无法写多行代码</li></ul><p>如下图代码：</p><ul><li>通过def关键字，定义一个函数，并传入</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_func</span>(<span class="params">compute</span>):</span><br><span class="line">    result = compute(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y   <span class="comment"># 结果为：3</span></span><br></pre></td></tr></table></figure><ul><li>也可以通过lambda关键字，传入一个一次性使用的lambda匿名函数</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_func</span>(<span class="params">compute</span>):</span><br><span class="line">    result = compute(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">test_func(<span class="keyword">lambda</span> x, y: x + y)    <span class="comment"># 结果:3</span></span><br></pre></td></tr></table></figure><blockquote><p>使用def和使用lambda，定义的函数功能完全一致，只是lambda关键字定义的函数是匿名的，无法二次使用。</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记（二）</title>
      <link href="/posts/abca82ee.html"/>
      <url>/posts/abca82ee.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>python学习笔记（二）</span><blockquote><p><strong>python学习教程了🍳👇👇</strong></p><p>b站 - 黑马程序员</p><p>👉<a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=6e4afa28de12d7ce5a6648aec8c6298d">黑马程序员python教程，8天python从入门到精通，学python看这套就够了_哔哩哔哩_bilibili</a></p><p>👉<a href="https://www.itheima.com/">黑马程序员官网-IT培训机构</a></p><p><strong>python学习笔记导航🚲👇👇</strong></p><p>👉<a href="https://www.alanblog.cn/posts/9bdc6e36.html">python学习笔记（一）</a></p><p>👉<a href="https://www.alanblog.cn/posts/abca82ee.html">python学习笔记（二）</a>👈当前位置</p><p>👉<a href="https://www.alanblog.cn/posts/e6d421bc.html">python学习笔记（三）</a></p><p>👉<a href="https://www.alanblog.cn/posts/51f938d9.html">python学习笔记（四）</a></p></blockquote><hr><h1 id="六、python数据容器"><a href="#六、python数据容器" class="headerlink" title="六、python数据容器"></a>六、python数据容器</h1><h2 id="1、数据容器的入门"><a href="#1、数据容器的入门" class="headerlink" title="1、数据容器的入门"></a>1、数据容器的入门</h2><p>数据容器是什么：</p><p>理解，数据容器即<strong>数组</strong>！</p><p>一种可以容纳多份数据的数据类型，容纳的每一份数据称之为1个元素每一个元素，可以是任意类型的数据，如字符串、数字、布尔等。</p><p>数据容器根据特点的不同，如:</p><ol><li>是否支持重复元素</li><li>是否可以修改</li><li>是否有序，等</li></ol><blockquote><p>分为5类，分别是:  <strong>列表 (list)、元组 (tuple) 、字符串 (str)、集合 (set) 、字典(dict)</strong></p></blockquote><h2 id="2、数据容器：list（列表）"><a href="#2、数据容器：list（列表）" class="headerlink" title="2、数据容器：list（列表）"></a>2、数据容器：list（列表）</h2><h3 id="（1）列表的定义"><a href="#（1）列表的定义" class="headerlink" title="（1）列表的定义"></a>（1）列表的定义</h3><p>基本语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字面量</span></span><br><span class="line">[元素<span class="number">1</span>，元素<span class="number">2</span>，元素<span class="number">3</span>，元素<span class="number">4</span>，...]</span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">变量名称 = [元素<span class="number">1</span>，元素<span class="number">2</span>，元素<span class="number">3</span>，元素<span class="number">4</span>，...]</span><br><span class="line"><span class="comment"># 定义空列表</span></span><br><span class="line">变量名称 = []</span><br><span class="line">变量名称 <span class="built_in">list</span>()</span><br></pre></td></tr></table></figure><p>注：</p><ol><li>列表内的每一个数据，称之为<strong>元素</strong></li><li>以 [] 作为标识</li><li>列表内每一个元素之间用，逗号隔开</li></ol><p>注意：列表可以一次存储多个数据，且可以为不同的数据类型，支持嵌套</p><h3 id="（2）列表的下标索引"><a href="#（2）列表的下标索引" class="headerlink" title="（2）列表的下标索引"></a>（2）列表的下标索引</h3><p>列表中的每一个元素，都有其位置下标索引，从前向后的方向，从0开始，依次递增</p><p><img src="https://cdnjson.com/images/2023/10/09/python_.png" alt="python_列表的下标"></p><p>或者，可以反向索引，也就是从后向前：从-1开始，依次递减（-1、-2、-3……）</p><p><img src="https://cdnjson.com/images/2023/10/09/python_-.png" alt="python_列表的下标-反向"></p><p>嵌套列表的下标(索引)</p><p><img src="https://cdnjson.com/images/2023/10/09/pyton_.png" alt="pyton_嵌套列表的下标(索引)"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过下标索引取出对应位置的数据</span></span><br><span class="line"></span><br><span class="line">my_<span class="built_in">list</span> = [<span class="string">&quot;Tom&quot;</span>，<span class="string">&quot;Lixy&quot;</span>，<span class="string">&quot;Rose&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表[ 下标索引]，从前向后从0开始，每次+1，从后向前从-1开始，每次-1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_list[o])</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误示范，通过下标索引取数据，一定不要超出范围</span></span><br><span class="line"><span class="comment"># print(my_list[3])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过下标索引取出数据(倒序取出)</span></span><br><span class="line"><span class="built_in">print</span>(my_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[-<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list[-<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">   <span class="comment"># 取出嵌套列表的元素</span></span><br><span class="line">   my_list = [ [<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>]，[<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>]]</span><br><span class="line"><span class="comment"># 取出数字5</span></span><br><span class="line"><span class="built_in">print</span>(my_ist[<span class="number">1</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="（3）列表的常用操作"><a href="#（3）列表的常用操作" class="headerlink" title="（3）列表的常用操作"></a>（3）列表的常用操作</h3><p>列表也提供了一系列功能：</p><ul><li><p>插入元素</p></li><li><p>删除元素</p></li><li><p>清空列表</p></li><li><p>修改元素</p></li></ul><p>统计元素个数等等功能，这些功能我们都称之为：<strong>列表的方法</strong></p><p><strong>列表的查询功能(方法)</strong></p><p><strong>函数</strong>是一个封装的代码单元，可以提供特定功能。</p><p>在Python中，如果将函数定义为class (类)的成员，那么函数会称之为：<strong>方法</strong></p><p>定义的区别：</p><p>函数定义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>)</span><br><span class="line">   <span class="keyword">return</span> x + y</span><br></pre></td></tr></table></figure><p>方法的定义：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x , y</span>)</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br></pre></td></tr></table></figure><p>方法和函数功能一样，有传入参数，有返回值，只是方法的使用格式不同：</p><p>函数的使用：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = add(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>方法的使用：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">student = Student()</span><br><span class="line">num = student.add(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h4 id="①-列表的查询功能-方法"><a href="#①-列表的查询功能-方法" class="headerlink" title="① 列表的查询功能(方法)"></a>① 列表的查询功能(方法)</h4><p>​查找某元素的下标</p><blockquote><p>功能：查找指定元素在列表的下标，如果找不到，报错ValueError</p><p>语法: </p><blockquote><p><strong>列表.index(元素)</strong></p></blockquote></blockquote><p>index就是列表对象(变量)内置的方法(函数)</p><h4 id="②-列表的修改功能-方法"><a href="#②-列表的修改功能-方法" class="headerlink" title="② 列表的修改功能(方法)"></a>② 列表的修改功能(方法)</h4><p>修改特定位置(索引)的元素值：</p><blockquote><p>语法：</p><blockquote><p><strong>列表[下标] &#x3D; 值</strong></p></blockquote></blockquote><p>可以使用如上语法，直接对指定下标(正向、反向下标均可)的值进行：重新赋值(修改)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#正向下标</span></span><br><span class="line">my_list = [<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>]</span><br><span class="line">my_list[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(my_list) <span class="comment"># 结果: [5，2，3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向下标</span></span><br><span class="line">my_list = [<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>]</span><br><span class="line">my_list[-<span class="number">3</span>] = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(my_list) <span class="comment"># 结果: [5，2，3]</span></span><br></pre></td></tr></table></figure><h4 id="③-列表的修改功能-方法"><a href="#③-列表的修改功能-方法" class="headerlink" title="③ 列表的修改功能(方法)"></a>③ 列表的修改功能(方法)</h4><h5 id="a-插入元素"><a href="#a-插入元素" class="headerlink" title="a.插入元素:"></a>a.插入元素:</h5><blockquote><p>功能: 在指定的下标位置，插入指定的元素</p><p>语法: </p><blockquote><p><strong>列表.insert(下标, 元素)</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.insert(<span class="number">1</span>, <span class="string">&quot;itheima&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 结果: [1, &quot;itheima&quot;, 3, 4]</span></span><br></pre></td></tr></table></figure><h5 id="b-追加元素-01："><a href="#b-追加元素-01：" class="headerlink" title="b.追加元素-01："></a>b.追加元素-01：</h5><blockquote><p>功能: 将指定元素，追加到列表的尾部</p><p>语法：</p><blockquote><p><strong>列表.append(元素)</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.append(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 结果: [1，2，3，4]</span></span><br><span class="line"></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_1ist.append([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list)   <span class="comment"># 结果: [ 1, 2, 3, [4, 5, 6]]</span></span><br></pre></td></tr></table></figure><h5 id="b-追加元素-02："><a href="#b-追加元素-02：" class="headerlink" title="b.追加元素-02："></a>b.追加元素-02：</h5><blockquote><p>功能: 将其它数据容器的内容取出，依次追加到列表尾部</p><p>语法: </p><blockquote><p><strong>列表.extend(其它数据容器)</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.extend([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(my_list)    <span class="comment"># 结果: [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h5 id="c-删除元素"><a href="#c-删除元素" class="headerlink" title="c.删除元素"></a>c.删除元素</h5><blockquote><p>语法1： <strong>del 列表[下标]</strong></p><p>语法2：<strong>列表.pop(下标)</strong></p></blockquote><p>区别：</p><p>​pop方法的本质是将元素取出来，然后返回出去，所以通过pop方法可以接收这个返回值，即可以接收删除的这个元素。</p><h5 id="d-删除某元素在列表中的第一个匹配项"><a href="#d-删除某元素在列表中的第一个匹配项" class="headerlink" title="d.删除某元素在列表中的第一个匹配项"></a>d.删除某元素在列表中的第一个匹配项</h5><blockquote><p>语法：</p><blockquote><p><strong>列表.remove(元素)</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.remove(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)   <span class="comment"># 结果: [1，3，2，3]</span></span><br></pre></td></tr></table></figure><h5 id="e-清空列表内容"><a href="#e-清空列表内容" class="headerlink" title="e.清空列表内容"></a>e.清空列表内容</h5><blockquote><p>语法：</p><blockquote><p><strong>列表.clear()</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">my_list.clear()</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 结果: []</span></span><br></pre></td></tr></table></figure><h4 id="④-统计元素"><a href="#④-统计元素" class="headerlink" title="④ 统计元素"></a>④ 统计元素</h4><h5 id="a-统计某元素在列表内的数量"><a href="#a-统计某元素在列表内的数量" class="headerlink" title="a.统计某元素在列表内的数量"></a>a.统计某元素在列表内的数量</h5><blockquote><p>语法：</p><blockquote><p><strong>列表.count(元素)</strong></p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(my_list.count(<span class="number">1</span>))  <span class="comment"># 结果 ： 3</span></span><br></pre></td></tr></table></figure><h5 id="b-统计列表内，有多少元素"><a href="#b-统计列表内，有多少元素" class="headerlink" title="b.统计列表内，有多少元素"></a>b.统计列表内，有多少元素</h5><blockquote><p>语法：</p><blockquote><p><strong>len(列表)</strong><br>通过len()函数，可以得到一个int数字，表示列表内的元素数量。</p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(my_list))   <span class="comment"># 结果5</span></span><br></pre></td></tr></table></figure><h4 id="⑤-总结"><a href="#⑤-总结" class="headerlink" title="⑤ 总结"></a>⑤ 总结</h4><table><thead><tr><th align="center">编号</th><th align="center">使用方式</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">列表.append(元素)</td><td align="center">向列表中追加一个元素</td></tr><tr><td align="center">2</td><td align="center">列表.extend(容器)</td><td align="center">将数据容器的内容依次取出，追加到列表尾部</td></tr><tr><td align="center">3</td><td align="center">列表.insert(下标,元素)</td><td align="center">在指定下标处，插入指定的元素</td></tr><tr><td align="center">4</td><td align="center">del列表[下标]</td><td align="center">删除列表指定下标元素</td></tr><tr><td align="center">5</td><td align="center">列表.pop(下标)</td><td align="center">删除列表指定下标元素</td></tr><tr><td align="center">6</td><td align="center">列表.remove(元素)</td><td align="center">从前向后，删除此元素第一个匹配项</td></tr><tr><td align="center">7</td><td align="center">列表.clear()</td><td align="center">清空列表</td></tr><tr><td align="center">8</td><td align="center">列表.count(元素)</td><td align="center">统计此元素在列表中出现的次数</td></tr><tr><td align="center">9</td><td align="center">列表.index(元素)</td><td align="center">查找指定元素在列表的下标,找不到报错ValueError</td></tr><tr><td align="center">10</td><td align="center">len(列表)</td><td align="center">统计容器内有多少元素</td></tr></tbody></table><p><strong>列表的特点：</strong></p><p>可以总结出列表有如下特点：</p><ol><li>可以容纳多个元素(上限为2**63-1、9223372036854775807个</li><li>可以容纳不同类型的元素(混装)</li><li>数据是有序存储的(有下标序号)</li><li>允许重复数据存在</li><li>可以修改(增加或删除元素等)</li></ol><h3 id="（4）list（列表）的遍历"><a href="#（4）list（列表）的遍历" class="headerlink" title="（4）list（列表）的遍历"></a>（4）list（列表）的遍历</h3><p>既然数据容器可以存储多个元素，那么，就会有需求从容器内依次取出元素进行操作。</p><p>将容器内的元素依次取出进行处理的行为，称之为：遍历、迭代。</p><h4 id="①-while循环"><a href="#①-while循环" class="headerlink" title="① while循环"></a>① while循环</h4><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">index = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> index &lt; <span class="built_in">len</span>(列表):</span><br><span class="line">    元素 = 列表[index]</span><br><span class="line">    对元素进行处理</span><br><span class="line">    index += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="②-for循环"><a href="#②-for循环" class="headerlink" title="② for循环"></a>② for循环</h4><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> 临时变量 <span class="keyword">in</span> 数据容器:</span><br><span class="line">    对临时变量进行处理</span><br></pre></td></tr></table></figure><h4 id="③-whlie和for循环的对比"><a href="#③-whlie和for循环的对比" class="headerlink" title="③ whlie和for循环的对比"></a>③ whlie和for循环的对比</h4><p>while循环和for循环，都是循环语句，但细节不同：</p><ul><li>在循环控制上:<ul><li>while循环<strong>可以自定循环条件</strong>，并自行控制</li><li>for循环<strong>不可以自定循环条件</strong>，只可以一个个从容器内取出数据</li></ul></li><li>在无限循环上:<ul><li>while循环<strong>可以</strong>通过条件控制做到无限循环</li><li>for循环理论上<strong>不可以</strong>，因为被遍历的容器容量不是无限的</li></ul></li><li>在使用场景上:<ul><li>while循环适用于任何想要循环的场景</li><li>for循环适用于，遍历数据容器的场景或简单的固定次数循环场景</li></ul></li></ul><h2 id="3、数据容器-tuple（元组）"><a href="#3、数据容器-tuple（元组）" class="headerlink" title="3、数据容器: tuple（元组）"></a>3、数据容器: tuple（元组）</h2><h3 id="（1）为什么需要元组？"><a href="#（1）为什么需要元组？" class="headerlink" title="（1）为什么需要元组？"></a>（1）为什么需要元组？</h3><p>列表是可以修改的。如果想要传递的信息，不被篡改，列表就不合适了。</p><p>元组同列表一样，都是可以封装多个、不同类型的元素在内。但最大的不同点在于：</p><p><strong>元组一旦定义完成,就不可修改</strong></p><p>所以，当需要在程序内封装数据，又不希望封装的数据被篡改，那么元组就非常合适</p><h3 id="（2）元组的定义"><a href="#（2）元组的定义" class="headerlink" title="（2）元组的定义"></a>（2）元组的定义</h3><p>定义元组使用<strong>小括号</strong>，且使用逗号隔开各个数据，数据可以是不同的数据类型。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义元组字面量</span></span><br><span class="line">(元素, 元素, ......, 元素)</span><br><span class="line"><span class="comment"># 定义元组变量</span></span><br><span class="line">变量名称 = (元素, 元素, ......, 元素)</span><br><span class="line"><span class="comment"># 定义空元组</span></span><br><span class="line">变量名称 = ()    <span class="comment"># 方式1</span></span><br><span class="line">变量名称 = tupe()    <span class="comment"># 方式2</span></span><br></pre></td></tr></table></figure><p>注意：元组只有一个数据，这个数据后面要添加一个逗号，否则就不是元组类型。</p><p>元组也支持嵌套：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个嵌套元组</span></span><br><span class="line">t1 = ((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(t1[<span class="number">0</span>][<span class="number">0</span>])   <span class="comment"># 结果：1</span></span><br></pre></td></tr></table></figure><h3 id="（3）元组的操作"><a href="#（3）元组的操作" class="headerlink" title="（3）元组的操作"></a>（3）元组的操作</h3><p>方法：<strong>index()</strong></p><p>作用：查找某个数据，如果数据存在返回对应的下标，否则报错。</p><p>方法：<strong>count()</strong></p><p>作用：统计某个数据在当前元组出现的次数。</p><p>方法：<strong>len(元组)</strong></p><p>作用：统计元组内的元素个数。</p><h3 id="（4）元组的遍历"><a href="#（4）元组的遍历" class="headerlink" title="（4）元组的遍历"></a>（4）元组的遍历</h3><p>元组的（while和for）遍历和列表的遍历方法一致。</p><h3 id="（5）元组的特点"><a href="#（5）元组的特点" class="headerlink" title="（5）元组的特点"></a>（5）元组的特点</h3><p>有如下特点：</p><ul><li><p>可以容纳多个数据</p></li><li><p>可以容纳不同类型的数据 (混装 )</p></li><li><p>数据是有序存储的 (下标索引 )</p></li><li><p>允许重复数据存在</p></li><li><p><strong>不可以修改</strong> (增加或删除元素等 )</p></li><li><p>支持for循环</p><p>多数特性和list一致，不同点在于不可修改的特性</p></li></ul><p>注：</p><ul><li>不可以修改元组的内容，否则会直接报错。</li><li><strong>可以修改元组内list的内容</strong>（修改元素，增加，删除，反转等）</li></ul><h2 id="4、数据容器：str（字符串）"><a href="#4、数据容器：str（字符串）" class="headerlink" title="4、数据容器：str（字符串）"></a>4、数据容器：str（字符串）</h2><p>字符串同样也是数据容器的一员。</p><p>字符串是字符的容器，一个字符串可以存放任意数量的字符。</p><h3 id="（1）字符串的下标（索引）"><a href="#（1）字符串的下标（索引）" class="headerlink" title="（1）字符串的下标（索引）"></a>（1）字符串的下标（索引）</h3><p>和其他容器，列表、元组一样，字符串也可以通过下标进行访问。</p><ul><li>从前向后，下标从0开始</li><li>从后向前，下标从-1开始</li></ul><p>注：同元组一样，字符串是一个：无法修改的数据容器。</p><p>所以:</p><ul><li><p>修改指定下标的字符    (如:字符串[0]&#x3D;“a”)</p></li><li><p>移除特定下标的字符    (如: del 字符串[0]、字符串.remove()、字符串.pop()等)</p></li><li><p>追加字符等    (如:字符串append())</p><p>均无法完成。如果必须要做，只能得到一个新的字符串，旧的字符串是无法修改</p></li></ul><h3 id="（2）字符串的操作"><a href="#（2）字符串的操作" class="headerlink" title="（2）字符串的操作"></a>（2）字符串的操作</h3><ul><li><p>查找特定字符串的下标索引值</p><ul><li>语法： <strong>字符串.index(字符串)</strong></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_str =<span class="string">&quot;itcast and itheima&quot;</span></span><br><span class="line"><span class="built_in">print</span>(my_str.index(<span class="string">&quot;and&quot;</span>))   <span class="comment"># 结果7</span></span><br></pre></td></tr></table></figure></li><li><p>字符串的替换</p><ul><li><p>语法：<strong>字符串.replace(字符串1，字符串2)</strong></p></li><li><p>功能： 将字符串内的全部: 字符串1，替换为字符串2</p></li></ul><p>注意：<strong>不是修改字符串本身，而是得到了一个新字符串</strong>,本质上来说会得到一个返回值。</p></li><li><p>字符串的分割</p><ul><li>语法：<strong>字符串.split(分隔符字符串 )</strong></li><li>功能：按照指定的分隔符字符串，将字符串划分为多个字符串，并存入列表对象</li></ul><p>注意：<strong>字符串本身不变，而是得到了一个列表（list）对象</strong></p></li><li><p>字符串的规整操作(去前后空格)</p><ul><li>语法：<strong>字符串.strip()</strong></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_str = <span class="string">&quot; itheima and itcast&quot;</span></span><br><span class="line"><span class="built_in">print</span> (my_str .strip())</span><br><span class="line"><span class="comment"># 结果:&quot;itheima and itcast&quot;</span></span><br></pre></td></tr></table></figure></li></ul><p>​注意：不传入参数就是默认去除前后的空格。</p><ul><li><p>字符串的规整操作(去前后指定字符串)</p><ul><li>语法: <strong>字符串.strip(字符串)</strong></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_str = <span class="string">&quot;12itheima and itcast21&quot;</span></span><br><span class="line"><span class="built_in">print</span>(my_str .strip(<span class="string">&quot;12&quot;</span>))</span><br><span class="line"><span class="comment"># 结果:&quot;itheima and itcast&quot;</span></span><br></pre></td></tr></table></figure><p>注意：传入的是“12” 其实就是:”1”和”2”都会移除，是按照单个字符。</p></li><li><p>统计字符串中某字符中的出现次数</p><ul><li>语法：<strong>字符串.count()</strong></li></ul></li><li><p>统计字符串的长度</p><ul><li>语法：<strong>len(字符串)</strong></li></ul></li></ul><h3 id="（3）字符串常用操作汇总"><a href="#（3）字符串常用操作汇总" class="headerlink" title="（3）字符串常用操作汇总"></a>（3）字符串常用操作汇总</h3><table><thead><tr><th align="center">编号</th><th align="center">操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">字符串[下标]</td><td align="center">根据下标索引取出特定位置字符</td></tr><tr><td align="center">2</td><td align="center">字符串.index(字符串)</td><td align="center">查找给定字符的第一个匹配项的下标</td></tr><tr><td align="center">3</td><td align="center">字符串.replace(字符串1,字符串2)</td><td align="center">将字符串内的全部字符串1，替换为字符串2,不会修改原字符串，而是得到一个新的</td></tr><tr><td align="center">4</td><td align="center">字符串.split(字符串)</td><td align="center">按照给定字符串，对字符串进行分隔不会修改原字符串，而是得到一个新的列表</td></tr><tr><td align="center">5</td><td align="center">字符串.strip()<br/>字符串.strip(字符串)</td><td align="center">移除首尾的空格和换行符或指定字符串</td></tr><tr><td align="center">6</td><td align="center">字符串.count(字符串)</td><td align="center">统计字符串内某字符串的出现次数</td></tr><tr><td align="center">7</td><td align="center">len(字符串)</td><td align="center">统计字符串的字符个数</td></tr></tbody></table><h3 id="（4）字符串的遍历"><a href="#（4）字符串的遍历" class="headerlink" title="（4）字符串的遍历"></a>（4）字符串的遍历</h3><p>同列表、元组一样，字符串也支持while循环和for循环进行追历</p><h3 id="（5）字符串的特点"><a href="#（5）字符串的特点" class="headerlink" title="（5）字符串的特点"></a>（5）字符串的特点</h3><p>作为数据容器，字符串有如下特点：</p><ul><li><strong>只可以存储字符串</strong></li><li>长度任意 (取决于内存大小)</li><li>支持下标索引</li><li>允许重复字符串存在</li><li><strong>不可以修改</strong>(增加或删除元素等)</li><li>支持while和for循环</li></ul><h2 id="5、数据容器的切片"><a href="#5、数据容器的切片" class="headerlink" title="5、数据容器的切片"></a>5、数据容器的切片</h2><h3 id="（1）序列"><a href="#（1）序列" class="headerlink" title="（1）序列"></a>（1）序列</h3><p>序列是指：内容连续、有序，可使用下标索引的一类数据容器</p><p>列表、元组、字符串，均可以视为序列。</p><h3 id="（2）序列的常用操作-切片"><a href="#（2）序列的常用操作-切片" class="headerlink" title="（2）序列的常用操作 - 切片"></a>（2）序列的常用操作 - 切片</h3><p>序列支持切片，即: 列表、元组、字符串，均支持进行切片操作</p><p><strong>切片： 从一个序列中，取出一个子序列</strong></p><p><strong>语法：序列[起始下标:结束下标:步长]</strong></p><p>表示从序列中，从指定位置开始，依次取出元素，到指定位置结束，得到一个新序列：</p><ul><li><p>起始下标表示从何处开始，可以留空，留空视作从头开始</p></li><li><p>结束下标<strong>（不含）</strong>表示何处结束，可以留空，留空视作截取到结尾</p></li><li><p>步长表示，依次取元素的间隔</p><ul><li>步长1表示，一个个取元素</li><li>步长2表示，每次跳过1个元素取</li><li>步长N表示，每次跳过N-1个元素取</li><li>步长为负数表示，反向取（注意，起始下标和结束下标也要反向标记）</li></ul></li></ul><p>注意：此操作不会影响序列本身，而是会得到一个新的序列（列表，元组、字符串）。</p><p>测试：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">对序列进行切片操作</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对list进行切片，从1开始，4结束，步长1</span></span><br><span class="line">my_list = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">result1 = my_list[<span class="number">1</span>:<span class="number">4</span>]      <span class="comment"># 步长默认是1，所以可以省略不写</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果1：<span class="subst">&#123;result1&#125;</span>&quot;</span>)   <span class="comment"># 结果1：[1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对tuple进行切片，从头开始，到最后结束，步长1</span></span><br><span class="line">my_tuple = (<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, )</span><br><span class="line">result2 = my_tuple[:]       <span class="comment"># 起始和结束不写表示从头到尾，步长为1可以省略</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果2：<span class="subst">&#123;result2&#125;</span>&quot;</span>)   <span class="comment"># 结果2：(0, 1, 2, 3, 4, 5, 6)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对str进行切片，从头开始，到最后结束，步长2</span></span><br><span class="line">my_str = <span class="string">&quot;01234567&quot;</span></span><br><span class="line">result3 = my_str[::<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果3：<span class="subst">&#123;result3&#125;</span>&quot;</span>)   <span class="comment"># 结果3：0246</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对str进行切片，从头开始，到最后结束，步长-1</span></span><br><span class="line">my_str = <span class="string">&quot;01234567&quot;</span></span><br><span class="line">result4 = my_str[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果4：<span class="subst">&#123;result4&#125;</span>&quot;</span>)   <span class="comment"># 等同于将序列反转了  结果4：76543210</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对列表进行切片，从3开始，到1结束，步长-1</span></span><br><span class="line">my_list = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">result5 = my_list[<span class="number">3</span>:<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果5：<span class="subst">&#123;result5&#125;</span>&quot;</span>)   <span class="comment"># 结果5：[3, 2]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对元组进行切片，从头开始，到尾结束，步长-2</span></span><br><span class="line">my_tuple = (<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, )</span><br><span class="line">result6 = my_tuple[::-<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果6：<span class="subst">&#123;result6&#125;</span>&quot;</span>)    <span class="comment"># 结果6：(6, 4, 2, 0)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6、数据容器-：set（集合）"><a href="#6、数据容器-：set（集合）" class="headerlink" title="6、数据容器:：set（集合）"></a>6、数据容器:：set（集合）</h2><h3 id="（1）为什么使用集合"><a href="#（1）为什么使用集合" class="headerlink" title="（1）为什么使用集合"></a>（1）为什么使用集合</h3><p> 通过特性来分析:</p><ul><li>列表可修改、支持重复元素且有序</li><li>元组、字符串不可修改、支持重复元素且有序</li></ul><p>局限就在于：<strong>它们都支持重复元素</strong>。</p><p>如果场景需要对内容做去重处理，列表、元组、字符串就不方便了。</p><p>而集合，最主要的特点就是：<strong>不支持元素的重复(自带去重功能)、并且内容无序。</strong></p><h3 id="（2）集合的定义："><a href="#（2）集合的定义：" class="headerlink" title="（2）集合的定义："></a>（2）集合的定义：</h3><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义集合字面量</span></span><br><span class="line">&#123;元素, 元素, ......,元素&#125;</span><br><span class="line"><span class="comment"># 定义集合变量</span></span><br><span class="line">变量名称 = &#123;元素, 元素, ......, 元素&#125;</span><br><span class="line"><span class="comment"># 定义空集合</span></span><br><span class="line">变量名称 = <span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>和列表、元组、字符串等定义基本相同：</p><ul><li>列表使用：[ ]</li><li>元组使用：( )</li><li>字符串使用：” “</li><li>集合的使用：{}</li></ul><h3 id="（3）集合（set）的两个基本特点"><a href="#（3）集合（set）的两个基本特点" class="headerlink" title="（3）集合（set）的两个基本特点"></a>（3）集合（set）的两个基本特点</h3><ol><li>不允许重复；</li><li>内容无序。</li></ol><p>注意：因为集合是无序的，所以<strong>集合不是序列</strong>！！</p><h3 id="（4）集合的常用操作-修改"><a href="#（4）集合的常用操作-修改" class="headerlink" title="（4）集合的常用操作 - 修改"></a>（4）集合的常用操作 - 修改</h3><p>因为集合是无序的，所以<strong>集合不支持：下标索引访问。</strong></p><p>但是集合和列表一样，是允许修改的。</p><ul><li><p>添加新元素</p><ul><li><p>语法：<strong>集合.add(元素)</strong></p></li><li><p>功能：将指定元素，添加到集合内</p></li><li><p>结果：集合本身被修改，添加了新元素</p></li></ul></li><li><p>移除元素</p><ul><li><p>语法：<strong>集合.remove(元素)</strong></p></li><li><p>功能：将指定元素，从集合内移除</p></li><li><p>结果：集合本身被修改，移除了元素</p></li></ul></li><li><p>从集合中随机取出元素</p><ul><li><p>语法：<strong>集合.pop()</strong></p></li><li><p>功能：从集合中随机取出一个元素</p></li><li><p>结果：会得到一个元素的结果。同时集合本身被修改，元素被移除</p></li><li><p>注意：pop()在列表中也有。但是不同的是列表可以指定元素下标索引，但是由于集合没有下标索引，所以取出的元素为随机。</p></li></ul></li><li><p>清空集合</p><ul><li><p>语法：<strong>集合.clear()</strong></p></li><li><p>功能：清空集合中的所有元素。</p></li><li><p>结果：集合中的元素被清空，得到一个空集合set().</p></li></ul></li><li><p>取出2个集合的差集</p><ul><li><p>语法：<strong>集合1.difference(集合2)</strong></p></li><li><p>功能：取出集合1和集合2的差集 (集合1有而集合2没有的)</p></li><li><p>结果：得到一个新集合，集合1和集合2不变</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">set3 = set1.difference(set2)</span><br><span class="line"><span class="built_in">print</span>(set3)   <span class="comment"># 结果: &#123;2, 3&#125;得到的新集合</span></span><br><span class="line"><span class="built_in">print</span>(set1)   <span class="comment"># 结果: &#123;1, 2, 3&#125; 不变</span></span><br><span class="line"><span class="built_in">print</span>(set2)   <span class="comment"># 结果: &#123;1, 5, 6&#125; 不变</span></span><br></pre></td></tr></table></figure></li><li><p>消除2个集合的差集</p><ul><li><p>语法：<strong>集合1.difference_update(集合2)</strong></p></li><li><p>功能：对比集合1和集合2，<strong>在集合1内，删除和集合2相同的元素</strong>。</p></li><li><p>结果：<strong>集合1被修改，集合2不变</strong></p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">set1.difference_update(set2)</span><br><span class="line"><span class="built_in">print</span>(set1)   <span class="comment"># 结果: &#123;2, 3&#125;</span></span><br><span class="line"><span class="built_in">print</span>(set2)   <span class="comment"># 结果: &#123;1, 5, 6&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>2个集合合并</p><ul><li><p>语法：<strong>集合1.union(集合2)</strong></p></li><li><p>功能：<strong>将集合1和集合2组合成新集合</strong></p></li><li><p>结果：<strong>得到新集合，集合1和集合2不变</strong></p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">set3 = setl.union(set2)</span><br><span class="line"><span class="built_in">print</span>(set3)   <span class="comment"># 结果:&#123;1, 2, 3, 5, 6&#125;,新集合</span></span><br><span class="line"><span class="built_in">print</span>(set1)  <span class="comment"># 结果:&#123;1, 2, 3&#125;,set1不变</span></span><br><span class="line"><span class="built_in">print</span>(set2)  <span class="comment"># 结果:&#123;1, 5, 6&#125;,set2不变</span></span><br></pre></td></tr></table></figure></li><li><p>统计集合元素的数量</p><ul><li><p>语法：<strong>len(集合)</strong></p></li><li><p>功能：统计集合元素的数量</p></li></ul></li><li><p>集合的遍历</p><ul><li><p>注意：集合不支持下标索引，所以不能用while循环。</p></li><li><p>可以<strong>使用for循环</strong>。</p></li></ul></li></ul><h3 id="（5）集合的常用功能总结"><a href="#（5）集合的常用功能总结" class="headerlink" title="（5）集合的常用功能总结"></a>（5）集合的常用功能总结</h3><table><thead><tr><th align="center">编号</th><th align="center">操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">集合.add(元素)</td><td align="center">集合内添加一个元素</td></tr><tr><td align="center">2</td><td align="center">集合.remove(元素)</td><td align="center">移除集合内指定的元素</td></tr><tr><td align="center">3</td><td align="center">集合.pop()</td><td align="center">从集合中随机取出一个元素</td></tr><tr><td align="center">4</td><td align="center">集合.clear()</td><td align="center">将集合清空</td></tr><tr><td align="center">5</td><td align="center">集合1.difference(集合2)</td><td align="center">得到一个新集合，内含2个集合的差集原有的2个集合内容不变</td></tr><tr><td align="center">6</td><td align="center">集合1.difference_update(集合2)</td><td align="center">在集合1中，删除集合2中存在的元素集合1被修改，集合2不变</td></tr><tr><td align="center">7</td><td align="center">集合1.union(集合2)</td><td align="center">得到1个新集合，内含2个集合的全部元素原有的2个集合内容不变</td></tr><tr><td align="center">8</td><td align="center">len(集合)</td><td align="center">得到一个整数，记录了集合的元素数量</td></tr></tbody></table><h3 id="（6）集合的特点"><a href="#（6）集合的特点" class="headerlink" title="（6）集合的特点"></a>（6）集合的特点</h3><ul><li>可以容纳多个数据</li><li>可以容纳不同类型的数据 (混装 )</li><li><em>数据是无序存储的 (不支持下标索引)</em>*</li><li><strong>不允许重复数据存在</strong></li><li>可以修改(增加或删除元素等)</li><li>支持for循环</li></ul><h2 id="7、数据容器：dict（字典、映射）"><a href="#7、数据容器：dict（字典、映射）" class="headerlink" title="7、数据容器：dict（字典、映射）"></a>7、数据容器：dict（字典、映射）</h2><p>生活中的字典：【字】：【含义】</p><p>——可以按照【字】找到对应的【含义】</p><p>Python中的字典：key：Value</p><p>——可以按照【key】找到对应的【Value】</p><h3 id="（1）为什么使用字典"><a href="#（1）为什么使用字典" class="headerlink" title="（1）为什么使用字典"></a>（1）为什么使用字典</h3><p>因为可以使用字典（dict），实现用key取出Value的操作。</p><h3 id="（2）字典的定义"><a href="#（2）字典的定义" class="headerlink" title="（2）字典的定义"></a>（2）字典的定义</h3><p>字典的定义，同样<strong>使用{}<strong>，不过存储的元素是一个个的：</strong>键值对</strong>，如下语法:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义字典字面量</span></span><br><span class="line">&#123;key: value, key: value, ......, key: value&#125;</span><br><span class="line"><span class="comment"># 定义字典变量</span></span><br><span class="line">my_dict = &#123;key: value, key: value, ......, key: value&#125;</span><br><span class="line"><span class="comment"># 定义空字典</span></span><br><span class="line">my_dict = &#123;&#125;     <span class="comment"># 空字典定义方式1</span></span><br><span class="line">my_dict = <span class="built_in">dict</span>()   <span class="comment"># 空字典定义方式2</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：定义空字典可以只定义：{} ，也可以定义：dict() ；而集合不能只使用 {} ，因为被字典占用了，必须定义为：set() 。</p></blockquote><h3 id="（3）字典数据的获取"><a href="#（3）字典数据的获取" class="headerlink" title="（3）字典数据的获取"></a>（3）字典数据的获取</h3><p>字典同集合一样，不可以使用下标索引。</p><blockquote><p>但是<strong>字典可以通过Key值来取得对应的Value</strong>。</p><p>使用方法和下标索引的使用一样，使用一个:[]，将Key填入[]中就可以。</p></blockquote><h3 id="（4）字典的嵌套"><a href="#（4）字典的嵌套" class="headerlink" title="（4）字典的嵌套"></a>（4）字典的嵌套</h3><p>字典的Key和Value可以是任意数据类型（Key不可为字典）</p><p>例如：</p><table><thead><tr><th align="center">姓名</th><th align="center">语文</th><th align="center">数学</th><th align="center">英语</th></tr></thead><tbody><tr><td align="center">张三</td><td align="center">77</td><td align="center">66</td><td align="center">55</td></tr><tr><td align="center">李四</td><td align="center">88</td><td align="center">77</td><td align="center">66</td></tr><tr><td align="center">小明</td><td align="center">99</td><td align="center">88</td><td align="center">66</td></tr></tbody></table><p>对以上表格中的内容使用字典定义，如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义嵌套字典</span></span><br><span class="line">my_dict = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;语文&quot;</span>:<span class="number">77</span>,</span><br><span class="line">        <span class="string">&quot;数学&quot;</span>:<span class="number">66</span>,</span><br><span class="line">        <span class="string">&quot;英语&quot;</span>:<span class="number">55</span></span><br><span class="line">    &#125;, <span class="string">&quot;李四&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;语文&quot;</span>:<span class="number">88</span>,</span><br><span class="line">        <span class="string">&quot;数学&quot;</span>:<span class="number">77</span>,</span><br><span class="line">        <span class="string">&quot;英语&quot;</span>:<span class="number">66</span></span><br><span class="line">    &#125;, <span class="string">&quot;小明&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;语文&quot;</span>:<span class="number">99</span>,</span><br><span class="line">        <span class="string">&quot;数学&quot;</span>:<span class="number">88</span>,</span><br><span class="line">        <span class="string">&quot;英语&quot;</span>:<span class="number">66</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（5）从嵌套的字典中获取数据"><a href="#（5）从嵌套的字典中获取数据" class="headerlink" title="（5）从嵌套的字典中获取数据"></a>（5）从嵌套的字典中获取数据</h3><p>如查看以上定义的字典，查看小明的语文成绩，如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看小明的语文成绩</span></span><br><span class="line">data = my_dict[<span class="string">&quot;小明&quot;</span>][<span class="string">&quot;语文&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;小明的语文成绩是：<span class="subst">&#123;data&#125;</span>&quot;</span>)   <span class="comment"># 输出结果为：99</span></span><br></pre></td></tr></table></figure><h3 id="（6）字典的注意事项"><a href="#（6）字典的注意事项" class="headerlink" title="（6）字典的注意事项"></a>（6）字典的注意事项</h3><ul><li>键值对的Key和Value可以是任意类型(Key不可为字典)</li><li>字典内<strong>Key不允许重复</strong>，重复添加等同于覆盖原有数据</li><li>字典<strong>不可用下标索引</strong>，而是通过Key检索Value</li></ul><h3 id="（7）字典的常用操作"><a href="#（7）字典的常用操作" class="headerlink" title="（7）字典的常用操作"></a>（7）字典的常用操作</h3><ul><li><p>新增元素&#x2F;更新元素</p><ul><li><p>语法：<strong>字典[key] &#x3D; Value</strong></p></li><li><p>结果：字典被修改，新增了元素&#x2F;元素被更新</p></li><li><p>注意：字典Key不可以重复，所以对已存在的Key执行上述操作，就是更新Value值；如果Key不存在即新增，如果Key存在即更新 (Key不可重复)</p></li></ul></li><li><p>删除元素</p><ul><li><p>语法：<strong>字典.pop(Key)</strong></p></li><li><p>结果：获得指定Key的Value，同时字典被修改，指定Key的数据被删除</p></li></ul></li><li><p>清空字典</p><ul><li><p>语法：<strong>字典.clear()</strong></p></li><li><p>结果:字典被修改，元素被清空</p></li></ul></li><li><p>获取全部的Key</p><ul><li><p>语法：<strong>字典.keys()</strong></p></li><li><p>结果：得到字典中的全部Key</p></li></ul></li><li><p>字典的遍历</p><p>方式一：通过keys获取全部的Key来使用for循环进行遍历。</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字典的key是:<span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字典的value是: (my_dict[key]&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>​方式二：直接对字典进行for循环，每一次循环都是直接得到Key。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> my_dict:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字典的key是:<span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;字典的value是: (my_dict[key]&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>统计字典的元素数量</p><p>语法：<strong>len(字典)</strong></p></li></ul><h3 id="（8）字典的常用操作总结"><a href="#（8）字典的常用操作总结" class="headerlink" title="（8）字典的常用操作总结"></a>（8）字典的常用操作总结</h3><table><thead><tr><th align="center">编号</th><th align="center">操作</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">字典[Key]</td><td align="center">获取指定Key对应的Value值</td></tr><tr><td align="center">2</td><td align="center">字典[Key]&#x3D; Value</td><td align="center">添加或更新键值对</td></tr><tr><td align="center">3</td><td align="center">字典.pop(Key)</td><td align="center">取出Key对应的Value并在字典内删除此Key的键值对</td></tr><tr><td align="center">4</td><td align="center">字典.clear()</td><td align="center">清空字典</td></tr><tr><td align="center">5</td><td align="center">字典.keys()</td><td align="center">获取字典的全部Key，可用于for循环遍历字典</td></tr><tr><td align="center">6</td><td align="center">len(字典)</td><td align="center">计算字典内的元素数量</td></tr></tbody></table><h3 id="（9）字典的特点"><a href="#（9）字典的特点" class="headerlink" title="（9）字典的特点"></a>（9）字典的特点</h3><ul><li>可以容纳多个数据</li><li>可以容纳不同类型的数据</li><li><strong>每一份数据是KeyValue键值对</strong></li><li><strong>可以通过Key获取到Value，Key不可重复 (重复会覆盖)</strong></li><li>不支持下标索引</li><li><strong>可以修改</strong> (增加或删除更新元素等)</li><li>支持for循环，不支持while循环</li></ul><h2 id="8、数据容器的总结"><a href="#8、数据容器的总结" class="headerlink" title="8、数据容器的总结"></a>8、数据容器的总结</h2><h3 id="（1）数据容器的分类"><a href="#（1）数据容器的分类" class="headerlink" title="（1）数据容器的分类"></a>（1）数据容器的分类</h3><ul><li><p>是否支持下标索引：</p><ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 - 非序列类型</li></ul></li><li><p>是否支持重复元素：</p><ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 - 非序列类型</li></ul></li><li><p>是否可以修改：</p><ul><li>支持：列表、集合、字典</li><li>不支持：元组、字符串</li></ul></li></ul><h3 id="（2）数据容器特点对比"><a href="#（2）数据容器特点对比" class="headerlink" title="（2）数据容器特点对比"></a>（2）数据容器特点对比</h3><table><thead><tr><th align="center"></th><th align="center">列表</th><th align="center">元组</th><th align="center">字符串</th><th align="center">集合</th><th align="center">字典</th></tr></thead><tbody><tr><td align="center">元素数量</td><td align="center">支持多个</td><td align="center">支持多个</td><td align="center">支持多个</td><td align="center">支持多个</td><td align="center">支持多个</td></tr><tr><td align="center">元素类型</td><td align="center">任意</td><td align="center">任意</td><td align="center"><strong>仅字符</strong></td><td align="center">任意</td><td align="center">Key: Value</td></tr><tr><td align="center">下标索引</td><td align="center">支持</td><td align="center">支持</td><td align="center">支持</td><td align="center"><strong>不支持</strong></td><td align="center"><strong>不支持</strong></td></tr><tr><td align="center">重复元素</td><td align="center">支持</td><td align="center">支持</td><td align="center">支持</td><td align="center"><strong>不支持</strong></td><td align="center"><strong>不支持</strong></td></tr><tr><td align="center">可修改性</td><td align="center">支持</td><td align="center"><strong>不支持</strong></td><td align="center"><strong>不支持</strong></td><td align="center">支持</td><td align="center">支持</td></tr><tr><td align="center">数据有序</td><td align="center">是</td><td align="center">是</td><td align="center">是</td><td align="center"><strong>否</strong></td><td align="center"><strong>否</strong></td></tr><tr><td align="center">使用场景</td><td align="center">可修改、可重复的一批数据记录场景</td><td align="center">不可修改、可重复的一批数据记录场景</td><td align="center">一串字符的记录场景</td><td align="center">不可重复的数据记录场景</td><td align="center">以Key检索Value的数据记录场景</td></tr></tbody></table><h3 id="（3）各类数据容器的使用场景"><a href="#（3）各类数据容器的使用场景" class="headerlink" title="（3）各类数据容器的使用场景"></a>（3）各类数据容器的使用场景</h3><ul><li>列表：一批数据，可修改、可重复的存储场景</li><li>元组：一批数据，不可修改、可重复的存储场景</li><li>字符串：一串字符串的存储场景</li><li>集合：一批数据，去重存储场景</li><li>字典：一批数据，可用Key检索Value的存储场景</li></ul><h3 id="（4）数据容器的通用操作"><a href="#（4）数据容器的通用操作" class="headerlink" title="（4）数据容器的通用操作"></a>（4）数据容器的通用操作</h3><h4 id="1-通用操作"><a href="#1-通用操作" class="headerlink" title="1. 通用操作"></a>1. 通用操作</h4><p>① 遍历</p><ul><li>5类数据容器都支持for循环遍历</li><li>列表、元组、字符串支持while循环，集合、字典不支持 (无法下标索引)</li></ul><p>尽管遍历的形式各有不同，但是，它们都支持遍历操作。</p><p>② 统计容器元素个数</p><p>语法：len(容器)</p><p>③ 统计容器的最大元素</p><p>语法：max(容器)</p><p>④ 统计容器的最小元素</p><p>语法：min(容器)</p><h4 id="2-容器的通用转换功能"><a href="#2-容器的通用转换功能" class="headerlink" title="2.容器的通用转换功能"></a>2.容器的通用转换功能</h4><p>① 将给定容器转换为列表</p><p>语法：list(容器)</p><p>②  将给定容器转换为字符串</p><p>语法：str(容器)</p><p>③  将给定容器转换为元组</p><p>语法：tuple(容器)</p><p>④  将给定容器转换为集合</p><p>语法：set(容器)</p><h4 id="3-容器的通用排序功能"><a href="#3-容器的通用排序功能" class="headerlink" title="3.容器的通用排序功能"></a>3.容器的通用排序功能</h4><p>通用排序功能</p><p>将给定容器进行排序</p><p>语法：<strong>sorted(容器, [reverse &#x3D; True])</strong></p><p>注意：1、reverse（反转）默认false，控制从小到大（false）或者从大到小（True）的排序。</p><p>​2、排序的结果会变成列表对象。</p><h3 id="（5）容器通用功能总览"><a href="#（5）容器通用功能总览" class="headerlink" title="（5）容器通用功能总览"></a>（5）容器通用功能总览</h3><table><thead><tr><th align="center">功能</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">通用for循环</td><td align="center">遍历容器 (字典是遍历key)</td></tr><tr><td align="center">max</td><td align="center">容器内最大元素</td></tr><tr><td align="center">min()</td><td align="center">容器内最小元素</td></tr><tr><td align="center">len()</td><td align="center">容器元素个数</td></tr><tr><td align="center">list()</td><td align="center">转换为列表</td></tr><tr><td align="center">tuple()</td><td align="center">转换为元组</td></tr><tr><td align="center">str()</td><td align="center">转换为字符串</td></tr><tr><td align="center">set()</td><td align="center">转换为集合</td></tr><tr><td align="center">sorted(序列, [reverse &#x3D; True])</td><td align="center">排序，reverse&#x3D;True表示降序得到一个<strong>排好序的列表</strong></td></tr></tbody></table><h2 id="七、拓展-字符串大小比较"><a href="#七、拓展-字符串大小比较" class="headerlink" title="七、拓展 - 字符串大小比较"></a>七、拓展 - 字符串大小比较</h2><h3 id="1、ASCII码表"><a href="#1、ASCII码表" class="headerlink" title="1、ASCII码表"></a>1、ASCII码表</h3><p>在程序中，字符串所用的所有字符如:</p><ul><li>大小写英文单词</li><li>数字</li><li>特殊符号(!、\、|、@、#、空格等)</li></ul><p>都有其对应的ASCII码表值，每一个字符都能对应上一个:数字的码值。</p><p>字符串进行比较就是基于数字的码值大小进行比较的。</p><h3 id="2、字符串比较"><a href="#2、字符串比较" class="headerlink" title="2、字符串比较"></a>2、字符串比较</h3><p>字符串是按位比较，也就是一位位进行对比，只要有一位大，那么整体就大。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记（一）</title>
      <link href="/posts/9bdc6e36.html"/>
      <url>/posts/9bdc6e36.html</url>
      
        <content type="html"><![CDATA[<span class='p center huge'>python学习笔记（一）</span><blockquote><p><strong>python学习教程了🍳👇👇</strong></p><p>b站 - 黑马程序员</p><p>👉<a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click&vd_source=6e4afa28de12d7ce5a6648aec8c6298d">黑马程序员python教程，8天python从入门到精通，学python看这套就够了_哔哩哔哩_bilibili</a></p><p>👉<a href="https://www.itheima.com/">黑马程序员官网-IT培训机构</a></p><p><strong>python学习笔记导航🚲👇👇</strong></p><p>👉<a href="https://www.alanblog.cn/posts/9bdc6e36.html">python学习笔记（一）</a>👈当前位置</p><p>👉<a href="https://www.alanblog.cn/posts/abca82ee.html">python学习笔记（二）</a></p><p>👉<a href="https://www.alanblog.cn/posts/e6d421bc.html">python学习笔记（三）</a></p><p>👉<a href="https://www.alanblog.cn/posts/51f938d9.html">python学习笔记（四）</a></p></blockquote><hr><h1 id="一、pycharm的使用"><a href="#一、pycharm的使用" class="headerlink" title="一、pycharm的使用"></a>一、pycharm的使用</h1><h2 id="pycharm快捷键"><a href="#pycharm快捷键" class="headerlink" title="pycharm快捷键"></a><strong>pycharm快捷键</strong></h2><p>​ctrl+alt+s:打开软件设置；</p><p>​ctrl+d：复制当前行代码；</p><p>​shift+alt+上&#x2F;下：将当前代码上移或者下移；</p><p>​shift+f6：重命名文件；</p><p>​ctrl+a：全选；</p><p>​ctrl+a\v\x：复制、粘贴、剪切；</p><p>​ctrl+f：搜索；</p><hr><h1 id="二、python的基础语法"><a href="#二、python的基础语法" class="headerlink" title="二、python的基础语法"></a>二、python的基础语法</h1><h2 id="1、字面量"><a href="#1、字面量" class="headerlink" title="1、字面量"></a>1、字面量</h2><p> 在代码中，被写下来的固定的值，称之为<strong>字面量</strong>。</p><table><thead><tr><th align="left">类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td align="left">数字（Number）</td><td>支持<br/>整数（int）</td><td>整数 (int)，如:10、-10</td></tr><tr><td align="left"></td><td>浮点数（float）</td><td>浮点数 (float)，如: 13.14、-13.14</td></tr><tr><td align="left"></td><td>复数（complex）</td><td>复数(complex)，如:4+3j，以j结尾表示复数</td></tr><tr><td align="left"></td><td>布尔（bool）</td><td>布尔(bool)表达现实生活中的逻辑，即真和假，True表示真，False表示假。<br/>True本质上是一个数字记作1，False记作0</td></tr><tr><td align="left">字符串（String）</td><td>描述文本的一种数据类型</td><td>字符串 (string)由任意数量的字符组成</td></tr><tr><td align="left">列表（List）</td><td>有序的可变序列</td><td>Python中使用最频繁的数据类型，可有序记录一堆数据</td></tr><tr><td align="left">元组（Tuple）</td><td>有序的不可变序列</td><td>可有序记录一堆不可变的Python数据集合</td></tr><tr><td align="left">集合（Set）</td><td>无序不重复集合</td><td>可无序记录一堆不重复的Python数据集合</td></tr><tr><td align="left">字典（Dictionary）</td><td>无序Key-Value集合</td><td>可无序记录一堆Key-Value型的Python数据集合</td></tr></tbody></table><ul><li><p>①字符串：字符串(string)，又称文本，是由任意数量的字符如中文、英文、各类符号、数字等组成。所以叫做字符的串</p></li><li><p>②Python中，<strong>字符串需要用双引号（“”）包围</strong>起来。</p></li><li><p>③<strong>被双引号包围起来的，都是字符串。</strong></p></li></ul><h2 id="2、注释"><a href="#2、注释" class="headerlink" title="2、注释"></a>2、注释</h2><p>在程序代码中对程序代码进行解释说明的文字、</p><p>作用：注释不是程序，不能被执行，只是对程序代码进行解释说明，让别人可以看懂程序代码的作用，能够大大增强程序的可读性。</p><p>注释的分类：</p><ul><li><p>①单行注释：以  <strong>#开头</strong>，#右边 的所有文字当作说明，而不是真正要执行的程序，起<strong>辅助说明的作用</strong>。</p></li><li><p>②多行注释： 以一对三个双引号 引起来（““” 注释内容“”“）<strong>通常来解释说明一段代码的作用使用方法</strong>。</p><p>注：#号和注释内容一般建议以一个空格隔开。</p></li></ul><h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><p>在程序运行时，能储存计算结果或能表示值的抽象概念简单的说，变量就是在程序运行时，记录数据用的。</p><blockquote><p> 变量的定义格式：<strong>变量名称 &#x3D; 变量的值</strong></p></blockquote><p>每一个变量都有自己的名称，称之为:<strong>变量名</strong>，也就是变量本身；</p><p>赋值，表示将等号右侧的值，赋予左侧的变量；</p><p>每一个变量都有自己存储的值(内容)，称之为:变量值。</p><p><strong>注：（python中定义变量时不需要定义说明数据类型。）</strong></p><h2 id="4、数据类型"><a href="#4、数据类型" class="headerlink" title="4、数据类型"></a>4、数据类型</h2><table><thead><tr><th align="center">类型</th><th align="center">描述</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">string</td><td align="center">字符串类型</td><td align="center">用引号引起来的数据都是字符串</td></tr><tr><td align="center">int</td><td align="center">整数（有符号）</td><td align="center">数字类型，存放整数 如-1,10，0等</td></tr><tr><td align="center">float</td><td align="center">浮点型（有符号）</td><td align="center">数字类型，存放小数 如-3.14，6.66</td></tr></tbody></table><p>我们可以通过<strong>type()语句</strong>来得到数据的类型：</p><blockquote><p>语法：<strong>type(被查看类型的数据)</strong></p><blockquote><p> 注：变量是没有类型的，但是变量存储的数据是有类型的。所以查看变量的数据类型其实查看的是其存储的数据的类型。</p></blockquote></blockquote><h2 id="5、数据类型的转换"><a href="#5、数据类型的转换" class="headerlink" title="5、数据类型的转换"></a>5、数据类型的转换</h2><p>数据类型之间，在特定的场景下，是可以相互转换的，如字符串转数字、数字转字符串等</p><p>数据类型转换，将会是我们以后经常使用的功能。</p><p>如:<br>            从文件中读取的数字，默认是字符串，我们需要转换成数字类型</p><p>​后续学习的<strong>input()语句，默认结果是字符串</strong>，若需要数字也需要转换</p><p>​将数字转换成字符串用以写出到外部系统</p><table><thead><tr><th align="center">语句（函数）</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">int(x)</td><td align="center">将x转换为一个整数</td></tr><tr><td align="center">float(x)</td><td align="center">将x转换为一个浮点数</td></tr><tr><td align="center">str(x)</td><td align="center">将对象x转换为字符串</td></tr></tbody></table><blockquote><p> 注：同前面学习的type()语句一样，这三个语句，都是带有结果的(返回值 )我们可以用print直接输出或用变量存储结果值</p></blockquote><blockquote><p>① 任何类型都可以通过 <strong>str()</strong> 这个语句转换成为字符串类型。（str()其实就是string去掉ing）</p><p>② 要想将字符串转换成为数字，必须要保证字符串的内容全部是数字才可以。</p><p>③ 浮点数在转换成为整数的时候会丢失精度。</p></blockquote><h2 id="6、标识符"><a href="#6、标识符" class="headerlink" title="6、标识符"></a>6、标识符</h2><p>在Python程序中，我们可以给很多东西起名字，比如:</p><ul><li><p>变量的名字</p></li><li><p>方法的名字</p></li><li><p>类的名字,等等</p><p>这些名字，我们把它统一的称之为<strong>标识符</strong>，用来做内容的标识。</p></li></ul><p>标识符：是用户在编程的时候所使用的一系列名字，用于给变量、类、方法等命名。</p><p>标识符命名的<strong>规则</strong>主要有3类：</p><ul><li>① <strong>内容限定</strong></li><li>② <strong>大小写敏感</strong></li><li>③ <strong>不可使用关键字</strong></li></ul><p>内容限定：</p><ul><li>① 英文</li><li>② 中文</li><li>③ 数字</li><li>④ 下划线（_）</li></ul><p><strong>注：不推荐使用中文。 数字不可以开头！！！</strong></p><p><strong>变量</strong>标识符命名规范：</p><p>（1）变量命名规范—<strong>见名知意</strong></p><p>​① 明了:尽量做到，看到名字，就知道是什么意思</p><p>​② 简洁:尽量在确保“明了”的前提下，减少名字的长度</p><p>（2）<strong>下划线命名法</strong></p><p>​多个单词组合变量名，要使用下划线做分隔</p><p>（3）<strong>英文字母全小写</strong></p><h2 id="7、运算符"><a href="#7、运算符" class="headerlink" title="7、运算符"></a>7、运算符</h2><h3 id="（1）算术运算符"><a href="#（1）算术运算符" class="headerlink" title="（1）算术运算符"></a>（1）算术运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td><td align="left">两个对象相加a+b输出结果30</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="left">得到负数或是一个数减去另一个数 a- b输出结果-10</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="left">两个数相乘或是返回一个被重复若干次的字符串a*b输出结果200</td></tr><tr><td align="center">&#x2F;</td><td align="center">除</td><td align="left">b &#x2F;a 输出结果 2</td></tr><tr><td align="center">&#x2F;&#x2F;</td><td align="center">取整除</td><td align="left">返回商的整数部分 9&#x2F;&#x2F;2 输出结果4，9.0&#x2F;&#x2F;20 输出结果4.0</td></tr><tr><td align="center">%</td><td align="center">取余</td><td align="left">返回除法的余数 b%a输出结果0</td></tr><tr><td align="center">**</td><td align="center">指数</td><td align="left">a**b为10的20次方，输出结果100000000000000000000</td></tr></tbody></table><h3 id="（2）赋值运算符"><a href="#（2）赋值运算符" class="headerlink" title="（2）赋值运算符"></a>（2）赋值运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th>实例</th></tr></thead><tbody><tr><td align="center">&#x3D;</td><td align="center">赋值运算符</td><td>把 &#x3D; 号右边的结果 赋给 左边的变量，如 num &#x3D;1+2*3，结果num的值为7</td></tr></tbody></table><h3 id="（3）复合赋值运算符"><a href="#（3）复合赋值运算符" class="headerlink" title="（3）复合赋值运算符"></a>（3）复合赋值运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th>实例</th></tr></thead><tbody><tr><td align="center">+&#x3D;</td><td align="center">加法赋值运算符</td><td>c +&#x3D; a 等效于 c &#x3D; c + a</td></tr><tr><td align="center">-&#x3D;</td><td align="center">减法赋值运算符</td><td>c -&#x3D; a 等效于c &#x3D; c - a</td></tr><tr><td align="center">*&#x3D;</td><td align="center">乘法赋值运算符</td><td>c *&#x3D; a 等效于 c &#x3D; c * a</td></tr><tr><td align="center">&#x2F;&#x3D;</td><td align="center">除法赋值运算符</td><td>c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td></tr><tr><td align="center">%&#x3D;</td><td align="center">取模赋值运算符</td><td>c %&#x3D; a 等效于 c &#x3D; c % a</td></tr><tr><td align="center">**&#x3D;</td><td align="center">幂赋值运算符</td><td>c  ** &#x3D;  a 等效于 c &#x3D; c  **  a</td></tr><tr><td align="center">&#x2F;&#x2F;&#x3D;</td><td align="center">取整除赋值运算符</td><td>c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td></tr></tbody></table><blockquote><p> 复合运算符：表示将变量本身去进行运算，如何再将结果赋值给变量本身。</p></blockquote><h2 id="8、字符串相关扩展"><a href="#8、字符串相关扩展" class="headerlink" title="8、字符串相关扩展"></a>8、字符串相关扩展</h2><h3 id="（1）字符串的三种定义方式"><a href="#（1）字符串的三种定义方式" class="headerlink" title="（1）字符串的三种定义方式"></a>（1）<strong>字符串的三种定义方式</strong></h3><ul><li><p>① 单引号定义法：name &#x3D; ‘***’</p></li><li><p>② 双引号定义法：name &#x3D; “**”</p></li><li><p>③ 三引号定义法：name &#x3D; “””***”””</p></li></ul><p>三引号定义法，和多行注释的写法一样，同样支持换行操作。使用变量接收它，它就是字符串不使用变量接收它，就可以作为多行注释使用。</p><blockquote><p><strong>字符串的引号嵌套：</strong></p><p>即字符串本身是包含了引号的：</p><blockquote><p><strong>单引号定义法，可以内含双引号；</strong></p><p><strong>双引号定义法，可以内含单引号；</strong></p><p>可以使用转移字符（”\“）来将引号解除效用，变成普通字符串。**（即在需要解除引号效果的引号前面加入（\））</p></blockquote></blockquote><h3 id="（2）字符串拼接"><a href="#（2）字符串拼接" class="headerlink" title="（2）字符串拼接"></a>（2）字符串拼接</h3><p>如果我们有两个字符串（文本）字面量，可以将其拼接成一个字符串，通过+号即可完成。</p><p>一般是字<strong>面量和变量</strong>或<strong>变量和变量</strong>之间会使用拼接。</p><p>注：无法和非字符串类型进行拼接，<strong>整数、浮点数和其他类型都不能通过加号（+）直接和字符串完成拼接</strong>。</p><h3 id="（3）字符串格式化"><a href="#（3）字符串格式化" class="headerlink" title="（3）字符串格式化"></a>（3）字符串格式化</h3><p>拼接的缺点：</p><ul><li><p>① 变量过多，拼接起来实在是太麻烦了；</p></li><li><p>② 字符串无法和数字或其他类型完成拼接</p></li></ul><p>字符串格式化也是一种拼接；可以完成字符串和变量的快速拼接。</p><blockquote><p>语法：如</p><blockquote><p><strong>name &#x3D; “</strong>*”</p><p>message &#x3D; “*** %s” % name**</p></blockquote></blockquote><p>其中的 ，%s</p><ul><li><p>% 表示:我要占位</p></li><li><p>s表示:将变量变成字符串放入占位的地方</p></li></ul><p>支持多种的数据类型占位：%s，%d，%f</p><p>综合起来的意思就是:我先占个位置，等一会有个变量过来，我把它变成字符串放到占位的位置。（和c语言的方法一样！！！不一样的是python要用%号来连接，而c语言用的是逗号，而且多个变量的时候需要加括号将其括起来）</p><p><strong>注：多个变量占位，变量要用括号括起来，并按照占位的顺序填入。</strong></p><h3 id="（4）格式化的精度控制"><a href="#（4）格式化的精度控制" class="headerlink" title="（4）格式化的精度控制"></a>（4）格式化的<strong>精度控制</strong></h3><p>我们可以使用辅助符号”m.n”来控制数据的宽度和精度</p><ul><li><p>m，<strong>控制宽度</strong>，要求是数字(很少使用),设置的宽度小于数字自身，不生效</p></li><li><p>.n，<strong>控制小数点精度</strong>，要求是数字，会进行小数的四舍五入</p></li></ul><p>示例:</p><ul><li><p>%5d ：表示将整数的宽度控制在5位，如数字11，被设置为5d，就会变成：空格]空格]空格]11，用三个空格补足宽度。</p></li><li><p>%5.2f ：表示将宽度控制为5，将小数点精度设置为2小数点和小数部分也算入宽度计算。如，对11.345设置了%7.2f后，结果是：空格]空格]11.35。2个空格补足宽度，小数部分限制2位精度后，四舍五入为35（<strong>注意小数点也算一个宽度</strong>）</p></li><li><p>%.2f ：表示不限制宽度，只设置小数点精度为2，如11.345设置%.2f后，结果是11.35</p></li></ul><h3 id="（5）字符串格式化方式2"><a href="#（5）字符串格式化方式2" class="headerlink" title="（5）字符串格式化方式2"></a>（5）字符串格式化方式2</h3><p>  更优雅的格式化方法：</p><blockquote><p>通过语法：</p><p><strong>f”内容{变量}”</strong>    来进行快速格式化（f其实就是格式【format】首字母）</p><blockquote><p><strong>该快速格式化的特点：不限制数据类型，同时不做精度控制</strong></p></blockquote></blockquote><h3 id="（6）对表达式进行格式化"><a href="#（6）对表达式进行格式化" class="headerlink" title="（6）对表达式进行格式化"></a>（6）对表达式进行格式化</h3><p>表达式：一条具有明确执行结果的代码语句</p><p>在无需使用变量进行数据存储的时候，可以直接格式化表达式，简化代码</p><h2 id="9、数据输入"><a href="#9、数据输入" class="headerlink" title="9、数据输入"></a>9、数据输入</h2><blockquote><p>input语句</p><ul><li><strong>数据输出：print</strong></li><li><strong>数据输入：input</strong></li></ul></blockquote><p>使用上也非常简单:</p><ul><li><p>使用input()语句可以从键盘获取输入</p></li><li><p>使用一个变量接收(存储)input语句获取的键盘输入数据即可</p></li></ul><blockquote><p><strong>变量名 &#x3D; input()</strong></p><p><em>input()的括号中可以打印提示信息！</em>*</p></blockquote><p>注意：使用input()语句，不管你写入的是什么类型的数据，它通通将其为字符串来看待！！！（<strong>input默认接收的类型都是字符串</strong>）需要其他类型的话需要对其进行数据类型转换。</p><hr><h1 id="三、python判断语句"><a href="#三、python判断语句" class="headerlink" title="三、python判断语句"></a>三、python判断语句</h1><h2 id="1、布尔类型"><a href="#1、布尔类型" class="headerlink" title="1、布尔类型"></a>1、布尔类型</h2><p>布尔（bool）</p><ul><li><p><strong>True表示真；</strong></p></li><li><p><strong>False表示假。</strong></p></li></ul><p>true的本质上是一个数字记作1，False记作0</p><p>定义变量存储布尔类型的数据</p><p><strong>变量名称 &#x3D; 布尔类型字面量</strong></p><p>布尔类型不仅可以自行定义同时也可以通过计算的来。也就是使用比较运算符进行比较运算得到布尔类型的结果。</p><h2 id="2、比较运算符"><a href="#2、比较运算符" class="headerlink" title="2、比较运算符"></a>2、比较运算符</h2><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th>示例</th></tr></thead><tbody><tr><td align="center">&#x3D;&#x3D;</td><td align="center">判断内容<strong>是否相等</strong>，满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &#x3D;&#x3D; b)为 True</td></tr><tr><td align="center">!&#x3D;</td><td align="center">判断内容<strong>是否不相等</strong>，满足为True，不满足为False</td><td>如a&#x3D;1,b&#x3D;3，则(a !&#x3D; b)为 True</td></tr><tr><td align="center">&gt;</td><td align="center">判断运算符左侧内容<strong>是否大于</strong>右侧满足为True，不满足为False</td><td>如a&#x3D;7,b&#x3D;3，则(a &gt; b)为 True</td></tr><tr><td align="center">&lt;</td><td align="center">判断运算符左侧内容<strong>是否小于</strong>右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;7，则(a &lt; b)为 True</td></tr><tr><td align="center">&gt;&#x3D;</td><td align="center">判断运算符左侧内容<strong>是否大于等于</strong>右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &gt;&#x3D; b)为 True</td></tr><tr><td align="center">&lt;&#x3D;</td><td align="center">判断运算符左侧内容<strong>是否小于等于</strong>右侧满足为True，不满足为False</td><td>如a&#x3D;3,b&#x3D;3，则(a &lt;&#x3D; b)为 True</td></tr></tbody></table><h2 id="3、if语句"><a href="#3、if语句" class="headerlink" title="3、if语句"></a>3、if语句</h2><blockquote><p>格式：</p><blockquote><p><strong>if  要判断的条件：</strong></p><p>​<strong>条件成立时要做的事情</strong></p></blockquote></blockquote><p>注：</p><ol><li>条件成立后面 的执行语句要有<strong>四个空格做的缩进</strong>。</li><li>判断语句的结果必须是布尔类型True或者False；</li></ol><h2 id="4、if-else语句"><a href="#4、if-else语句" class="headerlink" title="4、if else语句"></a>4、if else语句</h2><blockquote><p>语法：</p><blockquote><p><strong>if 条件：</strong></p><p><strong>条件成立时要做的事情</strong></p><p><strong>else：</strong></p><p><strong>条件不成立时要做的事情</strong></p></blockquote></blockquote><p>注：</p><ol><li><strong>else不需要判断条件</strong>，当if的条件不满足时，else执行</li><li>else的代码块，同样要4个空格作为缩进</li></ol><h2 id="5、if-elif-else-语句"><a href="#5、if-elif-else-语句" class="headerlink" title="5、if elif else 语句"></a>5、if elif else 语句</h2><p>多条件判断语句</p><blockquote><p>语法：</p><blockquote><p><strong>if 条件1：</strong></p><p>​<strong>条件1 满足所做的事情</strong></p><p><strong>elif 条件2：</strong></p><p>​<strong>条件2满足所做的事情</strong></p><p><strong>elif 条件3：</strong></p><p>​<strong>条件3满足所做的事情</strong></p><p><strong>else：</strong></p><p>​<strong>条件都不满足所做的事情</strong></p></blockquote></blockquote><p>使用if elif else的注意点有:</p><ol><li><strong>elif可以写多个</strong></li><li>判断是<strong>互斥且有序</strong>的，上一个满足后面的就不会判断了</li><li>可以在条件判断中，直接写input语句，节省代码量</li></ol><h2 id="6、判断语句的嵌套"><a href="#6、判断语句的嵌套" class="headerlink" title="6、判断语句的嵌套"></a>6、判断语句的嵌套</h2><p>语法：</p><blockquote><p><strong>if 条件1：</strong></p><blockquote><p><strong>满足条件1 做的事情1</strong></p><p><strong>满足条件1 做的事情2</strong></p><p><strong>if 条件2:</strong></p><p>​<strong>满足条件2做的事情1</strong></p><p>​<strong>满足条件2做的事情2</strong></p></blockquote></blockquote><p>第二个if，属于第一个if内，<strong>只有第一个if满足条件，才会执行第二个if</strong></p><p>嵌套的关键点，在于: <strong>空格缩进</strong>；通过空格缩进，来决定语句之间的:层次关系</p><p><strong>产生随机数字：</strong></p><p>代码：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">num = random.randint(n，m)</span><br></pre></td></tr></table></figure><blockquote><p>注：（）括号内的n，m为设置随机数产生的范围内。</p></blockquote><hr><h1 id="四、python循环语句"><a href="#四、python循环语句" class="headerlink" title="四、python循环语句"></a>四、python循环语句</h1><h2 id="1、while循环的基础语法"><a href="#1、while循环的基础语法" class="headerlink" title="1、while循环的基础语法"></a>1、while循环的基础语法</h2><blockquote><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件:</span><br><span class="line">    条件满足时，做的事情</span><br></pre></td></tr></table></figure></blockquote><ol><li>while的条件需得到布尔类型，True表示继续循环，False表示结束循环</li><li><strong>需要设置循环终止的条件</strong>，如i+&#x3D; 1配合i100，就能确保100次后停止，否则将无限循环</li><li>空格缩进和if判断一样，都需要设置</li></ol><p><strong>注意：python中没有自增自减（i++或i–）</strong></p><h2 id="2、while循环的嵌套"><a href="#2、while循环的嵌套" class="headerlink" title="2、while循环的嵌套"></a>2、while循环的嵌套</h2><blockquote><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件<span class="number">1</span>:</span><br><span class="line">    条件<span class="number">1</span>，满足时做的事情</span><br><span class="line">    <span class="keyword">while</span> 条件<span class="number">2</span>:</span><br><span class="line">    条件<span class="number">2</span>满足时做的事情</span><br></pre></td></tr></table></figure></blockquote><p>嵌套循环的注意：</p><ul><li><p>① 同判断语句的嵌套一样，循环语句的嵌套，要注意空格缩进</p></li><li><p>② 基于空格缩进来决定层次关系</p></li><li><p>③ 注意条件的设置，避免出现无限循环(除非真的需要无限循环）</p></li></ul><blockquote><p><strong>print语句不换行：</strong>在print语句中加上**end&#x3D;’ ‘**即可</p></blockquote><p>如：print(“Hello”, end&#x3D;’ ‘)</p><blockquote><p><strong>制表符”\t”</strong></p></blockquote><p>在字符串中，有一个特殊符号:\t，效果等同于在键盘上按下: tab键。</p><p>它可以让我们的<strong>多行字符串进行对齐</strong>。</p><h2 id="3、for-循环的基础语法"><a href="#3、for-循环的基础语法" class="headerlink" title="3、for 循环的基础语法"></a>3、for 循环的基础语法</h2><p>for循环和while循环的区别：</p><p><strong>while循环的循环条件是自定义的，自行控制循环条件</strong></p><p><strong>for循环是一种”轮询”机制，是对一批内容进行”逐个处理</strong></p><h3 id="（1）基础语法"><a href="#（1）基础语法" class="headerlink" title="（1）基础语法"></a>（1）基础语法</h3><blockquote><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> 临时变量 <span class="keyword">in</span> 待处理数据集（序列类型）:</span><br><span class="line">    循环满足条件时执行的代码</span><br></pre></td></tr></table></figure></blockquote><p>可以看出，for循环是将字符串的内容:依次取出，所以，for循环也被称之为: <strong>遍历循环</strong></p><p>同while循环不同，for循环是无法定义循环条件的。只能从被处理的数据集中，依次取出内容进行处理。所以，理论上讲，Python的for循环无法构建无限循环(被处理的数据集不可能无限大)</p><p>语法中的:待处理数据集，严格来说，称之为:<strong>序列类型</strong></p><p>序列类型指，其<strong>内容可以一个个依次取出的一种类型</strong>，包括：字符串、列表、元组、等</p><h3 id="（2）range语句"><a href="#（2）range语句" class="headerlink" title="（2）range语句"></a>（2）range语句</h3><p>for循环语句，本质上是遍历:序列类型</p><p>通过range语句，获得一个简单的数字序列</p><blockquote><p> 语法①：<strong>range(num)</strong></p></blockquote><p>获取一个从0开始，到num结束的数字序列 (不含num本身)</p><blockquote><p>语法②：<strong>range(num1，num2)</strong></p></blockquote><p>获得一个从num1开始，到num2结束的数字序列(不含num2本身)</p><blockquote><p>语法③：<strong>range(num1，num2，step)</strong></p></blockquote><p>获得一个从num1开始，到num2结束的数字序列(不含num2本身)，数字之间的步长，以step为准(step默认为1)</p><h3 id="（3）变量作用域"><a href="#（3）变量作用域" class="headerlink" title="（3）变量作用域"></a>（3）变量作用域</h3><p><strong>临时变量</strong>，在编程规范上，作用范围(作用域，)<strong>只限定在for循环内部</strong></p><p>注意：如果在for循环外部访问临时变量:</p><ul><li><p><strong>实际上是可以访问到的</strong></p></li><li><p><strong>在编程规范上，是不允许、不建议这么做的</strong></p></li></ul><p>for循环中的临时变量，其作用域限定为：<strong>循环内</strong></p><p>这种限定:</p><ol><li>是编程规范的限定，而非强制限定;</li><li>不遵守也能正常运行，但是不建议这样做;</li><li><strong>如需访问临时变量，可以预先在循环外定义它</strong></li></ol><h2 id="4、for循环的嵌套应用"><a href="#4、for循环的嵌套应用" class="headerlink" title="4、for循环的嵌套应用"></a>4、for循环的嵌套应用</h2><blockquote><p>语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> 临时变量 <span class="keyword">in</span> 待处理的数据集（序列）:</span><br><span class="line">    循环满足条件时做的事情</span><br><span class="line">    <span class="keyword">for</span> 临时变量 <span class="keyword">in</span> 待处理的数据集（序列）:</span><br><span class="line">        循环满足条件时做的事情</span><br></pre></td></tr></table></figure></blockquote><p>while循环和for循环是可以相互嵌套的.</p><p>注意缩进！！！</p><h2 id="5、循环中断：break和continue"><a href="#5、循环中断：break和continue" class="headerlink" title="5、循环中断：break和continue"></a>5、循环中断：break和continue</h2><ul><li><p><strong>continue</strong>：</p><ul><li>continue关键字用于：<strong>中断本次循环</strong>，直接进入下一次循环</li><li>continue可以用于：for循环和while循环，效果一致</li></ul></li><li><p><strong>break</strong></p><ul><li>break关键字用于：<strong>直接结束循环</strong></li><li>break可以用于：for循环和while循环，效果一致</li></ul></li></ul><blockquote><p>注：continue和break关键字只可以控制: 它所在的循环临时中断。在嵌套循环中continue和break的<strong>作用范围只在他所在的循环上</strong>，不会对上层的循环起作用。</p></blockquote><hr><h1 id="五、python函数"><a href="#五、python函数" class="headerlink" title="五、python函数"></a>五、python函数</h1><blockquote><p><strong>len()函数</strong></p></blockquote><p>该函数可用于统计字符串的长度</p><blockquote><p><strong>换行符：\n</strong></p></blockquote><h2 id="1、函数的介绍"><a href="#1、函数的介绍" class="headerlink" title="1、函数的介绍"></a>1、函数的介绍</h2><p>函数：是组织好的，可重复使用的，用来实现特定功能的代码段</p><p>使用函数的好处:</p><ol><li>将功能封装在函数内，可供随时随地重复利用</li><li>提高代码的复用性，减少重复代码，提高开发效率</li></ol><h2 id="2、函数的定义"><a href="#2、函数的定义" class="headerlink" title="2、函数的定义"></a>2、函数的定义</h2><blockquote><p>定义语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">函数名</span>（传入参数）:</span><br><span class="line">    函数体</span><br><span class="line">    <span class="keyword">return</span> 返回值</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>函数的调用：</p><blockquote><p>函数名（参数）</p></blockquote></blockquote><p> 注：</p><ol><li>参数如不需要，可以省略</li><li>返回值如不需要，可以省略</li><li>函数必须先定义后使用</li></ol><h2 id="3、函数的参数"><a href="#3、函数的参数" class="headerlink" title="3、函数的参数"></a>3、函数的参数</h2><p>传入参数的功能是：在函数进行计算的时候，接受外部(调用时)提供的数据</p><p>注：</p><ol><li>函数定义中，定义的参数叫做：<strong>形式参数</strong>（即形参）；</li><li>函数的调用中，称为：<strong>实际参数</strong>（实参）；</li><li>参数之间用逗号隔开；</li><li>传入参数，要和形式参数一一对应，按照顺序传入数据，实用逗号隔开。</li></ol><h2 id="4、函数的返回值"><a href="#4、函数的返回值" class="headerlink" title="4、函数的返回值"></a>4、函数的返回值</h2><h3 id="（1）返回值"><a href="#（1）返回值" class="headerlink" title="（1）返回值"></a>（1）返回值</h3><p>所谓“返回值”，就是程序中函数完成事情后，最后给调用者的结果</p><p>函数体在遇到return后就结束了，所以写在return后的代码不会执行。</p><h3 id="（2）None类型"><a href="#（2）None类型" class="headerlink" title="（2）None类型"></a>（2）None类型</h3><p>Python中有一个特殊的字面量：None，其类型是:&lt;class’NoneType’&gt;</p><p>无返回值的函数，实际上就是返回了：None这个字面量</p><p>None表示空的、无实际意义的意思</p><p>函数返回的None，就表示，这个函数没有返回什么有意义的内容。也就是返回了空的意思。</p><p>注：return None 其实就是相当于 c 和 java 中的 return 0；</p><p>None的应用场景：</p><ul><li><p>用在函数无返回值上</p></li><li><p>用在if 判断上</p><ul><li>在if判断中，None等同于False</li><li>一般用于在函数中主动返回None，配合if判断做相关处理。(None(空)可以表示False)</li></ul></li><li><p>用于声明无内容的变量上</p><ul><li>定义变量，但暂时不需要变量有具体值，可以用None来代替</li></ul></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 暂不赋予变量具体值</span></span><br><span class="line">name = <span class="literal">None</span></span><br></pre></td></tr></table></figure><p><strong>if not 条件：</strong></p><p>其中 if 后面加not可以理解为定义了一个非，将条件的真假值取反，<strong>if not 可以理解为当条件不成立的时候执行下面的代码逻辑</strong>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># none用于if判断</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_age</span>(<span class="params">age</span>):</span><br><span class="line">    <span class="keyword">if</span> age &gt; <span class="number">18</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;zzzzzzzzz&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = check_age(<span class="number">16</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">    <span class="comment"># 进入if表示result是None值，也就是False</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未成年&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、函数的说明文档"><a href="#5、函数的说明文档" class="headerlink" title="5、函数的说明文档"></a>5、函数的说明文档</h2><p>函数是纯代码语言，想要理解其含义，就需要一行行的去阅读理解代码，效率比较低。</p><p>我们可以给函数添加说明文档，辅助理解函数的作用。</p><p>规范性的语法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">x，y</span>): at i at</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">函数说明</span></span><br><span class="line"><span class="string">:param x:形参x的说明</span></span><br><span class="line"><span class="string">:param y:形参y的说明</span></span><br><span class="line"><span class="string">:return: 返回值的说明</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">函数体</span><br><span class="line"><span class="keyword">return</span> 返回值</span><br></pre></td></tr></table></figure><p>注：</p><ol><li>通过多行注释的形式，对函数进行说明解</li><li><strong>内容应写在函数体之前</strong></li></ol><h2 id="6、函数的嵌套调用"><a href="#6、函数的嵌套调用" class="headerlink" title="6、函数的嵌套调用"></a>6、函数的嵌套调用</h2><p>所谓函数嵌套调用指的是一个函数里面又调用了另外一个函数</p><h2 id="7、变量的作用域"><a href="#7、变量的作用域" class="headerlink" title="7、变量的作用域"></a>7、变量的作用域</h2><p>变量作用域指的是变量的<strong>作用范围</strong>(变量在哪里可用，在哪里不可用)</p><p>主要分为两类：<strong>局部变量和全局变量</strong></p><h3 id="（1）局部变量"><a href="#（1）局部变量" class="headerlink" title="（1）局部变量"></a>（1）局部变量</h3><p>局部变量是<strong>定义在函数体内部的变量，即只在函数体内部生效</strong></p><p>局部变量的作用：在函数体内部，临时保存数据，即当函数调用完成后，则销毁局部变量</p><h3 id="（2）全局变量"><a href="#（2）全局变量" class="headerlink" title="（2）全局变量"></a>（2）全局变量</h3><p>所谓全局变量，指的是在<strong>函数体内、外都能生效的变量</strong></p><h3 id="（3）global关键字"><a href="#（3）global关键字" class="headerlink" title="（3）global关键字"></a>（3）global关键字</h3><p>使用 global关键字 可以在函数内部声明变量为全局变量</p><p>该关键字可以让在<strong>函数内定义的局部变量成为全局变量</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="number">100</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testA</span>() :</span><br><span class="line">       <span class="built_in">print</span>(num)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testB</span> ():</span><br><span class="line">       <span class="comment"># globa1 设置内部定义的变量为全局变量</span></span><br><span class="line">       <span class="keyword">global</span> num</span><br><span class="line">       num = <span class="number">200</span></span><br><span class="line">       <span class="built_in">print</span>(num)</span><br><span class="line">       </span><br><span class="line">   testA()</span><br><span class="line">   testB()</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">f&quot;全局变量num = <span class="subst">&#123;num&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的使用方法</title>
      <link href="/posts/850cd0f8.html"/>
      <url>/posts/850cd0f8.html</url>
      
        <content type="html"><![CDATA[<h1 id="git的使用方法"><a href="#git的使用方法" class="headerlink" title="git的使用方法"></a>git的使用方法</h1><h2 id="一、Git基础"><a href="#一、Git基础" class="headerlink" title="一、Git基础"></a>一、Git基础</h2><ul><li>1、Git的介绍</li></ul><p>​Git是目前世界上最先进的分布式版本控制系统。</p><ul><li>2、Git和Github的区别</li></ul><p>​Git是一个<strong>分布式版本控制系统</strong>，是一个软件，用于记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的软件。</p><p>​Github（<a href="https://www.github.com)是一个面向/">https://www.github.com）是一个面向</a> 开源 及私有 软件 <strong>项目的托管平台</strong>，因为只支持Git作为唯一的版本库格式进行托管，故名GitHu）。Github除了提供管理Git的web界面外，还提供了订阅、关注、讨论组、在线编辑器等丰富的功能。</p><h2 id="二、Git的使用"><a href="#二、Git的使用" class="headerlink" title="二、Git的使用"></a>二、Git的使用</h2><h3 id="1、本地仓库"><a href="#1、本地仓库" class="headerlink" title="1、本地仓库"></a>1、本地仓库</h3><ul><li><p>1.1、Git本地操作的三个区域：</p><ul><li>Git Repository（<strong>Git仓库</strong>）：最终确定的文件保存到仓库，成为一个新的版本，并且对他人可见。</li><li><strong>暂存区</strong>：暂存已经修改的文件最后统一提交到Git仓库中。</li><li>Working Directory（<strong>工作区</strong>）：添加、编辑、修改文件的动作。</li></ul></li><li><p>1.2、工作流程</p></li></ul><p>​工作区：（通过 <strong>git add</strong>命令）—&gt;暂存区：（**git commit -m “提交描述”**）—&gt;Git仓库</p><blockquote><p>命令：</p><ul><li>git add</li><li>git commit -m “提交描述”</li></ul><p><strong>git status</strong> 命令用于查看文件状态。</p></blockquote><ul><li><p>1.3、本地仓库操作</p><p>  什么是仓库呢？仓库又名版本库，英文名repository，我们可以简单理解成是一个目录，用于存放代码的，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除等操作Git都能跟踪到。</p></li></ul><p>①安装好Git后首次使用需要先进行全局配置</p><p>​桌面空白处右键，点击“Git Bash Here”以打开Git命令行窗口</p><blockquote><p>$ git config –global user.name “用户名”<br>$ git config –global user.email “邮箱地址”</p></blockquote><p>②创建仓库</p><p>​当我们需要让Git去管理某个新项目&#x2F;已存在项目的时候，就需要创建仓库了。创建仓库时使用的目录不一定要求是空目录，选择一个非空目录也是可以的。</p><blockquote><p>注意：为了避免使用过程中出现各种问题，不要使用包含中文的目录名（父目录亦是如此）。</p></blockquote><p>Git仓库初始化（让Git知道，它需要来管理这个目录）</p><blockquote><p> 指令：<strong>git init</strong>    通过该命令来初始化目录</p></blockquote><p>​执行之后会在项目目录下创建“.git”的隐藏目录，这个目录是Git所创建的，不能删除，也不能随意更改其中的内容。</p><p>​<u>③Git常用指令操作</u></p><p><em>查看当前状态：git status                    【非必要】</em></p><p><em>提交至版本库：git commit -m “注释内容”</em></p><p><em>添加到缓存区：git add 文件名</em></p><p><em>说明：git add指令，可以添加一个文件，也可以同时添加多个文件。</em></p><p><em>语法1：git add 文件名</em></p><p><em>语法2：git add 文件名1 文件名2 文件名3 …</em></p><p><em>语法3：git add .               【添加当前目录到缓存区中】</em></p><ul><li>1.4、版本回退</li></ul><p>版本回退分为两步骤进行操作：</p><p>步骤：</p><blockquote><p> ①查看版本，确定需要回到的时刻点</p><ul><li>指令：<ul><li><strong>git log</strong></li><li>git log –pretty&#x3D;oneline**</li></ul></li></ul></blockquote><p>解释：这两种命令都可以查询到时刻点，区别仅是显示出来的格式不一样。</p><blockquote><p> ②回退操作</p><ul><li>指令：<ul><li><strong>git reset –hard 提交编号</strong></li></ul></li></ul></blockquote><p>​注意：回到过去之后，要想再回到之前最新的版本的时候，则需要使用指令去查看历史操作，以得到最新的commit id。</p><blockquote><p>指令：<strong>git reflog</strong>  该命令用于查看历史操作。</p></blockquote><p>小结：</p><ul><li><p>a. 要想回到过去，必须先得到commit id，然后通过git reset –hard 进行回退；</p></li><li><p>b. 要想回到未来，需要使用git reflog进行历史操作查看，得到最新的commit id；</p></li><li><p>c. 在写回退指令的时候commit id可以不用写全，git自动识别，但是也不能写太少，至少需要写前4位字符。</p></li></ul><h3 id="2、远程仓库（Github）"><a href="#2、远程仓库（Github）" class="headerlink" title="2、远程仓库（Github）"></a>2、远程仓库（Github）</h3><p>​有很多线上仓库，都大同小异，该处学习的是Github仓库。</p><h4 id="2-1、线上仓库创建"><a href="#2-1、线上仓库创建" class="headerlink" title="2.1、线上仓库创建"></a>2.1、线上仓库创建</h4><p>​打开创建仓库页面进行创建仓库。</p><p>​注意：仓库名要求在当前帐号下唯一。</p><h4 id="2-2两种常规的使用方式"><a href="#2-2两种常规的使用方式" class="headerlink" title="2.2两种常规的使用方式"></a>2.2两种常规的使用方式</h4><h5 id="（1）、基于http-https协议"><a href="#（1）、基于http-https协议" class="headerlink" title="（1）、基于http&#x2F;https协议"></a>（1）、基于http&#x2F;https协议</h5><ul><li><p>a. 创建空目录</p></li><li><p>b. 使用clone指令克隆线上仓库到本地</p></li></ul><blockquote><p>语法：<strong>git clone</strong> 线上仓库地址</p></blockquote><ul><li>c. 在仓库上做对应的操作（提交暂存区、提交本地仓库、提交线上仓库、拉取线上仓库）</li></ul><blockquote><p>指令：<strong>git push</strong>  该命令用于提交到线上仓库</p></blockquote><p>​<strong>注意</strong>：在首次往线上仓库shop提交内容的时候出现了403的致命错误，原因是不是任何人都可以往线上仓库提交内容，必须需鉴权。解决方法：需要修改“.git&#x2F;config”文件内容：</p><p>将config文件中的：</p><p>​[remote “origin”]</p><p>​url &#x3D; https :&#x2F;&#x2F;github .com&#x2F;bjitcast&#x2F;shop.git</p><p>​fetch &#x3D; +refs&#x2F;heads&#x2F;:refs&#x2F;remotes&#x2F;origin&#x2F;</p><p>改为：</p><p>​[remote “origin”]</p><p>​url &#x3D; https :&#x2F;&#x2F;**用户名:密码@**github .com&#x2F;bjitcast&#x2F;shop.git</p><p>​fetch &#x3D; +refs&#x2F;heads&#x2F;:refs&#x2F;remotes&#x2F;origin&#x2F;</p><p>​d.拉取线上仓库：<strong>git pull</strong></p><h5 id="（2）、基于ssh协议-（推荐）"><a href="#（2）、基于ssh协议-（推荐）" class="headerlink" title="（2）、基于ssh协议 （推荐）"></a>（2）、基于ssh协议 （推荐）</h5><p>​该方式与前面https方式相比，只是影响github对于用户的身份鉴权方式，对于git的具体操作（如提交本地、添加注释、提交远程等操作）没有任何影响。</p><p>生成公私玥对指令：<strong>ssh-keygen -t rsa -C “注册邮箱”</strong>     注：（需先自行安装OpenSSH，一般win自带）</p><p>生成后的公私密钥文件默认保存路径：C:\Users\86187.ssh</p><p>步骤：</p><ul><li>①生成客户端公私玥文件</li><li>②将公钥上传到Github</li><li>③上传公钥文件内容（id_rsa.pub）</li><li>④执行后续git操作，操作与先前一样<ul><li>a. clone线上仓库到本地（git clone）</li><li>b. 修改文件后添加缓存区、提交本地仓库、提交线上仓库</li></ul></li></ul><blockquote><p>注：在push的时候并没有提示要求我们输入帐号密码，因为公私玥已经实现了用户身份鉴权。</p></blockquote><h4 id="2-3、分支管理"><a href="#2-3、分支管理" class="headerlink" title="2.3、分支管理"></a>2.3、分支管理</h4><p>​在版本回退的章节里，每次提交后都会有记录，Git把它们串成时间线，形成类似于时间轴的东西，这个时间轴就是一个分支，我们称之为master分支。</p><p>​在开发的时候往往是团队协作，多人进行开发，因此光有一个分支是无法满足多人同时开发的需求的，并且在分支上工作并不影响其他分支的正常使用，会更加安全，Git鼓励开发者使用分支去完成一些开发任务。</p><p><u>分支相关指令</u>：</p><ul><li><em>查看分支：git branch</em></li><li>*<em>创建分支：git branch 分支名</em></li><li><em>切换分支：git checkout 分支名</em></li><li>*<em>删除分支：git branch -d 分支名</em></li><li>合并分支：git merge 被合并的分支名*</li></ul><blockquote><p>注意：</p><ul><li>①对于新分支，可以使用“git checkout -b 分支名”指令来切换分支，-b选项表示创建并切换，相当于是两个操作指令。</li><li>②使用查看分支命令时，所查寻出来的分支中，当前所在的分支前面会有个标记 <strong>“*”</strong>。</li><li>③在删除分支的时候，一定要先退出要删除的分支，然后才能删除。</li><li>④合并所有分支之后，需要将master分支提交线上远程仓库中，自己所创建的分支不需要了时可以删除。</li></ul></blockquote><h4 id="2-4、冲突的产生与解决"><a href="#2-4、冲突的产生与解决" class="headerlink" title="2.4、冲突的产生与解决"></a>2.4、冲突的产生与解决</h4><ul><li>在什么时候会引发冲突：<ul><li>有时候合并操作不会如此顺利。如果你在两个不同的分支中，对同一个文件的同一个部分进行了不同的修改，Git 就没法干净的合并它们。首先,冲突是两个分支之间因为文件内容分歧产生的一种不理想的情况。</li><li>原因归为我们对开发伙伴对文件的修改的信息得知的滞后(这也为减少冲突提供了优化git使用习惯的方案)</li></ul></li><li>只有一个本地分支的情况下是不会又冲突的.(只有一个分支的情况下没有冲突可言)</li><li>任何的修改和差异都不会产生歧义(指基于git的歧义&#x2F;多人之间不同的意见)</li><li>冲突可以两个分支在merge时发生的不理想的一种情况.具体是两个已经提交的分支的相同文件相同位置的不同操作进行了合并(merge).</li></ul><blockquote><p> 不冲突(尽可能减少冲突)的习惯是,修改文件之前先merge 别的分支，差异不一定导致冲突,但是冲突必定基于差异(比较明显的歧义),因此,先将别的分支merge到当前分支,可以尽可能减少冲突。</p></blockquote><h2 id="三、Git实用技能"><a href="#三、Git实用技能" class="headerlink" title="三、Git实用技能"></a>三、Git实用技能</h2><h4 id="1、图像-管理工具"><a href="#1、图像-管理工具" class="headerlink" title="1、图像 管理工具"></a>1、图像 管理工具</h4><ul><li>①Github Desktop</li></ul><blockquote><p>下载地址： <a href="https://desktop.github.com/">https://desktop.github.com/</a></p></blockquote><p>​Github出品的软件，功能完善，使用方便。对于经常使用GitHub的开发人员来说是非常便捷的工具。界面干净，用起来非常顺手，顶部的分支时间线非常绚丽。</p><ul><li>②Source tree</li></ul><blockquote><p>下载地址：<a href="https://www.sourcetreeapp.com/">https://www.sourcetreeapp.com/</a></p></blockquote><p>​老牌的Git GUI管理工具，也号称是最好用的Git GUI工具。功能丰富，基本操作和高级操作都非常流畅，适合初学者上手。</p><ul><li>③TortoiseGit</li></ul><blockquote><p>下载地址：<a href="https://tortoisegit.org/">https://tortoisegit.org/</a></p></blockquote><p>​对于熟悉SVN的开发人员来说，这个小乌龟图标应该是非常友善了。TortoiseGit 简称 tgit, 中文名海龟Git。它与其前辈TortoiseSVN都是非常优秀的开源版本控制客户端软件。</p><h4 id="2、忽略文件"><a href="#2、忽略文件" class="headerlink" title="2、忽略文件"></a>2、忽略文件</h4><p>​场景：在项目目录下有很多万年不变的文件目录，例如css、js、images等，或者还有一些目录即便有改动，我们也不想让其提交到远程仓库的文档，此时我们可以使用“忽略文件”机制来实现需求。</p><p>​忽略文件需要新建一个名为**.gitignore**的文件，该文件用于声明忽略文件或不忽略文件的规则，规则对当前目录及其子目录生效。</p><p>常见规则写法有如下几种：</p><ul><li><p><em>1）&#x2F;mtk&#x2F;        过滤整个文件夹</em></p></li><li><p>2）*.zip        过滤所有.zip文件*</p></li><li><p>3）&#x2F;mtk&#x2F;do.c      过滤某个具体文件*</p></li><li><p>4）!index.php         不过滤具体某个文件*</p></li></ul><blockquote><p>注意：<br>​该文件因为没有文件名，没办法直接在windows目录下直接创建，可以通过命令行Git Bash来touch创建。<br>​在文件中，以#开头的都是注释。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机操作 </category>
          
          <category> 关于git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: none;  /* --backdrop-filter: blur(5px) saturate(150%); */}/* 分类分类磁贴黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}/* 首页文章卡片 */#recent-posts>.recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts>.recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 文章H1~H6标题小风车转动效果 *//* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 评论提示语 *//* 设置文字内容 :nth-child(1)的作用是选择第几个 *//* .el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {  content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {  content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {  content: '可以通过昵称访问您的网站🔗';} *//* 当用户点击输入框时显示 *//* .el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;} *//* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  /* 先隐藏起来 */  display: none;  /* 绝对定位 */  position: absolute;  /* 向上移动60像素 */  top: -60px;  /* 文字强制不换行，防止left:50%导致的文字换行 */  white-space: nowrap;  /* 圆角 */  border-radius: 10px;  /* 距离左边50% */  left: 50%;  /* 然后再向左边挪动自身的一半，即可实现居中 */  transform: translate(-50%);  /* 填充 */  padding: 14px 18px;  background: #444;  color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: '';  position: absolute;  /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。  我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -48px);}/* 波浪css */.main-hero-waves-area {  width: 100%;  position: absolute;  left: 0;  bottom: -11px;  z-index: 5;}.waves-area .waves-svg {  width: 100%;  height: 5rem;}/* Animation */.parallax > use {  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}.parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #f7f9febd;}.parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #f7f9fe82;}.parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #f7f9fe36;}.parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #f7f9fe;}/* 黑色模式背景 */[data-theme="dark"] .parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #18171dc8;}[data-theme="dark"] .parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #18171d80;}[data-theme="dark"] .parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #18171d3e;}[data-theme="dark"] .parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #18171d;}@keyframes move-forever {  0% {    transform: translate3d(-90px, 0, 0);  }  100% {    transform: translate3d(85px, 0, 0);  }}/*Shrinking for mobile*/@media (max-width: 768px) {  .waves-area .waves-svg {    height: 40px;    min-height: 40px;  }}/* 霓虹灯————日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 一图流修改代码 *//* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[/*电子钟字体*//* @font-face {  删除字体  font-family: 'SIMFANG';  src: url("path/to/SIMFANG.TTF");  font-display: swap;} */div#runtime {  width: 400px;  margin: auto;  color: #fff;  padding-inline: 10px;  border-radius: 10px;  background-color: rgba(0, 0, 0, 0.7);  font-family: 'SIMFANG';}[data-theme="dark"] div#runtime {  color: #28b4c8;  box-shadow: 0 0 5px rgba(28,69,218,0.71);  animation: flashlight 1s linear infinite alternate;}/*悬停显示徽标提示语*/a.github-badge {  position: relative;}a.github-badge:hover:before {  position: absolute;  display: inline-block; /* 让提示框的宽度根据内容自适应 */  white-space: nowrap; /* 确保内容不换行 */  width: auto;  margin: auto;  left: 0;  top: 50%;  height: auto; /* 设置高度为auto，让提示框高度根据内容自适应 */  margin-top: 10px;  border-radius: 0px;  text-align: center;  z-index: 100;  content: attr(data-title);  font-size: 12px;  color: #fff;  padding: 5px;  background-color: rgb(51, 49, 49);  box-shadow: 0 0 5px rgb(255, 255, 255); /* 添加白边效果 */}[data-theme=dark] a.github-badge:hover:before {  background-color: rgba(51,49,49,0.8);  box-shadow: 0 0 5px rgba(255, 255, 255, 0.5); /* 添加白边效果 */}@-moz-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-webkit-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-o-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光 夜间模式流星特效 */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/kslink.js"/>
      <url>/js/kslink.js</url>
      
        <content type="html"><![CDATA[var leonus = {    linkCom: e => {        var t = document.querySelector(".el-textarea__inner");        "bf" == e ? (t.value = "```yml\n", t.value += "- name: \n  link: \n  avatar: \n  descr: ", t.value += "\n```", t.setSelectionRange(15, 15)) : (t.value = "站点名称：\n站点地址：\n头像链接：\n站点描述：", t.setSelectionRange(5, 5)), t.focus()    },    owoBig: () => {        if (!document.getElementById("post-comment") || document.body.clientWidth < 768) return;        let e = 1,            t = "",            o = document.createElement("div"),            n = document.querySelector("body");        o.id = "owo-big", n.appendChild(o), new MutationObserver((l => {            for (let a = 0; a < l.length; a++) {                let i = l[a].addedNodes,                    s = "";                if (2 == i.length && "OwO-body" == i[1].className) s = i[1];                else {                    if (1 != i.length || "tk-comment" != i[0].className) continue;                    s = i[0]                }                s.onmouseover = l => {                    e && ("OwO-body" == s.className && "IMG" == l.target.tagName || "tk-owo-emotion" == l.target.className) && (e = 0, t = setTimeout((() => {                        let e = 3 * l.path[0].clientHeight,                            t = 3 * l.path[0].clientWidth,                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,                            i = l.y - l.offsetY;                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src="${l.target.src}">`                    }), 300))                }, s.onmouseout = () => {                    o.style.display = "none", e = 1, clearTimeout(t)                }            }        })).observe(document.getElementById("post-comment"), {            subtree: !0,            childList: !0        })    },};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/monitoring.js"/>
      <url>/js/monitoring.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener("visibilitychange", function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = "😣走丢了";    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = "🤪欢迎回来" + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});// 设置键盘监听事件document.addEventListener('keydown', function(event) {    // 使用event.keyCode或event.key来检查按下的键是否是F12    if (event.keyCode === 123 || event.key === 'F12') {      // F12键被按下      new Vue({        data: function() {            this.$notify({            title: "你已被发现",            message: "小伙子，扒源请遵循GPL协议！",            position: "top-left",            offset: 50,            showClose: !0,            type: "warning",            duration: 3500                        })                    }                })    }    // 使用event.keyCode或event.key来检查按下的键是否是C，并且同时按下了Ctrl键  if ((event.keyCode === 67 || event.key === 'c') && event.ctrlKey) {    // Ctrl+C组合键被按下    new Vue({        data: function() {            this.$notify({                title: "复制成功",                message: "若要转载最好保留原文链接哦~",                position: "top-left",                offset: 50,                showClose: !0,                type: "warning",                duration: 2500            })        }    })     }  });/* 控制台输出字符画 start */var now1 = new Date();function createtime1() {  // var grt = new Date("28/07/2023 00:00:00"); //此处修改你的建站时间或者网站上线时间  // now1.setTime(now1.getTime() + 250);  // var days = (now1 - grt) / 1000 / 60 / 60 / 24;  // var dnum = Math.floor(days);  var ascll = [    `欢迎来到Alan&博客!`,    "©2023 By Alan",  ];  setTimeout(    console.log.bind(      console,      `\n%c${ascll[0]} %c ${ascll[1]}\n`,      "color:#39c5bb",      "",    )  );}createtime1();function createtime2() {  setTimeout(console.log.bind(console, "%c W23-12 %c 系统监测到你已打开控制台", "color:white; background-color:#4f90d9", ""));  setTimeout(    console.warn.bind(console, "%c S013-782 %c 你现在正处于监控中", "color:white; background-color:#d9534f", "")  );}createtime2();// 重写console方法console.log = function () { };console.error = function () { };console.warn = function () { };/* 控制台输出字符画 end */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[setInterval(() => {    let create_time = Math.round(new Date('2023-07-28 00:00:00').getTime() / 1000); //在此行修改建站时间    let timestamp = Math.round((new Date().getTime()) / 1000);    let second = timestamp - create_time;    let time = new Array(0, 0, 0, 0, 0);    var nol = function (h) {        return h > 9 ? h : '0' + h;    }    if (second >= 365 * 24 * 3600) {        time[0] = parseInt(second / (365 * 24 * 3600));        second %= 365 * 24 * 3600;    }    if (second >= 24 * 3600) {        time[1] = parseInt(second / (24 * 3600));        second %= 24 * 3600;    }    if (second >= 3600) {        time[2] = nol(parseInt(second / 3600));        second %= 3600;    }    if (second >= 60) {        time[3] = nol(parseInt(second / 60));        second %= 60;    }    if (second > 0) {        time[4] = nol(second);    }    if ((Number(time[2]) < 22) && (Number(time[2]) > 7)) {        currentTimeHtml = "<img class='boardsign' src='https://img.shields.io/badge/Alan&屋-摸鱼中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>😎💖本站已经运行了:" + time[0] + ' 年 ' + time[1] + ' 天 ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';    }    else {        currentTimeHtml = "<img class='boardsign' src='https://img.shields.io/badge/Alan&屋-安眠中-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，晚安好梦~'><div id='runtime'>😎💖本站已经运行了:" + time[0] + ' 年 ' + time[1] + ' 天 ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';    }    document.getElementById("workboard").innerHTML = currentTimeHtml;}, 1000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[// 夜间模式流星特效function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/directory/about/index.html"/>
      <url>/directory/about/index.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding modern"><i class="note-icon fas fa-fan"></i><p>💌欢迎来到我的博客~~</p></div><hr><span class='p center logo large blue'>关于Blog📃</span><h1 id="1-Blog🏳"><a href="#1-Blog🏳" class="headerlink" title="1.Blog🏳"></a>1.Blog🏳</h1><ul><li>名称：Alan&amp;Blog</li><li>网址：<a href="https://www.alanblog.cn/">https://www.alanblog.cn/</a></li><li>部署时间：2023-07-30</li></ul><h1 id="2-部署线路🏳‍🌈"><a href="#2-部署线路🏳‍🌈" class="headerlink" title="2.部署线路🏳‍🌈"></a>2.部署线路🏳‍🌈</h1><ul><li><p><strong>本网站采用双线程部署</strong></p></li><li><p>主域名：<span class='p blue'>alanblog.cn</span><br>  解析至Vercel，Vercel有全球的泛播节点，兼具全球CDN功能，国内访问速度较快。<br>  Vercel网址：<a href="https://vercel.com/">https://vercel.com/</a></p></li><li><p>初始域名：<span class='p blue'>lanxin1216.github.io</span><br>  直接连接至GitHub，通过GitHub Pages部署，国内访问速度比较慢。<br>  GitHub网址：<a href="https://github.com/">https://github.com/</a><br>  GitHub Pages网址：<a href="https://pages.github.com/">https://pages.github.com/</a></p></li><li><p><strong>Alan&amp;Note</strong></p></li><li><p>域名:<a href="https://note.alanblog.cn/">https://note.alanblog.cn/</a><br>  部署至<a href="https://vercel.com/">Vercel</a></p></li><li><p><strong>以上所有线路均支持HTTPS协议</strong></p></li></ul><h1 id="3-技术栈-框架🏁"><a href="#3-技术栈-框架🏁" class="headerlink" title="3.技术栈&amp;框架🏁"></a>3.技术栈&amp;框架🏁</h1><ul><li>博客框架：<a href="https://github.com/hexojs/hexo">Hexo 6.3.0</a></li><li>主题：<a href="https://butterfly.js.org/">Butterfly 4.9.0</a></li><li>源码仓库：<a href="https://github.com/">Github</a></li><li>托管与部署：<a href="https://github.com/">Github </a>托管，采用双线部署： <a href="https://vercel.com/">Vercel</a> + <a href="https://pages.github.com/">Github Pages</a> 部署</li><li><del>评论系统：<a href="https://twikoo.js.org/">Twikoo </a>系统 + <a href="https://vercel.com/">Vercel</a> 部署 + <a href="https://www.mongodb.com/">MongoDB </a>提供存储服务</del></li><li>图床：<a href="https://github.com/">GitHub</a> + <a href="https://www.upyun.com/">又拍云</a> + <a href="https://www.dogecast.com/">缤纷云</a> + <a href="https://cdnjson.com/">CDN加速图床-路过图床-Hello图床</a></li><li>CDN：<del><a href="https://www.jsdelivr.com/">JsDelivr</a></del> + <a href="https://www.upyun.com/">又拍云</a> + <a href="https://staticfile.org/">Staticfile CDN</a> 等</li><li>自动部署：<a href="https://git-scm.com/">Git 钩子</a> + <del><a href="https://docs.github.com/zh/actions">Github Action</a></del></li><li><del>后台管理：<a href="https://www.oplog.cn/qexo/">Qexo</a>在线 静态博客 管理器 + <a href="https://vercel.com/">Vercel</a> 部署 + <a href="https://www.mongodb.com/">MongoDB </a>提供存储服务</del></li><li>数据统计：<a href="https://aoaoao.info/321.html">不蒜子</a> + <del><a href="https://tongji.baidu.com/">百度统计</a></del> + <a href="https://www.51.la/">51.LA</a></li><li>网站监测分析：<a href="https://perf.51.la/">灵雀应用监控平台 - 「51LA」旗下应用监控分析平台</a></li><li>开发语言：HTML5 + CSS3 + JavaScript + Pug + YML等</li><li>版权声明：详见<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a></li></ul><h1 id="4-技术大佬🚩"><a href="#4-技术大佬🚩" class="headerlink" title="4.技术大佬🚩"></a>4.技术大佬🚩</h1><blockquote><p>该站搭建过程中，参考了以下技术大佬&amp;优秀博主提供的优秀文章&amp;开源项目。</p></blockquote><div class="btns circle grid5">            <a class="button" href='https://akilar.top' title='Akilar@糖果屋'><img src='https://cdnjson.com/images/2023/09/25/Akilar.webp'>Akilar@糖果屋</a><a class="button" href='https://blog.anheyu.com' title='安知鱼'><img src='https://cdnjson.com/images/2023/09/25/avatar.webp'>安知鱼</a><a class="button" href='https://www.fomal.cc' title='Fomalhaut🥝'><img src='https://cdnjson.com/images/2023/09/25/r1.webp'>Fomalhaut🥝</a><a class="button" href='https://zfe.space' title='小冰博客'><img src='https://cdnjson.com/images/2023/09/25/headimage.webp'>小冰博客</a><a class="button" href='https://blog.eurkon.com' title='Eurkon'><img src='https://cdnjson.com/images/2023/09/25/anzy.webp'>Eurkon</a>          </div><h1 id="5-日志🏴"><a href="#5-日志🏴" class="headerlink" title="5.日志🏴"></a>5.日志🏴</h1><blockquote><p>日志记录网站的维护 &amp; 更新 &amp; 大事件。<br>点击以下“日志”跳转到日志页面查看：<br>      查看：<a href="https://www.alanblog.cn/directory/site/log/">日志</a></p></blockquote><hr><span class='p center logo large blue'>关于本人📜</span><ul><li><p><strong>昵称</strong>：Alan</p></li><li><p><strong>性别</strong>：♂</p></li><li><p><strong>身份</strong>：学生，冰城某高校数据科学与大数据技术在读本科生</p></li><li><p><strong>地点</strong>：生于江南水乡，求学于冰城</p></li><li><p><strong>技能</strong>：</p><p>   （正在努力学习增长技能中 ······）</p><ul><li>学习中：<a href="https://www.alanblog.cn/directory/learn/">学习表</a></li></ul></li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><div class="tip "><p>该博客的所有文章仅仅本人学习过程中记录的笔记、分享一些经验与想法。</p></div><div class="tip "><p>有部分内容参考互联网上的诸位大神</p></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>学习表</title>
      <link href="/directory/learn/index.html"/>
      <url>/directory/learn/index.html</url>
      
        <content type="html"><![CDATA[<div class="tip sync"><p><strong>对手的成功时刻警醒着，依然在路上努力。。。。。。</strong></p></div><hr><div class="tip "><p><strong>技能表格持续增长中…</strong></p></div><h2 id="🚀🚀"><a href="#🚀🚀" class="headerlink" title="🚀🚀"></a>🚀🚀</h2><div class="note success flat"><p><strong>已学习技能…</strong></p></div><table><thead><tr><th><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>🏆🏆🏆</p>            </div></th><th></th><th></th></tr></thead><tbody><tr><td><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>C语言</p>            </div></td><td></td><td><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>Affinity三件套（Publisher、Photo、Designer）</p>            </div></td></tr><tr><td><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>Linux</p>            </div></td><td></td><td><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>Java</p>            </div></td></tr><tr><td><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>Git</p>            </div></td><td></td><td><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>大数据概论</p>            </div></td></tr><tr><td><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>数字逻辑 } | | {% checkbox green checked</p>            </div></td><td></td><td></td></tr><tr><td><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>数据库基础</p>            </div></td><td></td><td></td></tr></tbody></table><h2 id="✈✈"><a href="#✈✈" class="headerlink" title="✈✈"></a>✈✈</h2><div class="note primary flat"><p><strong>学习中…</strong></p></div><table><thead><tr><th><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>🥇🥇🥇</p>            </div></th><th></th><th></th></tr></thead><tbody><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>HTML</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>CS</p>            </div></td></tr><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>JSP</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>Hadoop</p>            </div></td></tr><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>数据结构与算法</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>Markdown</p>            </div></td></tr><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>JS</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>&amp;</p>            </div></td></tr><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>&amp;</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>&amp;</p>            </div></td></tr><tr><td><div class='checkbox cyan'><input type="checkbox" />            <p>&amp;</p>            </div></td><td></td><td><div class='checkbox cyan'><input type="checkbox" />            <p>&amp;</p>            </div></td></tr></tbody></table><h2 id="🚁🚁"><a href="#🚁🚁" class="headerlink" title="🚁🚁"></a>🚁🚁</h2><div class="note info flat"><p><strong>待学习…</strong></p></div><table><thead><tr><th><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>🥈🥈🥈</p>            </div></th><th></th><th></th></tr></thead><tbody><tr><td><div class='checkbox red'><input type="checkbox" />            <p>Hadoop</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>MySOL</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>MapReduce</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>Hive</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>spark</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>HDFS</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>Hbase</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>数据挖掘</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>机器学习</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>分布式数据库</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>数据导入与预处理</p>            </div></td><td></td><td><div class='checkbox red'><input type="checkbox" />            <p>数据可视化技术</p>            </div></td></tr><tr><td><div class='checkbox red'><input type="checkbox" />            <p>大数据存储与管理</p>            </div></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/directory/link/index.html"/>
      <url>/directory/link/index.html</url>
      
        <content type="html"><![CDATA[<hr><h1 id="欢迎添加本站友链🍔"><a href="#欢迎添加本站友链🍔" class="headerlink" title="欢迎添加本站友链🍔"></a>欢迎添加本站友链🍔</h1><h1 id="本站友链🍟"><a href="#本站友链🍟" class="headerlink" title="本站友链🍟"></a>本站友链🍟</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Alan&amp;Blog</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">https://www.alanblog.cn/</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://alan.s3.bitiful.net/img/avatar.png</span></span><br><span class="line">  <span class="attr">descr:</span> <span class="string">学习笔记，计算机技术分享</span></span><br></pre></td></tr></table></figure><h1 id="申请格式🌭"><a href="#申请格式🌭" class="headerlink" title="申请格式🌭"></a>申请格式🌭</h1><p><strong>（添加友链格式如下，siteshot为站点背景）</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="comment">#站点名称</span></span><br><span class="line">  <span class="attr">link:</span> <span class="comment">#站点链接</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="comment">#站长头像</span></span><br><span class="line">  <span class="attr">descr:</span> <span class="comment">#站点描述</span></span><br></pre></td></tr></table></figure><div class="tip "><p>由于本站已经关闭评论系统，添加友链直接邮件至：<a href="mailto:&#x33;&#48;&#x32;&#57;&#57;&#57;&#55;&#x30;&#50;&#53;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#x6d;">&#x33;&#48;&#x32;&#57;&#57;&#57;&#55;&#x30;&#50;&#53;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#x6d;</a> (2023&#x2F;11&#x2F;*)！</p></div><blockquote><p>注意： </p><blockquote><p>1、本站支持交换友链，在您提出申请之前，请将本站添加至友链；<br>2、为了保障本站用户，本站仅支持个人网站的友链申请；<br>3、申请本站友链需要拥有独立域名（非免费域名），建议开启全站HTTPS；<br><del>4、下面按钮，快速申请友链。</del>（快捷方式已经删除）</p></blockquote></blockquote><blockquote><p>欢迎更多的小伙伴互加，一起学习一起成长~~~🥪🌮🥤</p></blockquote><!-- <div class="addBtn"> <button onclick="leonus.linkCom(&quot;bf&quot;)"><i class="fa-solid fa-circle-plus"></i>快速申请 (Butterfly)</button> <button onclick="leonus.linkCom()"><i class="fa-solid fa-circle-plus"></i>快速申请 (默认样式)</button></div><link rel="stylesheet" href="/css/kslink.css"><script src="/js/kslink.js"></script> -->]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>网站链接</title>
      <link href="/directory/website/index.html"/>
      <url>/directory/website/index.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="site-card-group"><a class="site-card" href="链接"><div class="img"><img src="截图链接"/></div><div class="info"><img src="头像链接（可选）"/><span class="title">标题</span><span class="desc">描述（可选）</span></div></a></div> --><span class='p center logo large blue'>一些优秀的网站💻</span><blockquote><p>以下是一些在学习过程中遇到的宝藏网站  </p></blockquote><hr><h1 id="技术支持🖥"><a href="#技术支持🖥" class="headerlink" title="技术支持🖥"></a>技术支持🖥</h1><div class="site-card-group"><a class="site-card" href="https://hexo.io/zh-cn/index.html"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/hexo.webp"/></div><div class="info"><span class="title">Hexo</span><span class="desc">快速、简洁且高效的博客框架</span></div></a><a class="site-card" href="https://pages.github.com/"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/pages.webp"/></div><div class="info"><span class="title">GitHub pages</span><span class="desc">Websites for you and your projects.</span></div></a><a class="site-card" href="https://docs.github.com/zh/actions"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/Actions.webp"/></div><div class="info"><span class="title">GitHub Actions</span><span class="desc">自动化、自定义和执行软件开发工作流程</span></div></a><a class="site-card" href="https://www.jsdelivr.com/"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/jsDelivr.webp"/></div><div class="info"><span class="title">JsDelivr</span><span class="desc">A free CDN for open source projects</span></div></a><a class="site-card" href="https://www.mongodb.com/zh-cn"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/mongodb.webp"/></div><div class="info"><span class="title">MongoDB</span><span class="desc">开源数据库，构建更快速,构建更智能。</span></div></a><a class="site-card" href="https://twikoo.js.org/"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/twikoo.webp"/></div><div class="info"><span class="title">Twikoo</span><span class="desc">一个简洁、安全、免费的静态网站评论系统。</span></div></a><a class="site-card" href="https://tongji.baidu.com/web5/welcome/login"><div class="img"><img src="https://cdnjson.com/images/2023/09/25/baidu.webp"/></div><div class="info"><span class="title">百度统计</span><span class="desc">一站式智能数据分析于应用平台</span></div></a></div><h1 id="计算机学习⌨"><a href="#计算机学习⌨" class="headerlink" title="计算机学习⌨"></a>计算机学习⌨</h1><!-- <div class="site-card-group"><a class="site-card" href="链接"><div class="img"><img src="截图链接"/></div><div class="info"><img src="头像链接（可选）"/><span class="title">标题</span><span class="desc">描述（可选）</span></div></a><a class="site-card" href="链接"><div class="img"><img src="截图链接"/></div><div class="info"><img src="头像链接（可选）"/><span class="title">标题</span><span class="desc">描述（可选）</span></div></a></div> --><h1 id="其他优秀的网站💽"><a href="#其他优秀的网站💽" class="headerlink" title="其他优秀的网站💽"></a>其他优秀的网站💽</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>文章统计</title>
      <link href="/directory/site/charts/index.html"/>
      <url>/directory/site/charts/index.html</url>
      
        <content type="html"><![CDATA[<span class='p center small blue'>GitHub贡献图☕</span><!-- GitCalendar容器 --><div id="gitZone"></div><!-- 文章发布时间统计图 --><div id="posts-chart" data-start="2023-01" style="border-radius: 8px; height: 300px; padding: 10px;"></div><!-- 文章标签统计图 --><div id="tags-chart" data-length="10" style="border-radius: 8px; height: 300px; padding: 10px;"></div><!-- 文章分类统计图 --><div id="categories-chart" data-parent="true" style="border-radius: 8px; height: 300px; padding: 10px;"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>日志</title>
      <link href="/directory/site/log/index.html"/>
      <url>/directory/site/log/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>说明：</p><blockquote><p>网站的维护 &amp; 更新记录日志。</p></blockquote></blockquote><hr><hr><div class="timeline blue]"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>日志时间轴 [</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-01-05 [修改]</p></div></div><div class='timeline-item-content'><ul><li>v1.6.2<br>1、关闭侧边栏访客数<br>2、修改部分信息</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-11-20 [优化]</p></div></div><div class='timeline-item-content'><ul><li>v1.6.1<br>1、停止使用51.la统计<br>2、删除网站统计页</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-11-10 [优化]</p></div></div><div class='timeline-item-content'><ul><li>v1.6.0<br>1、对加载进行优化<br>2、优化无用代码</li><li>① 删除页脚计时器字体加载（字体文件过大，拖慢页面加载）</li><li>② 删除友情链接的快速申请（删除runtime.css）</li><li>③ 删除custom.css中的关于评论处的设置代码<br>3、cdn替换掉jsdelivr，使用staticfile（七牛&#x2F;掘金）<br>4、更新信息（友链头像、部署信息、页脚徽标、更新友链）</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-11-08 [修改]</p></div></div><div class='timeline-item-content'><ul><li>v1.5.1<br>1、优化背景<br>2、移除wowjs动画<br>3、移除百度统计<br>4、修改部分信息</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-11-07 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.5.0<br>1、删除hexo-offline-popup（弹窗有问题）<br>2、移除留言页<br>3、移除评论系统，关闭Twikoo<br>4、背景加入一图流设置，更换背景</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-10-29 [修改]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.8<br>1、修复更新弹窗不收回的问题<br>2、<del>取消GitHub Pages部署，改为单点部署在Vercel</del><br>3、重新部署至Vercel<br>4、修改部分显示</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-10-29 [修改]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.7<br>1、加入hexo-offline-popup（提升hexo框架博客访问速度，以及网站内容更新弹窗提示。）<br>2、加入Gulp对资源进行压缩，提高加载速度<br>3、对源码本地图片进行压缩</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-10-24 [部署&amp;修改]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.6<br>1、开始构建第二网站，note网站<br>2、Vercel部署Alan&amp;Note站<br>3、注销Qexo后台管理<br>4、修改主页、关于页部分信息</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-10-16 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.5<br>1、修改部分显示信息</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-26 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.4<br>1、由于Pjax出现许多莫名其妙的Bug，js无法加载，关闭Pjax<br>2、去除安知鱼时钟<br>3、修改页脚徽标<br>4、修改文章的图片链接<br>5、完善学习表页面</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-25 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.3<br>1、设置Pjax实现网站无刷新化<br>2、修改部分错别字<br>3、对图片资源重新压缩上传图床<br>4、移动部分GitHub储存的图片至<a href="https://cdnjson.com/">CDN加速图床-路过图床-Hello图床</a><br>5、修改关于页面、友链页面、网站页面、两篇文章的图片URL<br>6、优化了网站的页面加载速度<br>7、修复部分js加载问题</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-21 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.2<br>1、打开主题颜色自动转换，早六晚十切换。</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-19 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.1<br>1、将图片资源逐步部署到缤纷云储存库（图床）<br>2、将部分资源部署到又拍云<br>3、减少使用GitHub图床,逐步修改对应的图片资源访问链接</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-18 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.4.0<br>1、接入Qexo后台管理博客</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-09-04 [修复]</p></div></div><div class='timeline-item-content'><ul><li>v1.3.3<br>1、修改文章目录结构<br>2、设置Vue+Element样式弹窗<br>3、修复部分页面404</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-31 [更新]</p></div></div><div class='timeline-item-content'><ul><li>v1.3.2<br>1、首页电子时钟定位不准，关闭首页电子时钟<br>2、修改力扣处图标不显示<br>3、对首页目录页面文件夹等进行修改，规范文件夹</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-20 [完善网站]</p></div></div><div class='timeline-item-content'><ul><li>v1.3.1<br>1、增加夜间模式霓虹灯、流星特效；<br>2、修复Github上传图API出现跨域，无法加载</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-19 [完善网站]</p></div></div><div class='timeline-item-content'><ul><li>v1.3.0<br>1、接入51.La提供的网站访客统计；<br>2、接入51LA · 灵雀应用监控平台，提供网站错误监控服务；<br>3、设置博客文章可加密代码；<br>4、增加网站数据统计页面；<br>5、网站统计页面加入Github贡献图（安知鱼教程）；<br>6、改正公告文字和部分文字错误等问题。</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-04 [部署 &amp; 修复]</p></div></div><div class='timeline-item-content'><ul><li>v1.2.1<br>1、修改链接页面，新增网站链接页面，初次完善友情链接、网站链接<br>2、source&#x2F;_data目录下增加link.yml，管理友情链接。</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-03 [部署 &amp; 修复]</p></div></div><div class='timeline-item-content'><ul><li>v1.2.0<br>1、新增日志页面。<br>2、编写关于页面的相关资料。<br>3、修复&amp;更改页脚徽标显示。</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-08-01 [Alan&amp;Blog部署]</p></div></div><div class='timeline-item-content'><ul><li>v1.1.0<br>1、拥有域名，解析Blog专有域名。<br>2、将域名解析到Vercel。<br>3、接入Twikoo评论系统。<br>4、接入百度数据统计。</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-29 [Alan&amp;Blog&amp;部署]</p></div></div><div class='timeline-item-content'><ul><li>v1.0.0<br>1、部署至Vercel。<br>2、完成Github Action自动部署</li></ul></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-28 [Alan&amp;Blog部署]</p></div></div><div class='timeline-item-content'><p>1、项目源码储存至GitHub，部署至GitHub Pages。<br>2、可以使用Github的初始域名访问。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-07-26 [Alan&amp;Blog开始部署]</p></div></div><div class='timeline-item-content'><p>Alan&amp;Blog正式开始设计部署。</p></div></div></div>]]></content>
      
    </entry>
    
    
  
</search>
